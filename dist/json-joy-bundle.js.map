{"version":3,"file":"index.js","sources":["../node_modules/json-joy/esm/json-crdt-patch/clock/clock.js","../node_modules/json-joy/esm/json-crdt/nodes/const/ConNode.js","../node_modules/json-joy/esm/util/print/printTree.js","../node_modules/json-joy/esm/json-crdt-patch/operations.js","../node_modules/json-joy/esm/json-crdt-patch/codec/clock/RelativeTimestamp.js","../node_modules/json-joy/esm/json-crdt-patch/codec/clock/ClockEncoder.js","../node_modules/json-joy/esm/util/buffers/Slice.js","../node_modules/json-joy/esm/util/buffers/Writer.js","../node_modules/json-joy/esm/json-crdt-patch/util/binary/CrdtWriter.js","../node_modules/json-joy/esm/util/buffers/isFloat32.js","../node_modules/json-joy/esm/json-pack/JsonPackExtension.js","../node_modules/json-joy/esm/json-pack/cbor/CborEncoderFast.js","../node_modules/json-joy/esm/json-pack/cbor/CborEncoder.js","../node_modules/json-joy/esm/json-crdt/codec/structural/binary/Encoder.js","../node_modules/json-joy/esm/json-crdt-patch/codec/clock/ClockDecoder.js","../node_modules/json-joy/esm/util/buffers/utf8/decodeAscii.js","../node_modules/json-joy/esm/util/buffers/utf8/decodeUtf8/v18.js","../node_modules/json-joy/esm/util/buffers/utf8/decodeUtf8/v16.js","../node_modules/json-joy/esm/util/buffers/Reader.js","../node_modules/json-joy/esm/json-crdt-patch/util/binary/CrdtReader.js","../node_modules/json-joy/esm/util/buffers/f16.js","../node_modules/json-joy/esm/json-pack/JsonPackValue.js","../node_modules/json-joy/esm/util/buffers/utf8/decodeUtf8/v10.js","../node_modules/hyperdyperid/lib/randomU32.js","../node_modules/json-joy/esm/util/buffers/utf8/CachedUtf8Decoder.js","../node_modules/json-joy/esm/util/buffers/utf8/sharedCachedUtf8Decoder.js","../node_modules/json-joy/esm/json-pack/cbor/CborDecoderBase.js","../node_modules/json-joy/esm/json-crdt/codec/structural/binary/Decoder.js","../node_modules/json-joy/esm/json-crdt/codec/structural/binary/shared.js","../node_modules/thingies/es2020/fanout.js","../node_modules/json-joy/esm/json-pointer/util.js","../node_modules/json-joy/esm/json-crdt/model/api/find.js","../node_modules/json-joy/esm/json-crdt/model/api/fanout.js","../node_modules/json-joy/esm/json-crdt/model/api/NodeEvents.js","../node_modules/json-joy/esm/json-crdt/model/api/nodes.js","../node_modules/json-joy/esm/util/buffers/isUint8Array.js","../node_modules/json-joy/esm/json-crdt-patch/codec/binary/Encoder.js","../node_modules/json-joy/esm/json-pack/cbor/CborDecoder.js","../node_modules/json-joy/esm/json-crdt-patch/codec/binary/Decoder.js","../node_modules/json-joy/esm/json-crdt-patch/codec/binary/shared.js","../node_modules/json-joy/esm/json-crdt-patch/Patch.js","../node_modules/json-joy/esm/json-crdt-patch/constants.js","../node_modules/json-joy/esm/json-crdt-patch/builder/Tuple.js","../node_modules/json-joy/esm/json-crdt-patch/builder/Konst.js","../node_modules/json-joy/esm/json-crdt-patch/builder/DelayedValueBuilder.js","../node_modules/json-joy/esm/json-crdt-patch/PatchBuilder.js","../node_modules/json-joy/esm/json-crdt/model/api/ModelApi.js","../node_modules/json-joy/esm/json-crdt/model/util.js","../node_modules/json-joy/esm/json-crdt/extensions/Extensions.js","../node_modules/json-joy/esm/json-text/stringify.js","../node_modules/json-joy/esm/util/print/printBinary.js","../node_modules/json-joy/esm/util/trees/avl/util.js","../node_modules/json-joy/esm/util/trees/util.js","../node_modules/json-joy/esm/util/trees/avl/AvlMap.js","../node_modules/json-joy/esm/json-crdt/model/Model.js","../node_modules/json-joy/esm/json-crdt/nodes/val/ValNode.js","../node_modules/json-joy/esm/json-crdt/nodes/root/RootNode.js","../node_modules/json-joy/esm/json-crdt/nodes/vec/VecNode.js","../node_modules/json-joy/esm/json-crdt/nodes/obj/ObjNode.js","../node_modules/json-joy/esm/util/trees/splay/util.js","../node_modules/json-joy/esm/util/trees/splay/util2.js","../node_modules/json-joy/esm/util/trees/util2.js","../node_modules/json-joy/esm/util/buffers/printOctets.js","../node_modules/json-joy/esm/json-crdt/nodes/rga/AbstractRga.js","../node_modules/json-joy/esm/json-crdt/nodes/arr/ArrNode.js","../node_modules/json-joy/esm/json-crdt/nodes/bin/BinNode.js","../node_modules/json-joy/esm/json-crdt/nodes/str/StrNode.js","../node_modules/json-joy/esm/json-crdt-patch/builder/schema.js","../node_modules/tslib/tslib.es6.mjs","../node_modules/json-joy/es2020/json-crdt-patch/types.js","../node_modules/json-joy/es2020/json-crdt-patch/clock/types.js","../node_modules/json-joy/es2020/json-crdt-patch/clock/clock.js","../node_modules/json-joy/es2020/json-crdt-patch/clock/index.js","../node_modules/json-joy/es2020/json-crdt-patch/operations.js","../node_modules/json-joy/es2020/util/buffers/Slice.js","../node_modules/json-joy/es2020/util/buffers/Writer.js","../node_modules/json-joy/es2020/json-crdt-patch/util/binary/CrdtWriter.js","../node_modules/json-joy/es2020/util/buffers/isFloat32.js","../node_modules/json-joy/es2020/json-pack/JsonPackExtension.js","../node_modules/json-joy/es2020/json-pack/cbor/CborEncoderFast.js","../node_modules/json-joy/es2020/json-pack/cbor/CborEncoder.js","../node_modules/json-joy/es2020/json-crdt-patch/codec/binary/Encoder.js","../node_modules/json-joy/es2020/util/buffers/utf8/decodeAscii.js","../node_modules/json-joy/es2020/util/buffers/utf8/decodeUtf8/v18.js","../node_modules/json-joy/es2020/util/buffers/utf8/decodeUtf8/v16.js","../node_modules/json-joy/es2020/util/buffers/utf8/decodeUtf8/index.js","../node_modules/json-joy/es2020/util/buffers/Reader.js","../node_modules/json-joy/es2020/json-crdt-patch/util/binary/CrdtReader.js","../node_modules/json-joy/es2020/util/buffers/isUint8Array.js","../node_modules/json-joy/es2020/json-crdt-patch/constants.js","../node_modules/json-joy/es2020/json-crdt-patch/builder/Tuple.js","../node_modules/json-joy/es2020/json-crdt-patch/builder/Konst.js","../node_modules/json-joy/es2020/json-crdt-patch/builder/DelayedValueBuilder.js","../node_modules/json-joy/es2020/json-crdt-patch/PatchBuilder.js","../node_modules/json-joy/es2020/util/buffers/f16.js","../node_modules/json-joy/es2020/json-pack/JsonPackValue.js","../node_modules/json-joy/es2020/util/buffers/utf8/decodeUtf8/v10.js","../node_modules/json-joy/es2020/util/buffers/utf8/CachedUtf8Decoder.js","../node_modules/json-joy/es2020/util/buffers/utf8/sharedCachedUtf8Decoder.js","../node_modules/json-joy/es2020/json-pack/cbor/CborDecoderBase.js","../node_modules/json-joy/es2020/json-pack/cbor/CborDecoder.js","../node_modules/json-joy/es2020/json-crdt-patch/codec/binary/Decoder.js","../node_modules/json-joy/es2020/json-crdt-patch/codec/binary/shared.js","../node_modules/json-joy/es2020/json-crdt-patch/codec/binary/index.js","../node_modules/json-joy/es2020/json-crdt-patch/Patch.js","../node_modules/json-joy/es2020/json-crdt-patch/builder/schema.js","../node_modules/json-joy/es2020/json-crdt-patch/index.js","../src/json-joy-bundle.ts"],"sourcesContent":["export class Timestamp {\n    sid;\n    time;\n    constructor(sid, time) {\n        this.sid = sid;\n        this.time = time;\n    }\n}\nexport class Timespan {\n    sid;\n    time;\n    span;\n    constructor(sid, time, span) {\n        this.sid = sid;\n        this.time = time;\n        this.span = span;\n    }\n}\nexport const ts = (sid, time) => new Timestamp(sid, time);\nexport const tss = (sid, time, span) => new Timespan(sid, time, span);\nexport const tick = (stamp, cycles) => ts(stamp.sid, stamp.time + cycles);\nexport const equal = (ts1, ts2) => ts1.time === ts2.time && ts1.sid === ts2.sid;\nexport const compare = (ts1, ts2) => {\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return 1;\n    if (t1 < t2)\n        return -1;\n    const s1 = ts1.sid;\n    const s2 = ts2.sid;\n    if (s1 > s2)\n        return 1;\n    if (s1 < s2)\n        return -1;\n    return 0;\n};\nexport const contains = (ts1, span1, ts2, span2) => {\n    if (ts1.sid !== ts2.sid)\n        return false;\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return false;\n    if (t1 + span1 < t2 + span2)\n        return false;\n    return true;\n};\nexport const containsId = (ts1, span1, ts2) => {\n    if (ts1.sid !== ts2.sid)\n        return false;\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return false;\n    if (t1 + span1 < t2 + 1)\n        return false;\n    return true;\n};\nexport const toDisplayString = (id) => {\n    if (id.sid === 1)\n        return '.' + id.time;\n    let session = '' + id.sid;\n    if (session.length > 4)\n        session = '..' + session.slice(session.length - 4);\n    return session + '.' + id.time;\n};\nexport const interval = (ts, tick, span) => new Timespan(ts.sid, ts.time + tick, span);\nexport class LogicalClock extends Timestamp {\n    tick(cycles) {\n        const timestamp = new Timestamp(this.sid, this.time);\n        this.time += cycles;\n        return timestamp;\n    }\n}\nexport class ClockVector extends LogicalClock {\n    peers = new Map();\n    observe(id, span) {\n        const edge = id.time + span - 1;\n        const sid = id.sid;\n        if (sid !== this.sid) {\n            const clock = this.peers.get(id.sid);\n            if (!clock)\n                this.peers.set(id.sid, ts(sid, edge));\n            else if (edge > clock.time)\n                clock.time = edge;\n        }\n        if (edge >= this.time)\n            this.time = edge + 1;\n    }\n    clone() {\n        return this.fork(this.sid);\n    }\n    fork(sessionId) {\n        const clock = new ClockVector(sessionId, this.time);\n        if (sessionId !== this.sid)\n            clock.observe(tick(this, -1), 1);\n        this.peers.forEach((peer) => {\n            clock.observe(peer, 1);\n        });\n        return clock;\n    }\n    toString(tab = '') {\n        const last = this.peers.size;\n        let i = 1;\n        let lines = '';\n        this.peers.forEach((clock) => {\n            const isLast = i === last;\n            lines += `\\n${tab}${isLast ? 'ââ' : 'ââ'} ${clock.sid}.${clock.time}`;\n            i++;\n        });\n        return `clock ${this.sid}.${this.time}${lines}`;\n    }\n}\nexport class ServerClockVector extends LogicalClock {\n    peers = new Map();\n    observe(ts, span) {\n        if (ts.sid !== 1)\n            throw new Error('INVALID_SERVER_SESSION');\n        if (this.time < ts.time)\n            throw new Error('TIME_TRAVEL');\n        const time = ts.time + span;\n        if (time > this.time)\n            this.time = time;\n    }\n    clone() {\n        return this.fork();\n    }\n    fork() {\n        return new ServerClockVector(1, this.time);\n    }\n    toString() {\n        return `clock ${this.sid}.${this.time}`;\n    }\n}\n","import { toDisplayString, Timestamp } from '../../../json-crdt-patch/clock';\nexport class ConNode {\n    id;\n    val;\n    constructor(id, val) {\n        this.id = id;\n        this.val = val;\n    }\n    children() { }\n    child() {\n        return undefined;\n    }\n    container() {\n        return undefined;\n    }\n    view() {\n        return this.val;\n    }\n    api = undefined;\n    name() {\n        return 'con';\n    }\n    toString(tab) {\n        const val = this.val;\n        const valFormatted = val instanceof Uint8Array\n            ? `Uint8Array { ${('' + val).replaceAll(',', ', ')} }`\n            : `{ ${val instanceof Timestamp ? toDisplayString(val) : JSON.stringify(val)} }`;\n        return `${this.name()} ${toDisplayString(this.id)} ${valFormatted}`;\n    }\n}\n","export const printTree = (tab = '', children) => {\n    children = children.filter(Boolean);\n    let str = '';\n    for (let i = 0; i < children.length; i++) {\n        const isLast = i >= children.length - 1;\n        const fn = children[i];\n        if (!fn)\n            continue;\n        const child = fn(tab + `${isLast ? ' ' : 'â'}  `);\n        const branch = child ? (isLast ? 'ââ' : 'ââ') : 'â ';\n        str += `\\n${tab}${branch} ${child}`;\n    }\n    return str;\n};\n","import { Timestamp, toDisplayString } from './clock';\nexport class NewConOp {\n    id;\n    val;\n    constructor(id, val) {\n        this.id = id;\n        this.val = val;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_con';\n    }\n    toString(tab = '') {\n        const val = this.val;\n        const valFormatted = val instanceof Timestamp\n            ? `{ ${toDisplayString(val)} }`\n            : val instanceof Uint8Array\n                ? val.length < 13\n                    ? `Uint8Array { ${('' + val).replaceAll(',', ', ')} }`\n                    : `Uint8Array(${val.length})`\n                : `{ ${JSON.stringify(val)} }`;\n        return `${this.name()} ${toDisplayString(this.id)} ${valFormatted}`;\n    }\n}\nexport class NewValOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_val';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class NewObjOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_obj';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class NewVecOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_vec';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class NewStrOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_str';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class NewBinOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_bin';\n    }\n    toString(tab = '') {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class NewArrOp {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_arr';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}`;\n    }\n}\nexport class InsValOp {\n    id;\n    obj;\n    val;\n    constructor(id, obj, val) {\n        this.id = id;\n        this.obj = obj;\n        this.val = val;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_val';\n    }\n    toString(tab = '') {\n        return `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)}, val = ${toDisplayString(this.val)}`;\n    }\n}\nexport class InsObjOp {\n    id;\n    obj;\n    data;\n    constructor(id, obj, data) {\n        this.id = id;\n        this.obj = obj;\n        this.data = data;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_obj';\n    }\n    toString(tab = '') {\n        let out = `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)}`;\n        for (let i = 0; i < this.data.length; i++) {\n            const isLast = i === this.data.length - 1;\n            out += `\\n${tab}  ${isLast ? 'ââ' : 'ââ'} ${JSON.stringify(this.data[i][0])}: ${toDisplayString(this.data[i][1])}`;\n        }\n        return out;\n    }\n}\nexport class InsVecOp {\n    id;\n    obj;\n    data;\n    constructor(id, obj, data) {\n        this.id = id;\n        this.obj = obj;\n        this.data = data;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_vec';\n    }\n    toString(tab = '') {\n        let out = `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)}`;\n        for (let i = 0; i < this.data.length; i++) {\n            const isLast = i === this.data.length - 1;\n            out += `\\n${tab}  ${isLast ? 'ââ' : 'ââ'} ${JSON.stringify(this.data[i][0])}: ${toDisplayString(this.data[i][1])}`;\n        }\n        return out;\n    }\n}\nexport class InsStrOp {\n    id;\n    obj;\n    ref;\n    data;\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_str';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)} { ${toDisplayString(this.ref)} â ${JSON.stringify(this.data)} }`;\n    }\n}\nexport class InsBinOp {\n    id;\n    obj;\n    ref;\n    data;\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_bin';\n    }\n    toString(tab = '') {\n        const ref = toDisplayString(this.ref);\n        return `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)} { ${ref} â ${this.data} }`;\n    }\n}\nexport class InsArrOp {\n    id;\n    obj;\n    ref;\n    data;\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_arr';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}!${this.span()}, obj = ${toDisplayString(this.obj)} { ${toDisplayString(this.ref)} â ${this.data.map(toDisplayString).join(', ')} }`;\n    }\n}\nexport class DelOp {\n    id;\n    obj;\n    what;\n    constructor(id, obj, what) {\n        this.id = id;\n        this.obj = obj;\n        this.what = what;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'del';\n    }\n    toString() {\n        const spans = this.what.map((span) => toDisplayString(span) + '!' + span.span).join(', ');\n        return `${this.name()} ${toDisplayString(this.id)}, obj = ${toDisplayString(this.obj)} { ${spans} }`;\n    }\n}\nexport class NopOp {\n    id;\n    len;\n    constructor(id, len) {\n        this.id = id;\n        this.len = len;\n    }\n    span() {\n        return this.len;\n    }\n    name() {\n        return 'nop';\n    }\n    toString() {\n        return `${this.name()} ${toDisplayString(this.id)}!${this.len}`;\n    }\n}\n","export class RelativeTimestamp {\n    sessionIndex;\n    timeDiff;\n    constructor(sessionIndex, timeDiff) {\n        this.sessionIndex = sessionIndex;\n        this.timeDiff = timeDiff;\n    }\n}\n","import { tick, Timestamp } from '../../clock';\nimport { RelativeTimestamp } from './RelativeTimestamp';\nclass ClockTableEntry {\n    index;\n    clock;\n    constructor(index, clock) {\n        this.index = index;\n        this.clock = clock;\n    }\n}\nexport class ClockEncoder {\n    table = new Map();\n    index = 1;\n    clock = null;\n    reset(clock) {\n        this.index = 1;\n        this.clock = clock;\n        const entry = new ClockTableEntry(this.index++, tick(clock, -1));\n        this.table.clear();\n        this.table.set(clock.sid, entry);\n    }\n    append(ts) {\n        const time = ts.time;\n        const sid = ts.sid;\n        let entry = this.table.get(sid);\n        if (!entry) {\n            let clock = this.clock.peers.get(sid);\n            if (!clock)\n                clock = new Timestamp(sid, this.clock.time - 1);\n            entry = new ClockTableEntry(this.index++, clock);\n            this.table.set(sid, entry);\n        }\n        const clock = entry.clock;\n        const timeDiff = clock.time - time;\n        if (timeDiff < 0)\n            throw new Error('TIME_TRAVEL');\n        return new RelativeTimestamp(entry.index, timeDiff);\n    }\n    toJson() {\n        const out = [];\n        this.table.forEach((entry) => {\n            const clock = entry.clock;\n            out.push(clock.sid, clock.time);\n        });\n        return out;\n    }\n}\n","export class Slice {\n    uint8;\n    view;\n    start;\n    end;\n    constructor(uint8, view, start, end) {\n        this.uint8 = uint8;\n        this.view = view;\n        this.start = start;\n        this.end = end;\n    }\n    subarray() {\n        return this.uint8.subarray(this.start, this.end);\n    }\n}\n","import { Slice } from './Slice';\nconst EMPTY_UINT8 = new Uint8Array([]);\nconst EMPTY_VIEW = new DataView(EMPTY_UINT8.buffer);\nconst hasBuffer = typeof Buffer === 'function';\nconst utf8Write = hasBuffer\n    ? Buffer.prototype.utf8Write\n    : null;\nconst from = hasBuffer ? Buffer.from : null;\nconst textEncoder = typeof TextEncoder !== 'undefined' ? new TextEncoder() : null;\nexport class Writer {\n    allocSize;\n    uint8;\n    view = EMPTY_VIEW;\n    x0 = 0;\n    x = 0;\n    size;\n    constructor(allocSize = 64 * 1024) {\n        this.allocSize = allocSize;\n        this.uint8 = new Uint8Array(allocSize);\n        this.size = allocSize;\n        this.view = new DataView(this.uint8.buffer);\n    }\n    grow(size) {\n        const x0 = this.x0;\n        const x = this.x;\n        const oldUint8 = this.uint8;\n        const newUint8 = new Uint8Array(size);\n        const view = new DataView(newUint8.buffer);\n        const activeSlice = oldUint8.subarray(x0, x);\n        newUint8.set(activeSlice, 0);\n        this.x = x - x0;\n        this.x0 = 0;\n        this.uint8 = newUint8;\n        this.size = size;\n        this.view = view;\n    }\n    ensureCapacity(capacity) {\n        const byteLength = this.size;\n        const remaining = byteLength - this.x;\n        if (remaining < capacity) {\n            const total = byteLength - this.x0;\n            const required = capacity - remaining;\n            const totalRequired = total + required;\n            this.grow(totalRequired <= this.allocSize ? this.allocSize : totalRequired * 2);\n        }\n    }\n    move(capacity) {\n        this.ensureCapacity(capacity);\n        this.x += capacity;\n    }\n    reset() {\n        this.x0 = this.x;\n    }\n    newBuffer(size) {\n        const uint8 = (this.uint8 = new Uint8Array(size));\n        this.size = size;\n        this.view = new DataView(uint8.buffer);\n        this.x = this.x0 = 0;\n    }\n    flush() {\n        const result = this.uint8.subarray(this.x0, this.x);\n        this.x0 = this.x;\n        return result;\n    }\n    flushSlice() {\n        const slice = new Slice(this.uint8, this.view, this.x0, this.x);\n        this.x0 = this.x;\n        return slice;\n    }\n    u8(char) {\n        this.ensureCapacity(1);\n        this.uint8[this.x++] = char;\n    }\n    u16(word) {\n        this.ensureCapacity(2);\n        this.view.setUint16(this.x, word);\n        this.x += 2;\n    }\n    u32(dword) {\n        this.ensureCapacity(4);\n        this.view.setUint32(this.x, dword);\n        this.x += 4;\n    }\n    i32(dword) {\n        this.ensureCapacity(4);\n        this.view.setInt32(this.x, dword);\n        this.x += 4;\n    }\n    u64(qword) {\n        this.ensureCapacity(8);\n        this.view.setBigUint64(this.x, BigInt(qword));\n        this.x += 8;\n    }\n    f64(float) {\n        this.ensureCapacity(8);\n        this.view.setFloat64(this.x, float);\n        this.x += 8;\n    }\n    u8u16(u8, u16) {\n        this.ensureCapacity(3);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.uint8[x++] = u16 >>> 8;\n        this.uint8[x++] = u16 & 0xff;\n        this.x = x;\n    }\n    u8u32(u8, u32) {\n        this.ensureCapacity(5);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setUint32(x, u32);\n        this.x = x + 4;\n    }\n    u8u64(u8, u64) {\n        this.ensureCapacity(9);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setBigUint64(x, BigInt(u64));\n        this.x = x + 8;\n    }\n    u8f32(u8, f32) {\n        this.ensureCapacity(5);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setFloat32(x, f32);\n        this.x = x + 4;\n    }\n    u8f64(u8, f64) {\n        this.ensureCapacity(9);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setFloat64(x, f64);\n        this.x = x + 8;\n    }\n    buf(buf, length) {\n        this.ensureCapacity(length);\n        const x = this.x;\n        this.uint8.set(buf, x);\n        this.x = x + length;\n    }\n    utf8(str) {\n        const maxLength = str.length * 4;\n        if (maxLength < 168)\n            return this.utf8Native(str);\n        if (utf8Write) {\n            const writeLength = utf8Write.call(this.uint8, str, this.x, maxLength);\n            this.x += writeLength;\n            return writeLength;\n        }\n        else if (from) {\n            const uint8 = this.uint8;\n            const offset = uint8.byteOffset + this.x;\n            const buf = from(uint8.buffer).subarray(offset, offset + maxLength);\n            const writeLength = buf.write(str, 0, maxLength, 'utf8');\n            this.x += writeLength;\n            return writeLength;\n        }\n        else if (maxLength > 1024 && textEncoder) {\n            const writeLength = textEncoder.encodeInto(str, this.uint8.subarray(this.x, this.x + maxLength)).written;\n            this.x += writeLength;\n            return writeLength;\n        }\n        return this.utf8Native(str);\n    }\n    utf8Native(str) {\n        const length = str.length;\n        const uint8 = this.uint8;\n        let offset = this.x;\n        let pos = 0;\n        while (pos < length) {\n            let value = str.charCodeAt(pos++);\n            if ((value & 0xffffff80) === 0) {\n                uint8[offset++] = value;\n                continue;\n            }\n            else if ((value & 0xfffff800) === 0) {\n                uint8[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n            }\n            else {\n                if (value >= 0xd800 && value <= 0xdbff) {\n                    if (pos < length) {\n                        const extra = str.charCodeAt(pos);\n                        if ((extra & 0xfc00) === 0xdc00) {\n                            pos++;\n                            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                        }\n                    }\n                }\n                if ((value & 0xffff0000) === 0) {\n                    uint8[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n                    uint8[offset++] = ((value >> 6) & 0x3f) | 0x80;\n                }\n                else {\n                    uint8[offset++] = ((value >> 18) & 0x07) | 0xf0;\n                    uint8[offset++] = ((value >> 12) & 0x3f) | 0x80;\n                    uint8[offset++] = ((value >> 6) & 0x3f) | 0x80;\n                }\n            }\n            uint8[offset++] = (value & 0x3f) | 0x80;\n        }\n        const writeLength = offset - this.x;\n        this.x = offset;\n        return writeLength;\n    }\n    ascii(str) {\n        const length = str.length;\n        this.ensureCapacity(length);\n        const uint8 = this.uint8;\n        let x = this.x;\n        let pos = 0;\n        while (pos < length)\n            uint8[x++] = str.charCodeAt(pos++);\n        this.x = x;\n    }\n}\n","import { Writer } from '../../../util/buffers/Writer';\nexport class CrdtWriter extends Writer {\n    id(x, y) {\n        if (x <= 0b111 && y <= 0b1111) {\n            this.u8((x << 4) | y);\n        }\n        else {\n            this.b1vu56(1, x);\n            this.vu57(y);\n        }\n    }\n    vu57(num) {\n        if (num <= 0b1111111) {\n            this.u8(num);\n        }\n        else if (num <= 0b1111111_1111111) {\n            this.ensureCapacity(2);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = num >>> 7;\n        }\n        else if (num <= 0b1111111_1111111_1111111) {\n            this.ensureCapacity(3);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n            uint8[this.x++] = num >>> 14;\n        }\n        else if (num <= 0b1111111_1111111_1111111_1111111) {\n            this.ensureCapacity(4);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n            uint8[this.x++] = num >>> 21;\n        }\n        else {\n            let lo32 = num | 0;\n            if (lo32 < 0)\n                lo32 += 4294967296;\n            const hi32 = (num - lo32) / 4294967296;\n            if (num <= 0b1111111_1111111_1111111_1111111_1111111) {\n                this.ensureCapacity(5);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = (hi32 << 4) | (num >>> 28);\n            }\n            else if (num <= 0b1111111_1111111_1111111_1111111_1111111_1111111) {\n                this.ensureCapacity(6);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = hi32 >>> 3;\n            }\n            else if (num <= 0b1111111_1111111_1111111_1111111_1111111_1111111_1111111) {\n                this.ensureCapacity(7);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_000) >>> 3);\n                uint8[this.x++] = hi32 >>> 10;\n            }\n            else {\n                this.ensureCapacity(8);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_000) >>> 3);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_0000000_000) >>> 10);\n                uint8[this.x++] = hi32 >>> 17;\n            }\n        }\n    }\n    b1vu56(flag, num) {\n        if (num <= 0b111111) {\n            this.u8((flag << 7) | num);\n        }\n        else {\n            const firstByteMask = (flag << 7) | 0b1000000;\n            if (num <= 0b1111111_111111) {\n                this.ensureCapacity(2);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = num >>> 6;\n            }\n            else if (num <= 0b1111111_1111111_111111) {\n                this.ensureCapacity(3);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                uint8[this.x++] = num >>> 13;\n            }\n            else if (num <= 0b1111111_1111111_1111111_111111) {\n                this.ensureCapacity(4);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                uint8[this.x++] = num >>> 20;\n            }\n            else {\n                let lo32 = num | 0;\n                if (lo32 < 0)\n                    lo32 += 4294967296;\n                const hi32 = (num - lo32) / 4294967296;\n                if (num <= 0b1111111_1111111_1111111_1111111_111111) {\n                    this.ensureCapacity(5);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = (hi32 << 5) | (num >>> 27);\n                }\n                else if (num <= 0b1111111_1111111_1111111_1111111_1111111_111111) {\n                    this.ensureCapacity(6);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = hi32 >>> 2;\n                }\n                else if (num <= 0b1111111_1111111_1111111_1111111_1111111_1111111_111111) {\n                    this.ensureCapacity(7);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_00) >>> 2);\n                    uint8[this.x++] = hi32 >>> 9;\n                }\n                else {\n                    this.ensureCapacity(8);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_00) >>> 2);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b1111111_0000000_00) >>> 9);\n                    uint8[this.x++] = hi32 >>> 16;\n                }\n            }\n        }\n    }\n}\n","const view = new DataView(new ArrayBuffer(4));\nexport const isFloat32 = (n) => {\n    view.setFloat32(0, n);\n    return n === view.getFloat32(0);\n};\n","export class JsonPackExtension {\n    tag;\n    val;\n    constructor(tag, val) {\n        this.tag = tag;\n        this.val = val;\n    }\n}\n","import { Writer } from '../../util/buffers/Writer';\nconst isSafeInteger = Number.isSafeInteger;\nexport class CborEncoderFast {\n    writer;\n    constructor(writer = new Writer()) {\n        this.writer = writer;\n    }\n    encode(value) {\n        this.writeAny(value);\n        return this.writer.flush();\n    }\n    encodeToSlice(value) {\n        this.writeAny(value);\n        return this.writer.flushSlice();\n    }\n    writeAny(value) {\n        switch (typeof value) {\n            case 'number':\n                return this.writeNumber(value);\n            case 'string':\n                return this.writeStr(value);\n            case 'boolean':\n                return this.writer.u8(0xf4 + +value);\n            case 'object': {\n                if (!value)\n                    return this.writer.u8(0xf6);\n                const constructor = value.constructor;\n                switch (constructor) {\n                    case Array:\n                        return this.writeArr(value);\n                    default:\n                        return this.writeObj(value);\n                }\n            }\n        }\n    }\n    writeCbor() {\n        this.writer.u8u16(0xd9, 0xd9f7);\n    }\n    writeEnd() {\n        this.writer.u8(255);\n    }\n    writeNull() {\n        this.writer.u8(0xf6);\n    }\n    writeBoolean(bool) {\n        if (bool)\n            this.writer.u8(0xf5);\n        else\n            this.writer.u8(0xf4);\n    }\n    writeNumber(num) {\n        if (isSafeInteger(num))\n            this.writeInteger(num);\n        else if (typeof num === 'bigint')\n            this.writeBigInt(num);\n        else\n            this.writeFloat(num);\n    }\n    writeBigInt(int) {\n        if (int >= 0)\n            this.writeBigUint(int);\n        else\n            this.writeBigSint(int);\n    }\n    writeBigUint(uint) {\n        if (uint <= Number.MAX_SAFE_INTEGER)\n            return this.writeUInteger(Number(uint));\n        this.writer.u8u64(0x1b, uint);\n    }\n    writeBigSint(int) {\n        if (int >= Number.MIN_SAFE_INTEGER)\n            return this.encodeNint(Number(int));\n        const uint = -BigInt(1) - int;\n        this.writer.u8u64(0x3b, uint);\n    }\n    writeInteger(int) {\n        if (int >= 0)\n            this.writeUInteger(int);\n        else\n            this.encodeNint(int);\n    }\n    writeUInteger(uint) {\n        const writer = this.writer;\n        writer.ensureCapacity(9);\n        const uint8 = writer.uint8;\n        let x = writer.x;\n        if (uint <= 23) {\n            uint8[x++] = 0 + uint;\n        }\n        else if (uint <= 0xff) {\n            uint8[x++] = 0x18;\n            uint8[x++] = uint;\n        }\n        else if (uint <= 0xffff) {\n            uint8[x++] = 0x19;\n            writer.view.setUint16(x, uint);\n            x += 2;\n        }\n        else if (uint <= 0xffffffff) {\n            uint8[x++] = 0x1a;\n            writer.view.setUint32(x, uint);\n            x += 4;\n        }\n        else {\n            uint8[x++] = 0x1b;\n            writer.view.setBigUint64(x, BigInt(uint));\n            x += 8;\n        }\n        writer.x = x;\n    }\n    encodeNumber(num) {\n        this.writeNumber(num);\n    }\n    encodeInteger(int) {\n        this.writeInteger(int);\n    }\n    encodeUint(uint) {\n        this.writeUInteger(uint);\n    }\n    encodeNint(int) {\n        const uint = -1 - int;\n        const writer = this.writer;\n        writer.ensureCapacity(9);\n        const uint8 = writer.uint8;\n        let x = writer.x;\n        if (uint < 24) {\n            uint8[x++] = 32 + uint;\n        }\n        else if (uint <= 0xff) {\n            uint8[x++] = 0x38;\n            uint8[x++] = uint;\n        }\n        else if (uint <= 0xffff) {\n            uint8[x++] = 0x39;\n            writer.view.setUint16(x, uint);\n            x += 2;\n        }\n        else if (uint <= 0xffffffff) {\n            uint8[x++] = 0x3a;\n            writer.view.setUint32(x, uint);\n            x += 4;\n        }\n        else {\n            uint8[x++] = 0x3b;\n            writer.view.setBigUint64(x, BigInt(uint));\n            x += 8;\n        }\n        writer.x = x;\n    }\n    writeFloat(float) {\n        this.writer.u8f64(0xfb, float);\n    }\n    writeBin(buf) {\n        const length = buf.length;\n        this.writeBinHdr(length);\n        this.writer.buf(buf, length);\n    }\n    writeBinHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(64 + length);\n        else if (length <= 0xff)\n            writer.u16((0x58 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x59, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0x5a, length);\n        else\n            writer.u8u64(0x5b, length);\n    }\n    writeStr(str) {\n        const writer = this.writer;\n        const length = str.length;\n        const maxSize = length * 4;\n        writer.ensureCapacity(5 + maxSize);\n        const uint8 = writer.uint8;\n        let lengthOffset = writer.x;\n        if (maxSize <= 23)\n            writer.x++;\n        else if (maxSize <= 0xff) {\n            uint8[writer.x++] = 0x78;\n            lengthOffset = writer.x;\n            writer.x++;\n        }\n        else if (maxSize <= 0xffff) {\n            uint8[writer.x++] = 0x79;\n            lengthOffset = writer.x;\n            writer.x += 2;\n        }\n        else {\n            uint8[writer.x++] = 0x7a;\n            lengthOffset = writer.x;\n            writer.x += 4;\n        }\n        const bytesWritten = writer.utf8(str);\n        if (maxSize <= 23)\n            uint8[lengthOffset] = 96 + bytesWritten;\n        else if (maxSize <= 0xff)\n            uint8[lengthOffset] = bytesWritten;\n        else if (maxSize <= 0xffff)\n            writer.view.setUint16(lengthOffset, bytesWritten);\n        else\n            writer.view.setUint32(lengthOffset, bytesWritten);\n    }\n    writeStrHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(96 + length);\n        else if (length <= 0xff)\n            writer.u16((0x78 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x79, length);\n        else\n            writer.u8u32(0x7a, length);\n    }\n    writeAsciiStr(str) {\n        this.writeStrHdr(str.length);\n        this.writer.ascii(str);\n    }\n    writeArr(arr) {\n        const length = arr.length;\n        this.writeArrHdr(length);\n        for (let i = 0; i < length; i++)\n            this.writeAny(arr[i]);\n    }\n    writeArrHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(128 + length);\n        else if (length <= 0xff)\n            writer.u16((0x98 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x99, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0x9a, length);\n        else\n            writer.u8u64(0x9b, length);\n    }\n    writeObj(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        this.writeObjHdr(length);\n        for (let i = 0; i < length; i++) {\n            const key = keys[i];\n            this.writeStr(key);\n            this.writeAny(obj[key]);\n        }\n    }\n    writeObjHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(160 + length);\n        else if (length <= 0xff)\n            writer.u16((0xb8 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0xb9, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0xba, length);\n        else\n            writer.u8u64(0xbb, length);\n    }\n    writeMapHdr(length) {\n        this.writeObjHdr(length);\n    }\n    writeStartMap() {\n        this.writer.u8(0xbf);\n    }\n    writeTag(tag, value) {\n        this.writeTagHdr(tag);\n        this.writeAny(value);\n    }\n    writeTagHdr(tag) {\n        const writer = this.writer;\n        if (tag <= 23)\n            writer.u8(192 + tag);\n        else if (tag <= 0xff)\n            writer.u16((0xd8 << 8) + tag);\n        else if (tag <= 0xffff)\n            writer.u8u16(0xd9, tag);\n        else if (tag <= 0xffffffff)\n            writer.u8u32(0xda, tag);\n        else\n            writer.u8u64(0xdb, tag);\n    }\n    writeTkn(value) {\n        const writer = this.writer;\n        if (value <= 23)\n            writer.u8(224 + value);\n        else if (value <= 0xff)\n            writer.u16((0xf8 << 8) + value);\n    }\n    writeStartStr() {\n        this.writer.u8(0x7f);\n    }\n    writeStrChunk(str) {\n        throw new Error('Not implemented');\n    }\n    writeEndStr() {\n        throw new Error('Not implemented');\n    }\n    writeStartBin() {\n        this.writer.u8(0x5f);\n    }\n    writeBinChunk(buf) {\n        throw new Error('Not implemented');\n    }\n    writeEndBin() {\n        throw new Error('Not implemented');\n    }\n    writeStartArr() {\n        this.writer.u8(0x9f);\n    }\n    writeArrChunk(item) {\n        throw new Error('Not implemented');\n    }\n    writeEndArr() {\n        this.writer.u8(255);\n    }\n    writeStartObj() {\n        this.writer.u8(0xbf);\n    }\n    writeObjChunk(key, value) {\n        throw new Error('Not implemented');\n    }\n    writeEndObj() {\n        this.writer.u8(255);\n    }\n}\n","import { isFloat32 } from '../../util/buffers/isFloat32';\nimport { JsonPackExtension } from '../JsonPackExtension';\nimport { CborEncoderFast } from './CborEncoderFast';\nexport class CborEncoder extends CborEncoderFast {\n    writeUnknown(value) {\n        this.writeNull();\n    }\n    writeAny(value) {\n        switch (typeof value) {\n            case 'number':\n                return this.writeNumber(value);\n            case 'string':\n                return this.writeStr(value);\n            case 'boolean':\n                return this.writer.u8(0xf4 + +value);\n            case 'object': {\n                if (!value)\n                    return this.writer.u8(0xf6);\n                const constructor = value.constructor;\n                switch (constructor) {\n                    case Object:\n                        return this.writeObj(value);\n                    case Array:\n                        return this.writeArr(value);\n                    case Uint8Array:\n                        return this.writeBin(value);\n                    case Map:\n                        return this.writeMap(value);\n                    case JsonPackExtension:\n                        return this.writeTag(value.tag, value.val);\n                    default:\n                        return this.writeUnknown(value);\n                }\n            }\n            case 'undefined':\n                return this.writeUndef();\n            case 'bigint':\n                return this.writeBigInt(value);\n            default:\n                return this.writeUnknown(value);\n        }\n    }\n    writeFloat(float) {\n        if (isFloat32(float))\n            this.writer.u8f32(0xfa, float);\n        else\n            this.writer.u8f64(0xfb, float);\n    }\n    writeMap(map) {\n        this.writeMapHdr(map.size);\n        map.forEach((value, key) => {\n            this.writeAny(key);\n            this.writeAny(value);\n        });\n    }\n    writeUndef() {\n        this.writer.u8(0xf7);\n    }\n}\n","import * as nodes from '../../../nodes';\nimport { ClockEncoder } from '../../../../json-crdt-patch/codec/clock/ClockEncoder';\nimport { CrdtWriter } from '../../../../json-crdt-patch/util/binary/CrdtWriter';\nimport { Timestamp } from '../../../../json-crdt-patch/clock';\nimport { CborEncoder } from '../../../../json-pack/cbor/CborEncoder';\nexport class Encoder extends CborEncoder {\n    clockEncoder = new ClockEncoder();\n    time = 0;\n    doc;\n    constructor(writer) {\n        super(writer || new CrdtWriter());\n    }\n    encode(doc) {\n        this.doc = doc;\n        const writer = this.writer;\n        writer.reset();\n        if (doc.clock.sid === 1)\n            this.encodeServer(doc);\n        else\n            this.encodeLogical(doc);\n        return writer.flush();\n    }\n    encodeLogical(model) {\n        const writer = this.writer;\n        this.ts = this.tsLogical;\n        this.clockEncoder.reset(model.clock);\n        writer.ensureCapacity(4);\n        const x0 = writer.x0;\n        const x = writer.x;\n        writer.x += 4;\n        this.cRoot(model.root);\n        this.encodeClockTable(x0, x);\n    }\n    encodeServer(model) {\n        this.ts = this.tsServer;\n        const writer = this.writer;\n        writer.u8(0b10000000);\n        writer.vu57((this.time = model.clock.time));\n        this.cRoot(model.root);\n    }\n    encodeClockTable(x0, x) {\n        const writer = this.writer;\n        const shift = writer.x0 - x0;\n        writer.view.setUint32(writer.x0 + (x - x0), writer.x - x - shift - 4);\n        const clockEncoder = this.clockEncoder;\n        const table = clockEncoder.table;\n        const length = table.size;\n        writer.vu57(length);\n        table.forEach(this.cTableEntry);\n    }\n    cTableEntry = (entry) => {\n        const clock = entry.clock;\n        const writer = this.writer;\n        writer.vu57(clock.sid);\n        writer.vu57(clock.time);\n    };\n    tsLogical = (ts) => {\n        const relativeId = this.clockEncoder.append(ts);\n        this.writer.id(relativeId.sessionIndex, relativeId.timeDiff);\n    };\n    tsServer = (ts) => {\n        this.writer.vu57(ts.time);\n    };\n    ts = this.tsLogical;\n    cRoot(root) {\n        const val = root.val;\n        if (val.sid === 0)\n            this.writer.u8(0);\n        else\n            this.cNode(root.node());\n    }\n    writeTL(majorOverlay, length) {\n        const writer = this.writer;\n        if (length < 0b11111)\n            writer.u8(majorOverlay | length);\n        else {\n            writer.u8(majorOverlay | 0b11111);\n            writer.vu57(length);\n        }\n    }\n    cNode(node) {\n        if (node instanceof nodes.ConNode)\n            this.cCon(node);\n        else if (node instanceof nodes.ValNode)\n            this.cVal(node);\n        else if (node instanceof nodes.StrNode)\n            this.cStr(node);\n        else if (node instanceof nodes.ObjNode)\n            this.cObj(node);\n        else if (node instanceof nodes.VecNode)\n            this.cVec(node);\n        else if (node instanceof nodes.ArrNode)\n            this.cArr(node);\n        else if (node instanceof nodes.BinNode)\n            this.cBin(node);\n    }\n    cCon(node) {\n        const val = node.val;\n        this.ts(node.id);\n        if (val instanceof Timestamp) {\n            this.writer.u8(1);\n            this.ts(val);\n        }\n        else {\n            this.writer.u8(0);\n            this.writeAny(val);\n        }\n    }\n    cVal(node) {\n        this.ts(node.id);\n        this.writer.u8(0b00100000);\n        this.cNode(node.node());\n    }\n    cObj(node) {\n        this.ts(node.id);\n        const keys = node.keys;\n        this.writeTL(64, keys.size);\n        keys.forEach(this.cKey);\n    }\n    cKey = (val, key) => {\n        this.writeStr(key);\n        this.cNode(this.doc.index.get(val));\n    };\n    cVec(node) {\n        const elements = node.elements;\n        const length = elements.length;\n        this.ts(node.id);\n        this.writeTL(96, length);\n        const index = this.doc.index;\n        for (let i = 0; i < length; i++) {\n            const elementId = elements[i];\n            if (!elementId)\n                this.writer.u8(0);\n            else\n                this.cNode(index.get(elementId));\n        }\n    }\n    cStr(node) {\n        const ts = this.ts;\n        ts(node.id);\n        this.writeTL(128, node.count);\n        for (let chunk = node.first(); chunk; chunk = node.next(chunk)) {\n            ts(chunk.id);\n            if (chunk.del)\n                this.writeUInteger(chunk.span);\n            else\n                this.writeStr(chunk.data);\n        }\n    }\n    cBin(node) {\n        const ts = this.ts;\n        const writer = this.writer;\n        ts(node.id);\n        this.writeTL(160, node.count);\n        for (let chunk = node.first(); chunk; chunk = node.next(chunk)) {\n            ts(chunk.id);\n            const length = chunk.span;\n            const deleted = chunk.del;\n            writer.b1vu56(~~deleted, length);\n            if (deleted)\n                continue;\n            writer.buf(chunk.data, length);\n        }\n    }\n    cArr(node) {\n        const ts = this.ts;\n        const writer = this.writer;\n        ts(node.id);\n        this.writeTL(192, node.count);\n        const index = this.doc.index;\n        for (let chunk = node.first(); chunk; chunk = node.next(chunk)) {\n            ts(chunk.id);\n            const span = chunk.span;\n            const deleted = chunk.del;\n            writer.b1vu56(~~deleted, span);\n            if (deleted)\n                continue;\n            const nodes = chunk.data;\n            for (let i = 0; i < span; i++)\n                this.cNode(index.get(nodes[i]));\n        }\n    }\n}\n","import { ClockVector, ts } from '../../clock';\nexport class ClockDecoder {\n    table = [];\n    clock;\n    static fromArr(arr) {\n        const decoder = new ClockDecoder(arr[0], arr[1]);\n        const length = arr.length;\n        for (let i = 2; i < length; i += 2)\n            decoder.pushTuple(arr[i], arr[i + 1]);\n        return decoder;\n    }\n    constructor(sid, time) {\n        this.clock = new ClockVector(sid, time + 1);\n        this.table.push(ts(sid, time));\n    }\n    pushTuple(sid, time) {\n        const id = ts(sid, time);\n        this.clock.observe(id, 1);\n        this.table.push(id);\n    }\n    decodeId(sessionIndex, timeDiff) {\n        if (!sessionIndex)\n            return ts(0, timeDiff);\n        const clock = this.table[sessionIndex - 1];\n        if (!clock)\n            throw new Error('INVALID_CLOCK_TABLE');\n        return ts(clock.sid, clock.time - timeDiff);\n    }\n}\n","const fromCharCode = String.fromCharCode;\nexport const decodeAscii = (src, position, length) => {\n    const bytes = [];\n    for (let i = 0; i < length; i++) {\n        const byte = src[position++];\n        if (byte & 0x80)\n            return;\n        bytes.push(byte);\n    }\n    return fromCharCode.apply(String, bytes);\n};\nexport const decodeAsciiMax15 = (src, position, length) => {\n    if (length < 4) {\n        if (length < 2) {\n            if (length === 0)\n                return '';\n            else {\n                const a = src[position++];\n                if ((a & 0x80) > 1) {\n                    position -= 1;\n                    return;\n                }\n                return fromCharCode(a);\n            }\n        }\n        else {\n            const a = src[position++];\n            const b = src[position++];\n            if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n                position -= 2;\n                return;\n            }\n            if (length < 3)\n                return fromCharCode(a, b);\n            const c = src[position++];\n            if ((c & 0x80) > 0) {\n                position -= 3;\n                return;\n            }\n            return fromCharCode(a, b, c);\n        }\n    }\n    else {\n        const a = src[position++];\n        const b = src[position++];\n        const c = src[position++];\n        const d = src[position++];\n        if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n            position -= 4;\n            return;\n        }\n        if (length < 6) {\n            if (length === 4)\n                return fromCharCode(a, b, c, d);\n            else {\n                const e = src[position++];\n                if ((e & 0x80) > 0) {\n                    position -= 5;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e);\n            }\n        }\n        else if (length < 8) {\n            const e = src[position++];\n            const f = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n                position -= 6;\n                return;\n            }\n            if (length < 7)\n                return fromCharCode(a, b, c, d, e, f);\n            const g = src[position++];\n            if ((g & 0x80) > 0) {\n                position -= 7;\n                return;\n            }\n            return fromCharCode(a, b, c, d, e, f, g);\n        }\n        else {\n            const e = src[position++];\n            const f = src[position++];\n            const g = src[position++];\n            const h = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n                position -= 8;\n                return;\n            }\n            if (length < 10) {\n                if (length === 8)\n                    return fromCharCode(a, b, c, d, e, f, g, h);\n                else {\n                    const i = src[position++];\n                    if ((i & 0x80) > 0) {\n                        position -= 9;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i);\n                }\n            }\n            else if (length < 12) {\n                const i = src[position++];\n                const j = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n                    position -= 10;\n                    return;\n                }\n                if (length < 11)\n                    return fromCharCode(a, b, c, d, e, f, g, h, i, j);\n                const k = src[position++];\n                if ((k & 0x80) > 0) {\n                    position -= 11;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n            }\n            else {\n                const i = src[position++];\n                const j = src[position++];\n                const k = src[position++];\n                const l = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n                    position -= 12;\n                    return;\n                }\n                if (length < 14) {\n                    if (length === 12)\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n                    else {\n                        const m = src[position++];\n                        if ((m & 0x80) > 0) {\n                            position -= 13;\n                            return;\n                        }\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n                    }\n                }\n                else {\n                    const m = src[position++];\n                    const n = src[position++];\n                    if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n                        position -= 14;\n                        return;\n                    }\n                    if (length < 15)\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n                    const o = src[position++];\n                    if ((o & 0x80) > 0) {\n                        position -= 15;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n                }\n            }\n        }\n    }\n};\n","const fromCharCode = String.fromCharCode;\nexport default (buf, start, length) => {\n    let offset = start;\n    const end = offset + length;\n    const points = [];\n    while (offset < end) {\n        let code = buf[offset++];\n        if ((code & 0x80) !== 0) {\n            const octet2 = buf[offset++] & 0x3f;\n            if ((code & 0xe0) === 0xc0) {\n                code = ((code & 0x1f) << 6) | octet2;\n            }\n            else {\n                const octet3 = buf[offset++] & 0x3f;\n                if ((code & 0xf0) === 0xe0) {\n                    code = ((code & 0x1f) << 12) | (octet2 << 6) | octet3;\n                }\n                else {\n                    if ((code & 0xf8) === 0xf0) {\n                        const octet4 = buf[offset++] & 0x3f;\n                        let unit = ((code & 0x07) << 0x12) | (octet2 << 0x0c) | (octet3 << 0x06) | octet4;\n                        if (unit > 0xffff) {\n                            unit -= 0x10000;\n                            const unit0 = ((unit >>> 10) & 0x3ff) | 0xd800;\n                            code = 0xdc00 | (unit & 0x3ff);\n                            points.push(unit0);\n                        }\n                        else {\n                            code = unit;\n                        }\n                    }\n                }\n            }\n        }\n        points.push(code);\n    }\n    return fromCharCode.apply(String, points);\n};\n","import { decodeAscii, decodeAsciiMax15 } from '../decodeAscii';\nimport v18 from './v18';\nconst hasBuffer = typeof Buffer !== 'undefined';\nconst utf8Slice = hasBuffer ? Buffer.prototype.utf8Slice : null;\nconst from = hasBuffer ? Buffer.from : null;\nconst shortDecoder = (buf, start, length) => decodeAsciiMax15(buf, start, length) ?? v18(buf, start, length);\nconst midDecoder = (buf, start, length) => decodeAscii(buf, start, length) ?? v18(buf, start, length);\nconst longDecoder = utf8Slice\n    ? (buf, start, length) => utf8Slice.call(buf, start, start + length)\n    : from\n        ? (buf, start, length) => from(buf)\n            .subarray(start, start + length)\n            .toString('utf8')\n        : v18;\nconst decoder = (buf, start, length) => {\n    if (length < 16)\n        return shortDecoder(buf, start, length);\n    if (length < 32)\n        return midDecoder(buf, start, length);\n    return longDecoder(buf, start, length);\n};\nexport default decoder;\n","import { decodeUtf8 } from './utf8/decodeUtf8';\nexport class Reader {\n    uint8 = new Uint8Array([]);\n    view = new DataView(this.uint8.buffer);\n    x = 0;\n    reset(uint8) {\n        this.x = 0;\n        this.uint8 = uint8;\n        this.view = new DataView(uint8.buffer, uint8.byteOffset, uint8.length);\n    }\n    peak() {\n        return this.view.getUint8(this.x);\n    }\n    skip(length) {\n        this.x += length;\n    }\n    buf(size) {\n        const end = this.x + size;\n        const bin = this.uint8.subarray(this.x, end);\n        this.x = end;\n        return bin;\n    }\n    u8() {\n        return this.uint8[this.x++];\n    }\n    i8() {\n        return this.view.getInt8(this.x++);\n    }\n    u16() {\n        let x = this.x;\n        const num = (this.uint8[x++] << 8) + this.uint8[x++];\n        this.x = x;\n        return num;\n    }\n    i16() {\n        const num = this.view.getInt16(this.x);\n        this.x += 2;\n        return num;\n    }\n    u32() {\n        const num = this.view.getUint32(this.x);\n        this.x += 4;\n        return num;\n    }\n    i32() {\n        const num = this.view.getInt32(this.x);\n        this.x += 4;\n        return num;\n    }\n    u64() {\n        const num = this.view.getBigUint64(this.x);\n        this.x += 8;\n        return num;\n    }\n    i64() {\n        const num = this.view.getBigInt64(this.x);\n        this.x += 8;\n        return num;\n    }\n    f32() {\n        const pos = this.x;\n        this.x += 4;\n        return this.view.getFloat32(pos);\n    }\n    f64() {\n        const pos = this.x;\n        this.x += 8;\n        return this.view.getFloat64(pos);\n    }\n    utf8(size) {\n        const start = this.x;\n        this.x += size;\n        return decodeUtf8(this.uint8, start, size);\n    }\n    ascii(length) {\n        const uint8 = this.uint8;\n        let str = '';\n        const end = this.x + length;\n        for (let i = this.x; i < end; i++)\n            str += String.fromCharCode(uint8[i]);\n        this.x = end;\n        return str;\n    }\n}\n","import { Reader } from '../../../util/buffers/Reader';\nexport class CrdtReader extends Reader {\n    id() {\n        const byte = this.u8();\n        if (byte <= 0b0_111_1111)\n            return [byte >>> 4, byte & 0b1111];\n        this.x--;\n        return [this.b1vu56()[1], this.vu57()];\n    }\n    idSkip() {\n        const byte = this.u8();\n        if (byte <= 0b0_111_1111)\n            return;\n        this.x--;\n        this.b1vu56();\n        this.vu57Skip();\n    }\n    vu57() {\n        const o1 = this.u8();\n        if (o1 <= 0b01111111)\n            return o1;\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return (o2 << 7) | (o1 & 0b01111111);\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return (o3 << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b01111111);\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return (o4 << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b01111111);\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return (o5 * 0b10000000000000000000000000000 +\n                (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b0111_1111)));\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return (o6 * 0b100000000000000000000000000000000000 +\n                ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                    (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b0111_1111))));\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return (o7 * 0b1000000000000000000000000000000000000000000 +\n                ((o6 & 0b01111111) * 0b100000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b0111_1111)))));\n        const o8 = this.u8();\n        return (o8 * 0b10000000000000000000000000000000000000000000000000 +\n            ((o7 & 0b01111111) * 0b1000000000000000000000000000000000000000000 +\n                ((o6 & 0b01111111) * 0b100000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b0111_1111))))));\n    }\n    vu57Skip() {\n        const o1 = this.u8();\n        if (o1 <= 0b01111111)\n            return;\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return;\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return;\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return;\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return;\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return;\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return;\n        this.x++;\n    }\n    b1vu56() {\n        const byte = this.u8();\n        const flag = byte & 0b10000000 ? 1 : 0;\n        const o1 = 0b0_1_111111 & byte;\n        if (o1 <= 0b0_0_111111)\n            return [flag, o1];\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return [flag, (o2 << 6) | (o1 & 0b0_0_111111)];\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return [flag, (o3 << 13) | ((o2 & 0b01111111) << 6) | (o1 & 0b0_0_111111)];\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return [flag, (o4 << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 0b0_0_111111)];\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return [\n                flag,\n                o5 * 0b1000000000000000000000000000 +\n                    (((o4 & 0b01111111) << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 0b0_0_111111)),\n            ];\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return [\n                flag,\n                o6 * 0b10000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 0b0_0_111111))),\n            ];\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return [\n                flag,\n                o7 * 0b100000000000000000000000000000000000000000 +\n                    ((o6 & 0b01111111) * 0b10000000000000000000000000000000000 +\n                        ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                            (((o4 & 0b01111111) << 20) |\n                                ((o3 & 0b01111111) << 13) |\n                                ((o2 & 0b01111111) << 6) |\n                                (o1 & 0b0_0_111111)))),\n            ];\n        const o8 = this.u8();\n        return [\n            flag,\n            o8 * 0b1000000000000000000000000000000000000000000000000 +\n                ((o7 & 0b01111111) * 0b100000000000000000000000000000000000000000 +\n                    ((o6 & 0b01111111) * 0b10000000000000000000000000000000000 +\n                        ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                            (((o4 & 0b01111111) << 20) |\n                                ((o3 & 0b01111111) << 13) |\n                                ((o2 & 0b01111111) << 6) |\n                                (o1 & 0b0_0_111111))))),\n        ];\n    }\n}\n","const pow = Math.pow;\nexport const decodeF16 = (binary) => {\n    const exponent = (binary & 0x7c00) >> 10;\n    const fraction = binary & 0x03ff;\n    return ((binary >> 15 ? -1 : 1) *\n        (exponent\n            ? exponent === 0x1f\n                ? fraction\n                    ? NaN\n                    : Infinity\n                : pow(2, exponent - 15) * (1 + fraction / 0x400)\n            : 6.103515625e-5 * (fraction / 0x400)));\n};\n","export class JsonPackValue {\n    val;\n    constructor(val) {\n        this.val = val;\n    }\n}\n","const fromCharCode = String.fromCharCode;\nexport default (buf, start, length) => {\n    let offset = start;\n    const end = offset + length;\n    let str = '';\n    while (offset < end) {\n        const octet1 = buf[offset++];\n        if ((octet1 & 0x80) === 0) {\n            str += fromCharCode(octet1);\n            continue;\n        }\n        const octet2 = buf[offset++] & 0x3f;\n        if ((octet1 & 0xe0) === 0xc0) {\n            str += fromCharCode(((octet1 & 0x1f) << 6) | octet2);\n            continue;\n        }\n        const octet3 = buf[offset++] & 0x3f;\n        if ((octet1 & 0xf0) === 0xe0) {\n            str += fromCharCode(((octet1 & 0x1f) << 12) | (octet2 << 6) | octet3);\n            continue;\n        }\n        if ((octet1 & 0xf8) === 0xf0) {\n            const octet4 = buf[offset++] & 0x3f;\n            let unit = ((octet1 & 0x07) << 0x12) | (octet2 << 0x0c) | (octet3 << 0x06) | octet4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                const unit0 = ((unit >>> 10) & 0x3ff) | 0xd800;\n                unit = 0xdc00 | (unit & 0x3ff);\n                str += fromCharCode(unit0, unit);\n            }\n            else {\n                str += fromCharCode(unit);\n            }\n        }\n        else {\n            str += fromCharCode(octet1);\n        }\n    }\n    return str;\n};\n","var x = 1 + Math.round(Math.random() * ((-1>>>0)-1));\n\n/** Generate a random 32-bit unsigned integer in the specified [min, max] range. */\nfunction randomU32(min, max) {\n  x ^= x << 13; x ^= x >>> 17; x ^= x << 5;\n  return (x >>> 0) % (max - min + 1) + min;\n}\n\nexports.randomU32 = randomU32;\n","import decodeUtf8 from './decodeUtf8/v10';\nimport { randomU32 } from 'hyperdyperid/lib/randomU32';\nclass CacheItem {\n    bytes;\n    value;\n    constructor(bytes, value) {\n        this.bytes = bytes;\n        this.value = value;\n    }\n}\nexport class CachedUtf8Decoder {\n    caches;\n    constructor() {\n        this.caches = [];\n        for (let i = 0; i < 31; i++)\n            this.caches.push([]);\n    }\n    get(bytes, offset, size) {\n        const records = this.caches[size - 1];\n        const len = records.length;\n        FIND_CHUNK: for (let i = 0; i < len; i++) {\n            const record = records[i];\n            const recordBytes = record.bytes;\n            for (let j = 0; j < size; j++)\n                if (recordBytes[j] !== bytes[offset + j])\n                    continue FIND_CHUNK;\n            return record.value;\n        }\n        return null;\n    }\n    store(bytes, value) {\n        const records = this.caches[bytes.length - 1];\n        const record = new CacheItem(bytes, value);\n        const length = records.length;\n        if (length >= 16)\n            records[randomU32(0, 16 - 1)] = record;\n        else\n            records.push(record);\n    }\n    decode(bytes, offset, size) {\n        if (!size)\n            return '';\n        const cachedValue = this.get(bytes, offset, size);\n        if (cachedValue !== null)\n            return cachedValue;\n        const value = decodeUtf8(bytes, offset, size);\n        const copy = Uint8Array.prototype.slice.call(bytes, offset, offset + size);\n        this.store(copy, value);\n        return value;\n    }\n}\n","import { CachedUtf8Decoder } from './CachedUtf8Decoder';\nexport default new CachedUtf8Decoder();\n","import { decodeF16 } from '../../util/buffers/f16';\nimport { JsonPackExtension } from '../JsonPackExtension';\nimport { JsonPackValue } from '../JsonPackValue';\nimport { Reader } from '../../util/buffers/Reader';\nimport sharedCachedUtf8Decoder from '../../util/buffers/utf8/sharedCachedUtf8Decoder';\nexport class CborDecoderBase {\n    reader;\n    keyDecoder;\n    constructor(reader = new Reader(), keyDecoder = sharedCachedUtf8Decoder) {\n        this.reader = reader;\n        this.keyDecoder = keyDecoder;\n    }\n    read(uint8) {\n        this.reader.reset(uint8);\n        return this.val();\n    }\n    decode(uint8) {\n        this.reader.reset(uint8);\n        return this.val();\n    }\n    val() {\n        const reader = this.reader;\n        const octet = reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major < 4) {\n            if (major < 2)\n                return major === 0 ? this.readUint(minor) : this.readNint(minor);\n            else\n                return major === 2 ? this.readBin(minor) : this.readStr(minor);\n        }\n        else {\n            if (major < 6)\n                return major === 4 ? this.readArr(minor) : this.readObj(minor);\n            else\n                return major === 6 ? this.readTag(minor) : this.readTkn(minor);\n        }\n    }\n    readAnyRaw(octet) {\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major < 4) {\n            if (major < 2)\n                return major === 0 ? this.readUint(minor) : this.readNint(minor);\n            else\n                return major === 2 ? this.readBin(minor) : this.readStr(minor);\n        }\n        else {\n            if (major < 6)\n                return major === 4 ? this.readArr(minor) : this.readObj(minor);\n            else\n                return major === 6 ? this.readTag(minor) : this.readTkn(minor);\n        }\n    }\n    readMinorLen(minor) {\n        if (minor < 24)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n            default:\n                throw 1;\n        }\n    }\n    readUint(minor) {\n        if (minor < 25) {\n            return minor === 24 ? this.reader.u8() : minor;\n        }\n        else {\n            if (minor < 27) {\n                return minor === 25 ? this.reader.u16() : this.reader.u32();\n            }\n            else {\n                const num = this.reader.u64();\n                return num > 9007199254740991 ? num : Number(num);\n            }\n        }\n    }\n    readNint(minor) {\n        if (minor < 25) {\n            return minor === 24 ? -this.reader.u8() - 1 : -minor - 1;\n        }\n        else {\n            if (minor < 27) {\n                return minor === 25 ? -this.reader.u16() - 1 : -this.reader.u32() - 1;\n            }\n            else {\n                const num = this.reader.u64();\n                return num > 9007199254740991 - 1 ? -num - BigInt(1) : -Number(num) - 1;\n            }\n        }\n    }\n    readBin(minor) {\n        const reader = this.reader;\n        if (minor <= 23)\n            return reader.buf(minor);\n        switch (minor) {\n            case 24:\n                return reader.buf(reader.u8());\n            case 25:\n                return reader.buf(reader.u16());\n            case 26:\n                return reader.buf(reader.u32());\n            case 27:\n                return reader.buf(Number(reader.u64()));\n            case 31: {\n                let size = 0;\n                const list = [];\n                while (this.reader.peak() !== 255) {\n                    const uint8 = this.readBinChunk();\n                    size += uint8.length;\n                    list.push(uint8);\n                }\n                this.reader.x++;\n                const res = new Uint8Array(size);\n                let offset = 0;\n                const length = list.length;\n                for (let i = 0; i < length; i++) {\n                    const arr = list[i];\n                    res.set(arr, offset);\n                    offset += arr.length;\n                }\n                return res;\n            }\n            default:\n                throw 1;\n        }\n    }\n    readBinChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 2)\n            throw 2;\n        if (minor > 27)\n            throw 3;\n        return this.readBin(minor);\n    }\n    readAsStr() {\n        const reader = this.reader;\n        const octet = reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 11;\n        return this.readStr(minor);\n    }\n    readStr(minor) {\n        const reader = this.reader;\n        if (minor <= 23)\n            return reader.utf8(minor);\n        switch (minor) {\n            case 24:\n                return reader.utf8(reader.u8());\n            case 25:\n                return reader.utf8(reader.u16());\n            case 26:\n                return reader.utf8(reader.u32());\n            case 27:\n                return reader.utf8(Number(reader.u64()));\n            case 31: {\n                let str = '';\n                while (reader.peak() !== 255)\n                    str += this.readStrChunk();\n                this.reader.x++;\n                return str;\n            }\n            default:\n                throw 1;\n        }\n    }\n    readStrLen(minor) {\n        if (minor <= 23)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            default:\n                throw 1;\n        }\n    }\n    readStrChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 4;\n        if (minor > 27)\n            throw 5;\n        return this.readStr(minor);\n    }\n    readArr(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readArrRaw(length);\n        return this.readArrIndef();\n    }\n    readArrRaw(length) {\n        const arr = [];\n        for (let i = 0; i < length; i++)\n            arr.push(this.val());\n        return arr;\n    }\n    readArrIndef() {\n        const arr = [];\n        while (this.reader.peak() !== 255)\n            arr.push(this.val());\n        this.reader.x++;\n        return arr;\n    }\n    readObj(minor) {\n        if (minor < 28) {\n            let length = minor;\n            switch (minor) {\n                case 24:\n                    length = this.reader.u8();\n                    break;\n                case 25:\n                    length = this.reader.u16();\n                    break;\n                case 26:\n                    length = this.reader.u32();\n                    break;\n                case 27:\n                    length = Number(this.reader.u64());\n                    break;\n            }\n            const obj = {};\n            for (let i = 0; i < length; i++) {\n                const key = this.key();\n                if (key === '__proto__')\n                    throw 6;\n                const value = this.val();\n                obj[key] = value;\n            }\n            return obj;\n        }\n        else if (minor === 31)\n            return this.readObjIndef();\n        else\n            throw 1;\n    }\n    readObjRaw(length) {\n        const obj = {};\n        for (let i = 0; i < length; i++) {\n            const key = this.key();\n            const value = this.val();\n            obj[key] = value;\n        }\n        return obj;\n    }\n    readObjIndef() {\n        const obj = {};\n        while (this.reader.peak() !== 255) {\n            const key = this.key();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.val();\n            obj[key] = value;\n        }\n        this.reader.x++;\n        return obj;\n    }\n    key() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            return String(this.readAnyRaw(octet));\n        const length = this.readStrLen(minor);\n        if (length > 31)\n            return this.reader.utf8(length);\n        const key = this.keyDecoder.decode(this.reader.uint8, this.reader.x, length);\n        this.reader.skip(length);\n        return key;\n    }\n    readTag(minor) {\n        if (minor <= 23)\n            return this.readTagRaw(minor);\n        switch (minor) {\n            case 24:\n                return this.readTagRaw(this.reader.u8());\n            case 25:\n                return this.readTagRaw(this.reader.u16());\n            case 26:\n                return this.readTagRaw(this.reader.u32());\n            case 27:\n                return this.readTagRaw(Number(this.reader.u64()));\n            default:\n                throw 1;\n        }\n    }\n    readTagRaw(tag) {\n        return new JsonPackExtension(tag, this.val());\n    }\n    readTkn(minor) {\n        switch (minor) {\n            case 0xf4 & 31:\n                return false;\n            case 0xf5 & 31:\n                return true;\n            case 0xf6 & 31:\n                return null;\n            case 0xf7 & 31:\n                return undefined;\n            case 0xf8 & 31:\n                return new JsonPackValue(this.reader.u8());\n            case 0xf9 & 31:\n                return this.f16();\n            case 0xfa & 31:\n                return this.reader.f32();\n            case 0xfb & 31:\n                return this.reader.f64();\n        }\n        if (minor <= 23)\n            return new JsonPackValue(minor);\n        throw 1;\n    }\n    f16() {\n        return decodeF16(this.reader.u16());\n    }\n}\n","import * as nodes from '../../../nodes';\nimport { ClockDecoder } from '../../../../json-crdt-patch/codec/clock/ClockDecoder';\nimport { CrdtReader } from '../../../../json-crdt-patch/util/binary/CrdtReader';\nimport { Timestamp } from '../../../../json-crdt-patch/clock';\nimport { Model, UNDEFINED } from '../../../model/Model';\nimport { CborDecoderBase } from '../../../../json-pack/cbor/CborDecoderBase';\nexport class Decoder extends CborDecoderBase {\n    doc;\n    clockDecoder;\n    time = -1;\n    constructor() {\n        super(new CrdtReader());\n    }\n    decode(data, model) {\n        delete this.clockDecoder;\n        this.time = -1;\n        const reader = this.reader;\n        reader.reset(data);\n        const isServerTime = reader.peak() & 0b10000000;\n        if (isServerTime) {\n            reader.x++;\n            const time = (this.time = reader.vu57());\n            if (!model)\n                model = Model.withServerClock(time);\n        }\n        else {\n            this.decodeClockTable();\n            if (!model) {\n                const clock = this.clockDecoder.clock;\n                model = Model.withLogicalClock(clock);\n            }\n        }\n        this.doc = model;\n        model.root = new nodes.RootNode(this.doc, this.cRoot().id);\n        delete this.clockDecoder;\n        return model;\n    }\n    decodeClockTable() {\n        const reader = this.reader;\n        const clockTableOffset = reader.u32();\n        const offset = reader.x;\n        reader.x += clockTableOffset;\n        const length = reader.vu57();\n        const sessionId = reader.vu57();\n        const time = reader.vu57();\n        this.clockDecoder = new ClockDecoder(sessionId, time);\n        for (let i = 1; i < length; i++) {\n            const sid = reader.vu57();\n            const time = reader.vu57();\n            this.clockDecoder.pushTuple(sid, time);\n        }\n        reader.x = offset;\n    }\n    ts() {\n        const decoderTime = this.time;\n        const isLogical = decoderTime < 0;\n        if (isLogical) {\n            const [sessionIndex, timeDiff] = this.reader.id();\n            return this.clockDecoder.decodeId(sessionIndex, timeDiff);\n        }\n        else {\n            return new Timestamp(1, this.reader.vu57());\n        }\n    }\n    cRoot() {\n        const reader = this.reader;\n        const peek = reader.uint8[reader.x];\n        return !peek ? UNDEFINED : this.cNode();\n    }\n    cNode() {\n        const reader = this.reader;\n        const id = this.ts();\n        const octet = reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 0b11111;\n        switch (major) {\n            case 0:\n                return this.cCon(id, minor);\n            case 1:\n                return this.cVal(id);\n            case 2:\n                return this.cObj(id, minor !== 0b11111 ? minor : reader.vu57());\n            case 3:\n                return this.cVec(id, minor !== 0b11111 ? minor : reader.vu57());\n            case 4:\n                return this.cStr(id, minor !== 0b11111 ? minor : reader.vu57());\n            case 5:\n                return this.cBin(id, minor !== 0b11111 ? minor : reader.vu57());\n            case 6:\n                return this.cArr(id, minor !== 0b11111 ? minor : reader.vu57());\n        }\n        throw new Error('UNKNOWN_NODE');\n    }\n    cCon(id, length) {\n        const doc = this.doc;\n        const data = !length ? this.val() : this.ts();\n        const node = new nodes.ConNode(id, data);\n        doc.index.set(id, node);\n        return node;\n    }\n    cVal(id) {\n        const child = this.cNode();\n        const doc = this.doc;\n        const node = new nodes.ValNode(doc, id, child.id);\n        doc.index.set(id, node);\n        return node;\n    }\n    cObj(id, length) {\n        const obj = new nodes.ObjNode(this.doc, id);\n        for (let i = 0; i < length; i++)\n            this.cObjChunk(obj);\n        this.doc.index.set(id, obj);\n        return obj;\n    }\n    cObjChunk(obj) {\n        const key = this.key();\n        obj.keys.set(key, this.cNode().id);\n    }\n    cVec(id, length) {\n        const reader = this.reader;\n        const obj = new nodes.VecNode(this.doc, id);\n        const elements = obj.elements;\n        for (let i = 0; i < length; i++) {\n            const octet = reader.peak();\n            if (!octet) {\n                reader.x++;\n                elements.push(undefined);\n            }\n            else\n                elements.push(this.cNode().id);\n        }\n        this.doc.index.set(id, obj);\n        return obj;\n    }\n    cStr(id, length) {\n        const node = new nodes.StrNode(id);\n        if (length)\n            node.ingest(length, this.cStrChunk);\n        this.doc.index.set(id, node);\n        return node;\n    }\n    cStrChunk = () => {\n        const id = this.ts();\n        const val = this.val();\n        if (typeof val === 'string')\n            return new nodes.StrChunk(id, val.length, val);\n        return new nodes.StrChunk(id, ~~val, '');\n    };\n    cBin(id, length) {\n        const node = new nodes.BinNode(id);\n        if (length)\n            node.ingest(length, this.cBinChunk);\n        this.doc.index.set(id, node);\n        return node;\n    }\n    cBinChunk = () => {\n        const id = this.ts();\n        const reader = this.reader;\n        const [deleted, length] = reader.b1vu56();\n        if (deleted)\n            return new nodes.BinChunk(id, length, undefined);\n        return new nodes.BinChunk(id, length, reader.buf(length));\n    };\n    cArr(id, length) {\n        const obj = new nodes.ArrNode(this.doc, id);\n        if (length)\n            obj.ingest(length, this.cArrChunk);\n        this.doc.index.set(id, obj);\n        return obj;\n    }\n    cArrChunk = () => {\n        const id = this.ts();\n        const [deleted, length] = this.reader.b1vu56();\n        if (deleted)\n            return new nodes.ArrChunk(id, length, undefined);\n        const ids = [];\n        for (let i = 0; i < length; i++)\n            ids.push(this.cNode().id);\n        return new nodes.ArrChunk(id, length, ids);\n    };\n}\n","import { Encoder } from './Encoder';\nimport { Decoder } from './Decoder';\nexport const encoder = new Encoder();\nexport const decoder = new Decoder();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FanOut = void 0;\nclass FanOut {\n    constructor() {\n        this.listeners = new Set();\n    }\n    emit(data) {\n        this.listeners.forEach((listener) => listener(data));\n    }\n    listen(listener) {\n        const listeners = this.listeners;\n        listeners.add(listener);\n        return () => listeners.delete(listener);\n    }\n}\nexports.FanOut = FanOut;\n","const r1 = /~1/g;\nconst r2 = /~0/g;\nconst r3 = /~/g;\nconst r4 = /\\//g;\nexport function unescapeComponent(component) {\n    if (component.indexOf('~') === -1)\n        return component;\n    return component.replace(r1, '/').replace(r2, '~');\n}\nexport function escapeComponent(component) {\n    if (component.indexOf('/') === -1 && component.indexOf('~') === -1)\n        return component;\n    return component.replace(r3, '~0').replace(r4, '~1');\n}\nexport function parseJsonPointer(pointer) {\n    if (!pointer)\n        return [];\n    return pointer.slice(1).split('/').map(unescapeComponent);\n}\nexport function formatJsonPointer(path) {\n    if (isRoot(path))\n        return '';\n    return '/' + path.map((component) => escapeComponent(String(component))).join('/');\n}\nexport const toPath = (pointer) => (typeof pointer === 'string' ? parseJsonPointer(pointer) : pointer);\nexport function isChild(parent, child) {\n    if (parent.length >= child.length)\n        return false;\n    for (let i = 0; i < parent.length; i++)\n        if (parent[i] !== child[i])\n            return false;\n    return true;\n}\nexport function isPathEqual(p1, p2) {\n    if (p1.length !== p2.length)\n        return false;\n    for (let i = 0; i < p1.length; i++)\n        if (p1[i] !== p2[i])\n            return false;\n    return true;\n}\nexport const isRoot = (path) => !path.length;\nexport function parent(path) {\n    if (path.length < 1)\n        throw new Error('NO_PARENT');\n    return path.slice(0, path.length - 1);\n}\nexport function isValidIndex(index) {\n    if (typeof index === 'number')\n        return true;\n    const n = parseInt(index, 10);\n    return String(n) === index && n >= 0;\n}\nexport const isInteger = (str) => {\n    const len = str.length;\n    let i = 0;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n};\n","import { toPath } from '../../../json-pointer';\nimport { VecNode, ObjNode, ArrNode } from '../../nodes';\nexport const find = (startNode, path) => {\n    const steps = toPath(path);\n    let node = startNode;\n    const length = steps.length;\n    if (!length)\n        return node;\n    let i = 0;\n    while (i < length && node) {\n        const step = steps[i++];\n        node = node.container();\n        if (!node)\n            throw new Error('NOT_CONTAINER');\n        if (node instanceof ObjNode) {\n            const nextNode = node.get(String(step));\n            if (!nextNode)\n                throw new Error('NOT_FOUND');\n            node = nextNode;\n        }\n        else if (node instanceof ArrNode) {\n            const nextNode = node.getNode(Number(step));\n            if (!nextNode)\n                throw new Error('NOT_FOUND');\n            node = nextNode;\n        }\n        else if (node instanceof VecNode) {\n            const nextNode = node.get(Number(step));\n            if (!nextNode)\n                throw new Error('NOT_FOUND');\n            node = nextNode;\n        }\n    }\n    return node;\n};\n","import { FanOut } from 'thingies/es2020/fanout';\nexport class MergeFanOut extends FanOut {\n    fanouts;\n    unsubs = [];\n    constructor(fanouts) {\n        super();\n        this.fanouts = fanouts;\n    }\n    listen(listener) {\n        if (!this.listeners.size)\n            this.unsubs = this.fanouts.map((fanout) => fanout.listen((data) => this.emit(data)));\n        const unsub = super.listen(listener);\n        return () => {\n            unsub();\n            if (!this.listeners.size) {\n                this.unsubs.forEach((unsub) => unsub());\n                this.unsubs = [];\n            }\n        };\n    }\n}\nexport class MicrotaskBufferFanOut extends FanOut {\n    source;\n    buffer = [];\n    unsub = undefined;\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n    listen(listener) {\n        if (!this.unsub) {\n            this.unsub = this.source.listen((data) => {\n                const buffer = this.buffer;\n                if (!buffer.length) {\n                    queueMicrotask(() => {\n                        this.emit(buffer);\n                        this.buffer = [];\n                    });\n                }\n                buffer.push(data);\n            });\n        }\n        const unsub = super.listen(listener);\n        return () => {\n            unsub();\n            if (!this.listeners.size)\n                this.clear();\n        };\n    }\n    clear() {\n        this.listeners.clear();\n        this.buffer = [];\n        this.unsub?.();\n        this.unsub = undefined;\n    }\n}\nexport class MapFanOut extends FanOut {\n    source;\n    mapper;\n    constructor(source, mapper) {\n        super();\n        this.source = source;\n        this.mapper = mapper;\n    }\n    unsub = undefined;\n    listen(listener) {\n        if (!this.unsub)\n            this.unsub = this.source.listen((data) => this.emit(this.mapper(data)));\n        const unsub = super.listen(listener);\n        return () => {\n            unsub();\n            if (!this.listeners.size)\n                this.clear();\n        };\n    }\n    clear() {\n        this.listeners.clear();\n        this.unsub?.();\n        this.unsub = undefined;\n    }\n}\nexport class OnNewFanOut extends FanOut {\n    source;\n    last;\n    unsub = undefined;\n    constructor(source, last = undefined) {\n        super();\n        this.source = source;\n        this.last = last;\n    }\n    listen(listener) {\n        if (!this.unsub) {\n            this.unsub = this.source.listen((data) => {\n                if (this.last !== data)\n                    this.emit((this.last = data));\n            });\n        }\n        const unsub = super.listen(listener);\n        return () => {\n            unsub();\n            if (!this.listeners.size)\n                this.clear();\n        };\n    }\n    clear() {\n        this.listeners.clear();\n        this.last = undefined;\n        this.unsub?.();\n        this.unsub = undefined;\n    }\n}\n","import { MapFanOut, OnNewFanOut } from './fanout';\nexport class NodeEvents {\n    api;\n    onChanges;\n    onViewChanges;\n    constructor(api) {\n        this.api = api;\n        this.onChanges = new MapFanOut(this.api.api.onChanges, this.getSnapshot);\n        this.onViewChanges = new OnNewFanOut(this.onChanges, this.api.view());\n    }\n    handleDelete() {\n        this.onViewChanges.clear();\n        this.onChanges.clear();\n    }\n    subscribe = (callback) => this.onViewChanges.listen(() => callback());\n    getSnapshot = () => this.api.view();\n}\n","import { find } from './find';\nimport { Timestamp } from '../../../json-crdt-patch/clock';\nimport { ObjNode, ArrNode, BinNode, ConNode, VecNode, ValNode, StrNode } from '../../nodes';\nimport { NodeEvents } from './NodeEvents';\nimport { printTree } from '../../../util/print/printTree';\nexport class NodeApi {\n    node;\n    api;\n    constructor(node, api) {\n        this.node = node;\n        this.api = api;\n    }\n    ev = undefined;\n    get events() {\n        const et = this.ev;\n        return et || (this.ev = new NodeEvents(this));\n    }\n    find(path) {\n        const node = this.node;\n        if (path === undefined) {\n            if (typeof node.child === 'function') {\n                const child = node.child();\n                if (!child)\n                    throw new Error('NO_CHILD');\n                return child;\n            }\n            throw new Error('CANNOT_IN');\n        }\n        if (typeof path === 'string' && !!path && path[0] !== '/')\n            path = '/' + path;\n        if (typeof path === 'number')\n            path = [path];\n        return find(this.node, path);\n    }\n    in(path) {\n        const node = this.find(path);\n        return this.api.wrap(node);\n    }\n    asVal() {\n        if (this.node instanceof ValNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_VAL');\n    }\n    asStr() {\n        if (this.node instanceof StrNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_STR');\n    }\n    asBin() {\n        if (this.node instanceof BinNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_BIN');\n    }\n    asArr() {\n        if (this.node instanceof ArrNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_ARR');\n    }\n    asTup() {\n        if (this.node instanceof VecNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_ARR');\n    }\n    asObj() {\n        if (this.node instanceof ObjNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_OBJ');\n    }\n    asCon() {\n        if (this.node instanceof ConNode)\n            return this.api.wrap(this.node);\n        throw new Error('NOT_CONST');\n    }\n    asExt(ext) {\n        let node = this.node;\n        while (node) {\n            if (node instanceof ext.Node)\n                return new ext.Api(node, this.api);\n            node = node.child ? node.child() : undefined;\n        }\n        throw new Error('NOT_EXT');\n    }\n    val(path) {\n        return this.in(path).asVal();\n    }\n    str(path) {\n        return this.in(path).asStr();\n    }\n    bin(path) {\n        return this.in(path).asBin();\n    }\n    arr(path) {\n        return this.in(path).asArr();\n    }\n    tup(path) {\n        return this.in(path).asTup();\n    }\n    obj(path) {\n        return this.in(path).asObj();\n    }\n    const(path) {\n        return this.in(path).asCon();\n    }\n    view() {\n        return this.node.view();\n    }\n    toString(tab = '') {\n        return this.constructor.name + printTree(tab, [(tab) => this.node.toString(tab)]);\n    }\n}\nexport class ConApi extends NodeApi {\n    proxy() {\n        return {\n            toApi: () => this,\n            toView: () => this.node.view(),\n        };\n    }\n}\nexport class ValApi extends NodeApi {\n    get() {\n        return this.in();\n    }\n    set(json) {\n        const { api, node } = this;\n        const builder = api.builder;\n        const val = builder.constOrJson(json);\n        api.builder.setVal(node.id, val);\n        api.apply();\n        return this;\n    }\n    proxy() {\n        const self = this;\n        const proxy = {\n            toApi: () => this,\n            toView: () => this.node.view(),\n            get val() {\n                const childNode = self.node.node();\n                return self.api.wrap(childNode).proxy();\n            },\n        };\n        return proxy;\n    }\n}\nexport class VecApi extends NodeApi {\n    get(key) {\n        return this.in(key);\n    }\n    set(entries) {\n        const { api, node } = this;\n        const { builder } = api;\n        builder.insVec(node.id, entries.map(([index, json]) => [index, builder.constOrJson(json)]));\n        api.apply();\n        return this;\n    }\n    push(...values) {\n        const length = this.length();\n        this.set(values.map((value, index) => [length + index, value]));\n    }\n    length() {\n        return this.node.elements.length;\n    }\n    proxy() {\n        const proxy = new Proxy({}, {\n            get: (target, prop, receiver) => {\n                if (prop === 'toApi')\n                    return () => this;\n                if (prop === 'toView')\n                    return () => this.view();\n                const index = Number(prop);\n                if (Number.isNaN(index))\n                    throw new Error('INVALID_INDEX');\n                const child = this.node.get(index);\n                if (!child)\n                    throw new Error('OUT_OF_BOUNDS');\n                return this.api.wrap(child).proxy();\n            },\n        });\n        return proxy;\n    }\n}\nexport class ObjApi extends NodeApi {\n    get(key) {\n        return this.in(key);\n    }\n    set(entries) {\n        const { api, node } = this;\n        const { builder } = api;\n        builder.insObj(node.id, Object.entries(entries).map(([key, json]) => [key, builder.constOrJson(json)]));\n        api.apply();\n        return this;\n    }\n    del(keys) {\n        const { api, node } = this;\n        const { builder } = api;\n        api.builder.insObj(node.id, keys.map((key) => [key, builder.const(undefined)]));\n        api.apply();\n        return this;\n    }\n    proxy() {\n        const proxy = new Proxy({}, {\n            get: (target, prop, receiver) => {\n                if (prop === 'toApi')\n                    return () => this;\n                if (prop === 'toView')\n                    return () => this.view();\n                const key = String(prop);\n                const child = this.node.get(key);\n                if (!child)\n                    throw new Error('NO_SUCH_KEY');\n                return this.api.wrap(child).proxy();\n            },\n        });\n        return proxy;\n    }\n}\nexport class StrApi extends NodeApi {\n    ins(index, text) {\n        const { api, node } = this;\n        api.onBeforeLocalChange.emit(api.next);\n        const builder = api.builder;\n        builder.pad();\n        const nextTime = api.builder.nextTime();\n        const id = new Timestamp(builder.clock.sid, nextTime);\n        const after = node.insAt(index, id, text);\n        if (!after)\n            throw new Error('OUT_OF_BOUNDS');\n        builder.insStr(node.id, after, text);\n        api.advance();\n        return this;\n    }\n    del(index, length) {\n        const { api, node } = this;\n        api.onBeforeLocalChange.emit(api.next);\n        const builder = api.builder;\n        builder.pad();\n        const spans = node.findInterval(index, length);\n        if (!spans)\n            throw new Error('OUT_OF_BOUNDS');\n        node.delete(spans);\n        builder.del(node.id, spans);\n        api.advance();\n        return this;\n    }\n    findId(index) {\n        const node = this.node;\n        const length = node.length();\n        const max = length - 1;\n        if (index > max)\n            index = max;\n        if (index < 0)\n            return node.id;\n        const id = node.find(index);\n        return id || node.id;\n    }\n    findPos(id) {\n        const node = this.node;\n        const nodeId = node.id;\n        if (nodeId.sid === id.sid && nodeId.time === id.time)\n            return -1;\n        const chunk = node.findById(id);\n        if (!chunk)\n            return -1;\n        const pos = node.pos(chunk);\n        return pos + (chunk.del ? 0 : id.time - chunk.id.time);\n    }\n    length() {\n        return this.node.length();\n    }\n    proxy() {\n        return {\n            toApi: () => this,\n            toView: () => this.node.view(),\n        };\n    }\n}\nexport class BinApi extends NodeApi {\n    ins(index, data) {\n        const { api, node } = this;\n        const after = !index ? node.id : node.find(index - 1);\n        if (!after)\n            throw new Error('OUT_OF_BOUNDS');\n        api.builder.insBin(node.id, after, data);\n        api.apply();\n        return this;\n    }\n    del(index, length) {\n        const { api, node } = this;\n        const spans = node.findInterval(index, length);\n        if (!spans)\n            throw new Error('OUT_OF_BOUNDS');\n        api.builder.del(node.id, spans);\n        api.apply();\n        return this;\n    }\n    length() {\n        return this.node.length();\n    }\n    proxy() {\n        return {\n            toApi: () => this,\n            toView: () => this.node.view(),\n        };\n    }\n}\nexport class ArrApi extends NodeApi {\n    get(index) {\n        return this.in(index);\n    }\n    ins(index, values) {\n        const { api, node } = this;\n        const { builder } = api;\n        const after = !index ? node.id : node.find(index - 1);\n        if (!after)\n            throw new Error('OUT_OF_BOUNDS');\n        const valueIds = [];\n        for (let i = 0; i < values.length; i++)\n            valueIds.push(builder.json(values[i]));\n        builder.insArr(node.id, after, valueIds);\n        api.apply();\n        return this;\n    }\n    del(index, length) {\n        const { api, node } = this;\n        const spans = node.findInterval(index, length);\n        if (!spans)\n            throw new Error('OUT_OF_BOUNDS');\n        api.builder.del(node.id, spans);\n        api.apply();\n        return this;\n    }\n    length() {\n        return this.node.length();\n    }\n    proxy() {\n        const proxy = new Proxy({}, {\n            get: (target, prop, receiver) => {\n                if (prop === 'toApi')\n                    return () => this;\n                if (prop === 'toView')\n                    return () => this.view();\n                const index = Number(prop);\n                if (Number.isNaN(index))\n                    throw new Error('INVALID_INDEX');\n                const child = this.node.getNode(index);\n                if (!child)\n                    throw new Error('OUT_OF_BOUNDS');\n                return this.api.wrap(child).proxy();\n            },\n        });\n        return proxy;\n    }\n}\n","export const isUint8Array = typeof Buffer === 'function'\n    ? (x) => x instanceof Uint8Array || Buffer.isBuffer(x)\n    : (x) => x instanceof Uint8Array;\n","import * as operations from '../../operations';\nimport { CrdtWriter } from '../../util/binary/CrdtWriter';\nimport { Timestamp } from '../../clock';\nimport { CborEncoder } from '../../../json-pack/cbor/CborEncoder';\nexport class Encoder extends CborEncoder {\n    writer;\n    patchSid = 0;\n    constructor(writer = new CrdtWriter()) {\n        super(writer);\n        this.writer = writer;\n    }\n    encode(patch) {\n        this.writer.reset();\n        const id = patch.getId();\n        const sid = (this.patchSid = id.sid);\n        const writer = this.writer;\n        writer.vu57(sid);\n        writer.vu57(id.time);\n        const meta = patch.meta;\n        if (meta === undefined)\n            this.writeUndef();\n        else\n            this.writeArr([meta]);\n        this.encodeOperations(patch);\n        return writer.flush();\n    }\n    encodeOperations(patch) {\n        const ops = patch.ops;\n        const length = ops.length;\n        this.writer.vu57(length);\n        for (let i = 0; i < length; i++)\n            this.encodeOperation(ops[i]);\n    }\n    encodeId(id) {\n        const sessionId = id.sid;\n        const time = id.time;\n        const writer = this.writer;\n        if (sessionId === this.patchSid) {\n            writer.b1vu56(0, time);\n        }\n        else {\n            writer.b1vu56(1, time);\n            writer.vu57(sessionId);\n        }\n    }\n    encodeTss(span) {\n        this.encodeId(span);\n        this.writer.vu57(span.span);\n    }\n    writeInsStr(length, obj, ref, str) {\n        const writer = this.writer;\n        if (length <= 0b111) {\n            writer.u8(96 + length);\n        }\n        else {\n            writer.u8(96);\n            writer.vu57(length);\n        }\n        this.encodeId(obj);\n        this.encodeId(ref);\n        return writer.utf8(str);\n    }\n    encodeOperation(op) {\n        const writer = this.writer;\n        const constructor = op.constructor;\n        switch (constructor) {\n            case operations.NewConOp: {\n                const operation = op;\n                const val = operation.val;\n                if (val instanceof Timestamp) {\n                    writer.u8(0 + 1);\n                    this.encodeId(val);\n                }\n                else {\n                    writer.u8(0);\n                    this.writeAny(val);\n                }\n                break;\n            }\n            case operations.NewValOp: {\n                writer.u8(8);\n                break;\n            }\n            case operations.NewObjOp: {\n                writer.u8(16);\n                break;\n            }\n            case operations.NewVecOp: {\n                writer.u8(24);\n                break;\n            }\n            case operations.NewStrOp: {\n                writer.u8(32);\n                break;\n            }\n            case operations.NewBinOp: {\n                writer.u8(40);\n                break;\n            }\n            case operations.NewArrOp: {\n                writer.u8(48);\n                break;\n            }\n            case operations.InsValOp: {\n                const operation = op;\n                writer.u8(72);\n                this.encodeId(operation.obj);\n                this.encodeId(operation.val);\n                break;\n            }\n            case operations.InsObjOp: {\n                const operation = op;\n                const data = operation.data;\n                const length = data.length;\n                if (length <= 0b111) {\n                    writer.u8(80 + length);\n                }\n                else {\n                    writer.u8(80);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++) {\n                    const tuple = data[i];\n                    this.writeStr(tuple[0]);\n                    this.encodeId(tuple[1]);\n                }\n                break;\n            }\n            case operations.InsVecOp: {\n                const operation = op;\n                const data = operation.data;\n                const length = data.length;\n                if (length <= 0b111) {\n                    writer.u8(88 + length);\n                }\n                else {\n                    writer.u8(88);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++) {\n                    const tuple = data[i];\n                    writer.u8(tuple[0]);\n                    this.encodeId(tuple[1]);\n                }\n                break;\n            }\n            case operations.InsStrOp: {\n                const operation = op;\n                const obj = operation.obj;\n                const ref = operation.ref;\n                const str = operation.data;\n                const len1 = str.length;\n                writer.ensureCapacity(24 + len1 * 4);\n                const x = writer.x;\n                const len2 = this.writeInsStr(len1, obj, ref, str);\n                if (len1 !== len2) {\n                    writer.x = x;\n                    this.writeInsStr(len2, obj, ref, str);\n                }\n                break;\n            }\n            case operations.InsBinOp: {\n                const operation = op;\n                const buf = operation.data;\n                const length = buf.length;\n                if (length <= 0b111) {\n                    writer.u8(104 + length);\n                }\n                else {\n                    writer.u8(104);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                this.encodeId(operation.ref);\n                writer.buf(buf, length);\n                break;\n            }\n            case operations.InsArrOp: {\n                const operation = op;\n                const elements = operation.data;\n                const length = elements.length;\n                if (length <= 0b111) {\n                    writer.u8(112 + length);\n                }\n                else {\n                    writer.u8(112);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                this.encodeId(operation.ref);\n                for (let i = 0; i < length; i++)\n                    this.encodeId(elements[i]);\n                break;\n            }\n            case operations.DelOp: {\n                const operation = op;\n                const what = operation.what;\n                const length = what.length;\n                if (length <= 0b111) {\n                    writer.u8(128 + length);\n                }\n                else {\n                    writer.u8(128);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++)\n                    this.encodeTss(what[i]);\n                break;\n            }\n            case operations.NopOp: {\n                const operation = op;\n                const length = operation.len;\n                if (length <= 0b111) {\n                    writer.u8(136 + length);\n                }\n                else {\n                    writer.u8(136);\n                    writer.vu57(length);\n                }\n                break;\n            }\n            default: {\n                throw new Error('UNKNOWN_OP');\n            }\n        }\n    }\n}\n","import { CborDecoderBase } from './CborDecoderBase';\nimport { JsonPackValue } from '../JsonPackValue';\nexport class CborDecoder extends CborDecoderBase {\n    readAsMap() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 5:\n                return this.readMap(minor);\n            default:\n                throw 0;\n        }\n    }\n    readMap(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readMapRaw(length);\n        else\n            return this.readMapIndef();\n    }\n    readMapRaw(length) {\n        const map = new Map();\n        for (let i = 0; i < length; i++) {\n            const key = this.val();\n            const value = this.val();\n            map.set(key, value);\n        }\n        return map;\n    }\n    readMapIndef() {\n        const map = new Map();\n        while (this.reader.peak() !== 255) {\n            const key = this.val();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.val();\n            map.set(key, value);\n        }\n        this.reader.x++;\n        return map;\n    }\n    skipN(n) {\n        for (let i = 0; i < n; i++)\n            this.skipAny();\n    }\n    skipAny() {\n        this.skipAnyRaw(this.reader.u8());\n    }\n    skipAnyRaw(octet) {\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 0:\n            case 1:\n                this.skipUNint(minor);\n                break;\n            case 2:\n                this.skipBin(minor);\n                break;\n            case 3:\n                this.skipStr(minor);\n                break;\n            case 4:\n                this.skipArr(minor);\n                break;\n            case 5:\n                this.skipObj(minor);\n                break;\n            case 7:\n                this.skipTkn(minor);\n                break;\n            case 6:\n                this.skipTag(minor);\n                break;\n        }\n    }\n    skipMinorLen(minor) {\n        if (minor <= 23)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n            default:\n                throw 1;\n        }\n    }\n    skipUNint(minor) {\n        if (minor <= 23)\n            return;\n        switch (minor) {\n            case 24:\n                return this.reader.skip(1);\n            case 25:\n                return this.reader.skip(2);\n            case 26:\n                return this.reader.skip(4);\n            case 27:\n                return this.reader.skip(8);\n            default:\n                throw 1;\n        }\n    }\n    skipBin(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.reader.skip(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipBinChunk();\n            this.reader.x++;\n        }\n    }\n    skipBinChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 2)\n            throw 2;\n        if (minor > 27)\n            throw 3;\n        this.skipBin(minor);\n    }\n    skipStr(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.reader.skip(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipStrChunk();\n            this.reader.x++;\n        }\n    }\n    skipStrChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 4;\n        if (minor > 27)\n            throw 5;\n        this.skipStr(minor);\n    }\n    skipArr(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.skipN(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipAny();\n            this.reader.x++;\n        }\n    }\n    skipObj(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.skipN(length * 2);\n        else {\n            while (this.reader.peak() !== 255) {\n                this.skipAny();\n                if (this.reader.peak() === 255)\n                    throw 7;\n                this.skipAny();\n            }\n            this.reader.x++;\n        }\n    }\n    skipTag(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length < 0)\n            throw 1;\n        this.skipAny();\n    }\n    skipTkn(minor) {\n        switch (minor) {\n            case 0xf8 & 31:\n                this.reader.skip(1);\n                return;\n            case 0xf9 & 31:\n                this.reader.skip(2);\n                return;\n            case 0xfa & 31:\n                this.reader.skip(4);\n                return;\n            case 0xfb & 31:\n                this.reader.skip(8);\n                return;\n        }\n        if (minor <= 23)\n            return;\n        throw 1;\n    }\n    validate(value, offset = 0, size = value.length) {\n        this.reader.reset(value);\n        this.reader.x = offset;\n        const start = offset;\n        this.skipAny();\n        const end = this.reader.x;\n        if (end - start !== size)\n            throw 8;\n    }\n    decodeLevel(value) {\n        this.reader.reset(value);\n        return this.readLevel();\n    }\n    readLevel() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 4:\n                return this.readArrLevel(minor);\n            case 5:\n                return this.readObjLevel(minor);\n            default:\n                return super.readAnyRaw(octet);\n        }\n    }\n    readPrimitiveOrVal() {\n        const octet = this.reader.peak();\n        const major = octet >> 5;\n        switch (major) {\n            case 4:\n            case 5:\n                return this.readAsValue();\n            default:\n                return this.val();\n        }\n    }\n    readAsValue() {\n        const reader = this.reader;\n        const start = reader.x;\n        this.skipAny();\n        const end = reader.x;\n        return new JsonPackValue(reader.uint8.subarray(start, end));\n    }\n    readObjLevel(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readObjRawLevel(length);\n        else\n            return this.readObjIndefLevel();\n    }\n    readObjRawLevel(length) {\n        const obj = {};\n        for (let i = 0; i < length; i++) {\n            const key = this.key();\n            const value = this.readPrimitiveOrVal();\n            obj[key] = value;\n        }\n        return obj;\n    }\n    readObjIndefLevel() {\n        const obj = {};\n        while (this.reader.peak() !== 255) {\n            const key = this.key();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.readPrimitiveOrVal();\n            obj[key] = value;\n        }\n        this.reader.x++;\n        return obj;\n    }\n    readArrLevel(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readArrRawLevel(length);\n        return this.readArrIndefLevel();\n    }\n    readArrRawLevel(length) {\n        const arr = [];\n        for (let i = 0; i < length; i++)\n            arr.push(this.readPrimitiveOrVal());\n        return arr;\n    }\n    readArrIndefLevel() {\n        const arr = [];\n        while (this.reader.peak() !== 255)\n            arr.push(this.readPrimitiveOrVal());\n        this.reader.x++;\n        return arr;\n    }\n    readHdr(expectedMajor) {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        if (major !== expectedMajor)\n            throw 0;\n        const minor = octet & 31;\n        if (minor < 24)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n        }\n        throw 1;\n    }\n    readStrHdr() {\n        return this.readHdr(3);\n    }\n    readObjHdr() {\n        return this.readHdr(5);\n    }\n    readArrHdr() {\n        return this.readHdr(4);\n    }\n    findKey(key) {\n        const size = this.readObjHdr();\n        for (let i = 0; i < size; i++) {\n            const k = this.key();\n            if (k === key)\n                return this;\n            this.skipAny();\n        }\n        throw 9;\n    }\n    findIndex(index) {\n        const size = this.readArrHdr();\n        if (index >= size)\n            throw 10;\n        for (let i = 0; i < index; i++)\n            this.skipAny();\n        return this;\n    }\n    find(path) {\n        for (let i = 0; i < path.length; i++) {\n            const segment = path[i];\n            if (typeof segment === 'string')\n                this.findKey(segment);\n            else\n                this.findIndex(segment);\n        }\n        return this;\n    }\n}\n","import { CrdtReader } from '../../util/binary/CrdtReader';\nimport { interval, ClockVector, ServerClockVector, Timestamp } from '../../clock';\nimport { PatchBuilder } from '../../PatchBuilder';\nimport { CborDecoder } from '../../../json-pack/cbor/CborDecoder';\nexport class Decoder extends CborDecoder {\n    builder;\n    patchSid;\n    constructor(reader = new CrdtReader()) {\n        super(reader);\n    }\n    decode(data) {\n        const reader = this.reader;\n        reader.reset(data);\n        const sid = reader.vu57();\n        const time = reader.vu57();\n        const isServerClock = sid === 1;\n        const clock = isServerClock ? new ServerClockVector(1, time) : new ClockVector(sid, time);\n        this.patchSid = clock.sid;\n        const builder = (this.builder = new PatchBuilder(clock));\n        const map = this.val();\n        if (map instanceof Array)\n            builder.patch.meta = map[0];\n        this.decodeOperations();\n        return builder.patch;\n    }\n    decodeId() {\n        const reader = this.reader;\n        const [isSessionDifferent, x] = reader.b1vu56();\n        return isSessionDifferent ? new Timestamp(reader.vu57(), x) : new Timestamp(this.patchSid, x);\n    }\n    decodeTss() {\n        const id = this.decodeId();\n        const span = this.reader.vu57();\n        return interval(id, 0, span);\n    }\n    decodeOperations() {\n        const reader = this.reader;\n        const length = reader.vu57();\n        for (let i = 0; i < length; i++)\n            this.decodeOperation();\n    }\n    decodeOperation() {\n        const builder = this.builder;\n        const reader = this.reader;\n        const octet = reader.u8();\n        const opcode = octet >> 3;\n        switch (opcode) {\n            case 0: {\n                const length = octet & 0b111;\n                builder.const(!length ? this.val() : this.decodeId());\n                break;\n            }\n            case 1: {\n                builder.val();\n                break;\n            }\n            case 2: {\n                builder.obj();\n                break;\n            }\n            case 3: {\n                builder.vec();\n                break;\n            }\n            case 4: {\n                builder.str();\n                break;\n            }\n            case 5: {\n                builder.bin();\n                break;\n            }\n            case 6: {\n                builder.arr();\n                break;\n            }\n            case 9: {\n                const obj = this.decodeId();\n                const val = this.decodeId();\n                builder.setVal(obj, val);\n                break;\n            }\n            case 10: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const tuples = [];\n                for (let i = 0; i < length; i++) {\n                    const key = this.val();\n                    if (typeof key !== 'string')\n                        continue;\n                    const value = this.decodeId();\n                    tuples.push([key, value]);\n                }\n                builder.insObj(obj, tuples);\n                break;\n            }\n            case 11: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const tuples = [];\n                for (let i = 0; i < length; i++) {\n                    const index = this.val();\n                    if (typeof index !== 'number')\n                        continue;\n                    const value = this.decodeId();\n                    tuples.push([index, value]);\n                }\n                builder.insVec(obj, tuples);\n                break;\n            }\n            case 12: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const str = reader.utf8(length);\n                builder.insStr(obj, after, str);\n                break;\n            }\n            case 13: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const buf = reader.buf(length);\n                if (!(buf instanceof Uint8Array))\n                    return;\n                builder.insBin(obj, after, buf);\n                break;\n            }\n            case 14: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const elements = [];\n                for (let i = 0; i < length; i++)\n                    elements.push(this.decodeId());\n                builder.insArr(obj, after, elements);\n                break;\n            }\n            case 16: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const what = [];\n                for (let i = 0; i < length; i++)\n                    what.push(this.decodeTss());\n                builder.del(obj, what);\n                break;\n            }\n            case 17: {\n                const length = octet & 0b111 || reader.vu57();\n                builder.nop(length);\n                break;\n            }\n            default: {\n                throw new Error('UNKNOWN_OP');\n            }\n        }\n    }\n}\n","import { Encoder } from './Encoder';\nimport { Decoder } from './Decoder';\nimport { CrdtWriter } from '../../util/binary/CrdtWriter';\nconst writer = new CrdtWriter(1024 * 4);\nexport const encoder = new Encoder(writer);\nexport const encode = (patch) => {\n    return encoder.encode(patch);\n};\nexport const decoder = new Decoder();\nexport const decode = (buf) => {\n    return decoder.decode(buf);\n};\n","import * as operations from './operations';\nimport { ts, toDisplayString } from './clock';\nimport { encode, decode } from './codec/binary';\nexport class Patch {\n    static fromBinary(data) {\n        return decode(data);\n    }\n    ops = [];\n    meta = undefined;\n    getId() {\n        const op = this.ops[0];\n        if (!op)\n            return undefined;\n        return op.id;\n    }\n    span() {\n        let span = 0;\n        for (const op of this.ops)\n            span += op.span();\n        return span;\n    }\n    nextTime() {\n        const ops = this.ops;\n        const length = ops.length;\n        if (!length)\n            return 0;\n        const lastOp = ops[length - 1];\n        return lastOp.id.time + lastOp.span();\n    }\n    rewriteTime(ts) {\n        const patch = new Patch();\n        const ops = this.ops;\n        const length = ops.length;\n        const patchOps = patch.ops;\n        for (let i = 0; i < length; i++) {\n            const op = ops[i];\n            if (op instanceof operations.DelOp)\n                patchOps.push(new operations.DelOp(ts(op.id), ts(op.obj), op.what));\n            else if (op instanceof operations.NewConOp)\n                patchOps.push(new operations.NewConOp(ts(op.id), op.val));\n            else if (op instanceof operations.NewVecOp)\n                patchOps.push(new operations.NewVecOp(ts(op.id)));\n            else if (op instanceof operations.NewValOp)\n                patchOps.push(new operations.NewValOp(ts(op.id)));\n            else if (op instanceof operations.NewObjOp)\n                patchOps.push(new operations.NewObjOp(ts(op.id)));\n            else if (op instanceof operations.NewStrOp)\n                patchOps.push(new operations.NewStrOp(ts(op.id)));\n            else if (op instanceof operations.NewBinOp)\n                patchOps.push(new operations.NewBinOp(ts(op.id)));\n            else if (op instanceof operations.NewArrOp)\n                patchOps.push(new operations.NewArrOp(ts(op.id)));\n            else if (op instanceof operations.InsArrOp)\n                patchOps.push(new operations.InsArrOp(ts(op.id), ts(op.obj), ts(op.ref), op.data.map(ts)));\n            else if (op instanceof operations.InsStrOp)\n                patchOps.push(new operations.InsStrOp(ts(op.id), ts(op.obj), ts(op.ref), op.data));\n            else if (op instanceof operations.InsBinOp)\n                patchOps.push(new operations.InsBinOp(ts(op.id), ts(op.obj), ts(op.ref), op.data));\n            else if (op instanceof operations.InsValOp)\n                patchOps.push(new operations.InsValOp(ts(op.id), ts(op.obj), ts(op.val)));\n            else if (op instanceof operations.InsObjOp)\n                patchOps.push(new operations.InsObjOp(ts(op.id), ts(op.obj), op.data.map(([key, value]) => [key, ts(value)])));\n            else if (op instanceof operations.NopOp)\n                patchOps.push(new operations.NopOp(ts(op.id), op.len));\n        }\n        return patch;\n    }\n    rebase(serverTime, transformHorizon) {\n        const id = this.getId();\n        if (!id)\n            throw new Error('EMPTY_PATCH');\n        const patchStartTime = id.time;\n        if (patchStartTime === serverTime)\n            return this;\n        const delta = serverTime - patchStartTime;\n        return this.rewriteTime((id) => {\n            const sessionId = id.sid;\n            const isServerTimestamp = sessionId === 1;\n            if (!isServerTimestamp)\n                return id;\n            const time = id.time;\n            if (time < transformHorizon)\n                return id;\n            return ts(1, time + delta);\n        });\n    }\n    clone() {\n        return this.rewriteTime((id) => id);\n    }\n    toBinary() {\n        return encode(this);\n    }\n    toString(tab = '') {\n        const id = this.getId();\n        let out = `${this.constructor.name} ${id ? toDisplayString(id) : '(nil)'}!${this.span()}`;\n        for (let i = 0; i < this.ops.length; i++) {\n            const isLast = i === this.ops.length - 1;\n            out += `\\n${tab}${isLast ? 'ââ' : 'ââ'} ${this.ops[i].toString(tab + (isLast ? '  ' : 'â '))}`;\n        }\n        return out;\n    }\n}\n","import { ts } from './clock';\nexport const ORIGIN = ts(0, 0);\n","export class VectorDelayedValue {\n    slots;\n    constructor(slots) {\n        this.slots = slots;\n    }\n}\nexport const vec = (...slots) => new VectorDelayedValue(slots);\n","export class Konst {\n    val;\n    constructor(val) {\n        this.val = val;\n    }\n}\nexport const konst = (val) => new Konst(val);\n","export class NodeBuilder {\n    build;\n    constructor(build) {\n        this.build = build;\n    }\n}\nexport const delayed = (build) => new NodeBuilder(build);\n","import { NewConOp, NewObjOp, NewValOp, NewVecOp, NewStrOp, NewBinOp, NewArrOp, InsValOp, InsObjOp, InsVecOp, InsStrOp, InsBinOp, InsArrOp, DelOp, NopOp, } from './operations';\nimport { ts, Timestamp } from './clock';\nimport { isUint8Array } from '../util/buffers/isUint8Array';\nimport { Patch } from './Patch';\nimport { ORIGIN } from './constants';\nimport { VectorDelayedValue } from './builder/Tuple';\nimport { Konst } from './builder/Konst';\nimport { NodeBuilder } from './builder/DelayedValueBuilder';\nconst maybeConst = (x) => {\n    switch (typeof x) {\n        case 'number':\n        case 'boolean':\n            return true;\n        default:\n            return x === null;\n    }\n};\nexport class PatchBuilder {\n    clock;\n    patch;\n    constructor(clock) {\n        this.clock = clock;\n        this.patch = new Patch();\n    }\n    nextTime() {\n        return this.patch.nextTime() || this.clock.time;\n    }\n    flush() {\n        const patch = this.patch;\n        this.patch = new Patch();\n        return patch;\n    }\n    obj() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewObjOp(id));\n        return id;\n    }\n    arr() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewArrOp(id));\n        return id;\n    }\n    vec() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewVecOp(id));\n        return id;\n    }\n    str() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewStrOp(id));\n        return id;\n    }\n    bin() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewBinOp(id));\n        return id;\n    }\n    const(value) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewConOp(id, value));\n        return id;\n    }\n    val() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new NewValOp(id));\n        return id;\n    }\n    root(val) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new InsValOp(id, ORIGIN, val));\n        return id;\n    }\n    insObj(obj, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_TUPLES');\n        const id = this.clock.tick(1);\n        const op = new InsObjOp(id, obj, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insVec(obj, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_TUPLES');\n        const id = this.clock.tick(1);\n        const op = new InsVecOp(id, obj, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    setVal(obj, val) {\n        this.pad();\n        const id = this.clock.tick(1);\n        const op = new InsValOp(id, obj, val);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insStr(obj, ref, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_STRING');\n        const id = this.clock.tick(1);\n        const op = new InsStrOp(id, obj, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insBin(obj, ref, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_BINARY');\n        const id = this.clock.tick(1);\n        const op = new InsBinOp(id, obj, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insArr(arr, ref, data) {\n        this.pad();\n        const id = this.clock.tick(1);\n        const op = new InsArrOp(id, arr, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    del(obj, what) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new DelOp(id, obj, what));\n        return id;\n    }\n    nop(span) {\n        this.pad();\n        const id = this.clock.tick(span);\n        this.patch.ops.push(new NopOp(id, span));\n        return id;\n    }\n    jsonObj(obj) {\n        const id = this.obj();\n        const keys = Object.keys(obj);\n        if (keys.length) {\n            const tuples = [];\n            for (const k of keys) {\n                const value = obj[k];\n                const valueId = value instanceof Timestamp ? value : maybeConst(value) ? this.const(value) : this.json(value);\n                tuples.push([k, valueId]);\n            }\n            this.insObj(id, tuples);\n        }\n        return id;\n    }\n    jsonArr(arr) {\n        const id = this.arr();\n        if (arr.length) {\n            const values = [];\n            for (const el of arr)\n                values.push(this.json(el));\n            this.insArr(id, id, values);\n        }\n        return id;\n    }\n    jsonStr(str) {\n        const id = this.str();\n        if (str)\n            this.insStr(id, id, str);\n        return id;\n    }\n    jsonBin(bin) {\n        const id = this.bin();\n        if (bin.length)\n            this.insBin(id, id, bin);\n        return id;\n    }\n    jsonVal(value) {\n        const valId = this.val();\n        const id = this.const(value);\n        this.setVal(valId, id);\n        return valId;\n    }\n    jsonVec(vector) {\n        const id = this.vec();\n        const length = vector.length;\n        if (length) {\n            const writes = [];\n            for (let i = 0; i < length; i++)\n                writes.push([i, this.constOrJson(vector[i])]);\n            this.insVec(id, writes);\n        }\n        return id;\n    }\n    json(json) {\n        if (json instanceof Timestamp)\n            return json;\n        if (json === undefined)\n            return this.const(json);\n        if (json instanceof Array)\n            return this.jsonArr(json);\n        if (isUint8Array(json))\n            return this.jsonBin(json);\n        if (json instanceof VectorDelayedValue)\n            return this.jsonVec(json.slots);\n        if (json instanceof Konst)\n            return this.const(json.val);\n        if (json instanceof NodeBuilder)\n            return json.build(this);\n        switch (typeof json) {\n            case 'object':\n                return json === null ? this.jsonVal(json) : this.jsonObj(json);\n            case 'string':\n                return this.jsonStr(json);\n            case 'number':\n            case 'boolean':\n                return this.jsonVal(json);\n        }\n        throw new Error('INVALID_JSON');\n    }\n    constOrJson(value) {\n        if (value instanceof Timestamp)\n            return value;\n        return maybeConst(value) ? this.const(value) : this.json(value);\n    }\n    maybeConst(value) {\n        return value instanceof Timestamp ? value : this.const(value);\n    }\n    pad() {\n        const nextTime = this.patch.nextTime();\n        if (!nextTime)\n            return;\n        const drift = this.clock.time - nextTime;\n        if (drift > 0) {\n            const id = ts(this.clock.sid, nextTime);\n            const padding = new NopOp(id, drift);\n            this.patch.ops.push(padding);\n        }\n    }\n}\n","import { FanOut } from 'thingies/es2020/fanout';\nimport { VecNode, ConNode, ObjNode, ArrNode, BinNode, StrNode, ValNode } from '../../nodes';\nimport { ArrApi, BinApi, ConApi, ObjApi, StrApi, VecApi, ValApi } from './nodes';\nimport { PatchBuilder } from '../../../json-crdt-patch/PatchBuilder';\nimport { MergeFanOut, MicrotaskBufferFanOut } from './fanout';\nexport class ModelApi {\n    model;\n    builder;\n    next = 0;\n    onBeforeReset = new FanOut();\n    onReset = new FanOut();\n    onBeforePatch = new FanOut();\n    onPatch = new FanOut();\n    onBeforeLocalChange = new FanOut();\n    onLocalChange = new FanOut();\n    onLocalChanges = new MicrotaskBufferFanOut(this.onLocalChange);\n    onBeforeTransaction = new FanOut();\n    onTransaction = new FanOut();\n    onChange = new MergeFanOut([this.onReset, this.onPatch, this.onLocalChange]);\n    onChanges = new MicrotaskBufferFanOut(this.onChange);\n    onFlush = new FanOut();\n    constructor(model) {\n        this.model = model;\n        this.builder = new PatchBuilder(model.clock);\n        model.onbeforereset = () => this.onBeforeReset.emit();\n        model.onreset = () => this.onReset.emit();\n        model.onbeforepatch = (patch) => this.onBeforePatch.emit(patch);\n        model.onpatch = (patch) => this.onPatch.emit(patch);\n    }\n    wrap(node) {\n        if (node instanceof ValNode)\n            return node.api || (node.api = new ValApi(node, this));\n        else if (node instanceof StrNode)\n            return node.api || (node.api = new StrApi(node, this));\n        else if (node instanceof BinNode)\n            return node.api || (node.api = new BinApi(node, this));\n        else if (node instanceof ArrNode)\n            return node.api || (node.api = new ArrApi(node, this));\n        else if (node instanceof ObjNode)\n            return node.api || (node.api = new ObjApi(node, this));\n        else if (node instanceof ConNode)\n            return node.api || (node.api = new ConApi(node, this));\n        else if (node instanceof VecNode)\n            return node.api || (node.api = new VecApi(node, this));\n        else\n            throw new Error('UNKNOWN_NODE');\n    }\n    get r() {\n        return new ValApi(this.model.root, this);\n    }\n    get node() {\n        return this.r.get();\n    }\n    in(path) {\n        return this.r.in(path);\n    }\n    find(path) {\n        return this.node.find(path);\n    }\n    val(path) {\n        return this.node.val(path);\n    }\n    vec(path) {\n        return this.node.tup(path);\n    }\n    str(path) {\n        return this.node.str(path);\n    }\n    bin(path) {\n        return this.node.bin(path);\n    }\n    arr(path) {\n        return this.node.arr(path);\n    }\n    obj(path) {\n        return this.node.obj(path);\n    }\n    const(path) {\n        return this.node.const(path);\n    }\n    root(json) {\n        const builder = this.builder;\n        builder.root(builder.json(json));\n        this.apply();\n        return this;\n    }\n    apply() {\n        const ops = this.builder.patch.ops;\n        const length = ops.length;\n        const model = this.model;\n        const from = this.next;\n        this.onBeforeLocalChange.emit(from);\n        for (let i = this.next; i < length; i++)\n            model.applyOperation(ops[i]);\n        this.next = length;\n        model.tick++;\n        this.onLocalChange.emit(from);\n    }\n    advance() {\n        const from = this.next;\n        this.next = this.builder.patch.ops.length;\n        this.model.tick++;\n        this.onLocalChange.emit(from);\n    }\n    view() {\n        return this.model.view();\n    }\n    transaction(callback) {\n        this.onBeforeTransaction.emit();\n        callback();\n        this.onTransaction.emit();\n    }\n    flush() {\n        const patch = this.builder.flush();\n        this.next = 0;\n        this.onFlush.emit(patch);\n        return patch;\n    }\n    stopAutoFlush = undefined;\n    autoFlush() {\n        const drain = () => this.builder.patch.ops.length && this.flush();\n        const onLocalChangesUnsubscribe = this.onLocalChanges.listen(drain);\n        const onBeforeTransactionUnsubscribe = this.onBeforeTransaction.listen(drain);\n        const onTransactionUnsubscribe = this.onTransaction.listen(drain);\n        return (this.stopAutoFlush = () => {\n            this.stopAutoFlush = undefined;\n            onLocalChangesUnsubscribe();\n            onBeforeTransactionUnsubscribe();\n            onTransactionUnsubscribe();\n        });\n    }\n    subscribe = (callback) => this.onChanges.listen(() => callback());\n    getSnapshot = () => this.view();\n}\n","const RESERVED = 0xffff;\nconst DIFF = 9007199254740991 - RESERVED;\nexport const randomSessionId = () => Math.floor(DIFF * Math.random() + RESERVED);\n","import { printTree } from '../../util/print/printTree';\nexport class Extensions {\n    ext = {};\n    register(extension) {\n        this.ext[extension.id] = extension;\n    }\n    get(id) {\n        return this.ext[id];\n    }\n    size() {\n        return Object.keys(this.ext).length;\n    }\n    clone() {\n        const clone = new Extensions();\n        for (const ext of Object.values(this.ext))\n            clone.register(ext);\n        return clone;\n    }\n    toString(tab = '') {\n        const keys = Object.keys(this.ext)\n            .map((k) => +k)\n            .sort();\n        return ('extensions' +\n            printTree(tab, keys.map((k) => (tab) => `${k}: ${this.ext[k].name}`)));\n    }\n}\n","export const stringify = (value, spacing = ' ') => {\n    switch (value) {\n        case null:\n            return '!n';\n        case undefined:\n            return '!u';\n        case true:\n            return '!t';\n        case false:\n            return '!f';\n    }\n    if (Array.isArray(value))\n        return `[${spacing}${value.map((v) => stringify(v, spacing)).join(',' + spacing)}${spacing}]`;\n    if (value instanceof Uint8Array)\n        return `${value}`;\n    switch (typeof value) {\n        case 'number':\n            return `${value}`;\n        case 'string':\n            return JSON.stringify(value);\n        case 'object': {\n            const keys = Object.keys(value);\n            return `{${spacing}${keys\n                .map((k) => `${k}${spacing}=${spacing}${stringify(value[k], spacing)}`)\n                .join(',' + spacing)}${spacing}}`;\n        }\n    }\n    return '?';\n};\n","export const printBinary = (tab = '', children) => {\n    const [left, right] = children;\n    let str = '';\n    if (left)\n        str += `\\n${tab}â ${left(tab + '  ')}`;\n    if (right)\n        str += `\\n${tab}â ${right(tab + '  ')}`;\n    return str;\n};\n","import { stringify } from '../../../json-text/stringify';\nimport { printBinary } from '../../print/printBinary';\nconst rebalanceAfterInsert = (root, node, child) => {\n    const p = node.p;\n    if (!p)\n        return root;\n    const isLeft = node === p.l;\n    let bf = p.bf | 0;\n    if (isLeft)\n        p.bf = ++bf;\n    else\n        p.bf = --bf;\n    switch (bf) {\n        case 0:\n            return root;\n        case 1:\n        case -1:\n            return rebalanceAfterInsert(root, p, node);\n        default: {\n            const isChildLeft = child === node.l;\n            if (isLeft) {\n                if (isChildLeft)\n                    return llRotate(p, node), node.p ? root : node;\n                else\n                    return lrRotate(p, node, child), child.p ? root : child;\n            }\n            else {\n                if (isChildLeft)\n                    return rlRotate(p, node, child), child.p ? root : child;\n                else\n                    return rrRotate(p, node), node.p ? root : node;\n            }\n        }\n    }\n};\nconst llRotate = (n, nl) => {\n    const p = n.p;\n    const nlr = nl.r;\n    nl.p = p;\n    nl.r = n;\n    n.p = nl;\n    n.l = nlr;\n    nlr && (nlr.p = n);\n    p && (p.l === n ? (p.l = nl) : (p.r = nl));\n    let nbf = n.bf;\n    let nlbf = nl.bf;\n    nbf += -1 - (nlbf > 0 ? nlbf : 0);\n    nlbf += -1 + (nbf < 0 ? nbf : 0);\n    n.bf = nbf;\n    nl.bf = nlbf;\n};\nconst rrRotate = (n, nr) => {\n    const p = n.p;\n    const nrl = nr.l;\n    nr.p = p;\n    nr.l = n;\n    n.p = nr;\n    n.r = nrl;\n    nrl && (nrl.p = n);\n    p && (p.l === n ? (p.l = nr) : (p.r = nr));\n    let nbf = n.bf;\n    let nrbf = nr.bf;\n    nbf += 1 - (nrbf < 0 ? nrbf : 0);\n    nrbf += 1 + (nbf > 0 ? nbf : 0);\n    n.bf = nbf;\n    nr.bf = nrbf;\n};\nconst lrRotate = (n, nl, nlr) => {\n    rrRotate(nl, nlr);\n    llRotate(n, nlr);\n};\nconst rlRotate = (n, nr, nrl) => {\n    llRotate(nr, nrl);\n    rrRotate(n, nrl);\n};\nexport const insertRight = (root, n, p) => {\n    p.r = n;\n    n.p = p;\n    p.bf--;\n    return p.l ? root : rebalanceAfterInsert(root, p, n);\n};\nexport const insertLeft = (root, n, p) => {\n    p.l = n;\n    n.p = p;\n    p.bf++;\n    return p.r ? root : rebalanceAfterInsert(root, p, n);\n};\nexport const insert = (root, node, comparator) => {\n    if (!root)\n        return node;\n    const key = node.k;\n    let curr = root;\n    let next = undefined;\n    let cmp = 0;\n    while ((next = ((cmp = comparator(key, curr.k)) < 0 ? curr.l : curr.r)))\n        curr = next;\n    return (cmp < 0 ? insertLeft(root, node, curr) : insertRight(root, node, curr));\n};\nexport const remove = (root, n) => {\n    if (!root)\n        return n;\n    const p = n.p;\n    const l = n.l;\n    const r = n.r;\n    n.p = n.l = n.r = undefined;\n    if (l && r) {\n        const lr = l.r;\n        if (!lr) {\n            p && (p.l === n ? (p.l = l) : (p.r = l));\n            l.p = p;\n            l.r = r;\n            r.p = l;\n            const nbf = n.bf;\n            if (p)\n                return (l.bf = nbf), lRebalance(root, l, 1);\n            const lbf = nbf - 1;\n            l.bf = lbf;\n            if (lbf >= -1)\n                return l;\n            const rl = r.l;\n            return r.bf > 0 ? (rlRotate(l, r, rl), rl) : (rrRotate(l, r), r);\n        }\n        else {\n            let v = l;\n            let tmp = v;\n            while ((tmp = v.r))\n                v = tmp;\n            const vl = v.l;\n            const vp = v.p;\n            const vc = vl;\n            p && (p.l === n ? (p.l = v) : (p.r = v));\n            v.p = p;\n            v.r = r;\n            v.bf = n.bf;\n            l !== v && ((v.l = l), (l.p = v));\n            r.p = v;\n            vp && (vp.l === v ? (vp.l = vc) : (vp.r = vc));\n            vc && (vc.p = vp);\n            return rRebalance(p ? root : v, vp, 1);\n        }\n    }\n    const c = (l || r);\n    c && (c.p = p);\n    if (!p)\n        return c;\n    return p.l === n ? ((p.l = c), lRebalance(root, p, 1)) : ((p.r = c), rRebalance(root, p, 1));\n};\nconst lRebalance = (root, n, d) => {\n    let bf = n.bf | 0;\n    bf -= d;\n    n.bf = bf;\n    let nextD = d;\n    if (bf === -1)\n        return root;\n    if (bf < -1) {\n        const u = n.r;\n        if (u.bf <= 0) {\n            if (u.l && u.bf === 0)\n                nextD = 0;\n            rrRotate(n, u);\n            n = u;\n        }\n        else {\n            const ul = u.l;\n            rlRotate(n, u, ul);\n            n = ul;\n        }\n    }\n    const p = n.p;\n    if (!p)\n        return n;\n    return p.l === n ? lRebalance(root, p, nextD) : rRebalance(root, p, nextD);\n};\nconst rRebalance = (root, n, d) => {\n    let bf = n.bf | 0;\n    bf += d;\n    n.bf = bf;\n    let nextD = d;\n    if (bf === 1)\n        return root;\n    if (bf > 1) {\n        const u = n.l;\n        if (u.bf >= 0) {\n            if (u.r && u.bf === 0)\n                nextD = 0;\n            llRotate(n, u);\n            n = u;\n        }\n        else {\n            const ur = u.r;\n            lrRotate(n, u, ur);\n            n = ur;\n        }\n    }\n    const p = n.p;\n    if (!p)\n        return n;\n    return p.l === n ? lRebalance(root, p, nextD) : rRebalance(root, p, nextD);\n};\nexport const print = (node, tab = '') => {\n    if (!node)\n        return 'â';\n    const { bf, l, r, k, v } = node;\n    const vFormatted = v && typeof v === 'object' && v.constructor === Object\n        ? stringify(v)\n        : v && typeof v === 'object'\n            ? v.toString(tab)\n            : stringify(v);\n    const content = k !== undefined ? ` { ${stringify(k)} = ${vFormatted} }` : '';\n    const bfFormatted = bf ? ` [${bf}]` : '';\n    return (node.constructor.name +\n        `${bfFormatted}` +\n        content +\n        printBinary(tab, [l ? (tab) => print(l, tab) : null, r ? (tab) => print(r, tab) : null]));\n};\n","export const first = (root) => {\n    let curr = root;\n    while (curr)\n        if (curr.l)\n            curr = curr.l;\n        else\n            return curr;\n    return curr;\n};\nexport const last = (root) => {\n    let curr = root;\n    while (curr)\n        if (curr.r)\n            curr = curr.r;\n        else\n            return curr;\n    return curr;\n};\nexport const next = (curr) => {\n    if (curr.r) {\n        curr = curr.r;\n        while (curr.l)\n            curr = curr.l;\n        return curr;\n    }\n    let p = curr.p;\n    while (p && p.r === curr) {\n        curr = p;\n        p = p.p;\n    }\n    return p;\n};\nexport const prev = (curr) => {\n    if (curr.l) {\n        curr = curr.l;\n        while (curr.r)\n            curr = curr.r;\n        return curr;\n    }\n    let p = curr.p;\n    while (p && p.l === curr) {\n        curr = p;\n        p = p.p;\n    }\n    return p;\n};\nexport const size = (root) => {\n    if (!root)\n        return 0;\n    const start = first(root);\n    let curr = start;\n    let result = 1;\n    while ((curr = next(curr)))\n        result++;\n    return result;\n};\nexport const find = (root, key, comparator) => {\n    let curr = root;\n    while (curr) {\n        const cmp = comparator(key, curr.k);\n        if (cmp === 0)\n            return curr;\n        curr = cmp < 0 ? curr.l : curr.r;\n    }\n    return curr;\n};\nexport const findOrNextLower = (root, key, comparator) => {\n    let curr = root;\n    let result = undefined;\n    while (curr) {\n        const cmp = comparator(curr.k, key);\n        if (cmp === 0)\n            return curr;\n        if (cmp > 0)\n            curr = curr.l;\n        else {\n            const next = curr.r;\n            result = curr;\n            if (!next)\n                return result;\n            curr = next;\n        }\n    }\n    return result;\n};\nexport const insertRight = (node, p) => {\n    const r = (node.r = p.r);\n    p.r = node;\n    node.p = p;\n    if (r)\n        r.p = node;\n};\nexport const insertLeft = (node, p) => {\n    const l = (node.l = p.l);\n    p.l = node;\n    node.p = p;\n    if (l)\n        l.p = node;\n};\nexport const insert = (root, node, comparator) => {\n    if (!root)\n        return node;\n    const key = node.k;\n    let curr = root;\n    while (curr) {\n        const cmp = comparator(key, curr.k);\n        const next = cmp < 0 ? curr.l : curr.r;\n        if (!next) {\n            if (cmp < 0)\n                insertLeft(node, curr);\n            else\n                insertRight(node, curr);\n            break;\n        }\n        else\n            curr = next;\n    }\n    return root;\n};\nexport const remove = (root, node) => {\n    const p = node.p;\n    const l = node.l;\n    const r = node.r;\n    node.p = node.l = node.r = undefined;\n    if (!l && !r) {\n        if (!p)\n            return undefined;\n        else if (p.l === node)\n            p.l = undefined;\n        else\n            p.r = undefined;\n        return root;\n    }\n    else if (l && r) {\n        let mostRightChildFromLeft = l;\n        while (mostRightChildFromLeft.r)\n            mostRightChildFromLeft = mostRightChildFromLeft.r;\n        mostRightChildFromLeft.r = r;\n        r.p = mostRightChildFromLeft;\n        if (!p) {\n            l.p = undefined;\n            return l;\n        }\n        if (p.l === node)\n            p.l = l;\n        else\n            p.r = l;\n        l.p = p;\n        return root;\n    }\n    const child = (l || r);\n    child.p = p;\n    if (!p)\n        return child;\n    else if (p.l === node)\n        p.l = child;\n    else\n        p.r = child;\n    return root;\n};\n","import { insert, insertLeft, remove, insertRight, print } from './util';\nimport { printTree } from '../../print/printTree';\nimport { findOrNextLower, first, next } from '../util';\nexport class AvlNode {\n    k;\n    v;\n    p = undefined;\n    l = undefined;\n    r = undefined;\n    bf = 0;\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\nconst defaultComparator = (a, b) => (a === b ? 0 : a < b ? -1 : 1);\nexport class AvlMap {\n    root = undefined;\n    comparator;\n    constructor(comparator) {\n        this.comparator = comparator || defaultComparator;\n    }\n    insert(k, v) {\n        const item = new AvlNode(k, v);\n        this.root = insert(this.root, item, this.comparator);\n        return item;\n    }\n    set(k, v) {\n        const root = this.root;\n        if (!root)\n            return this.insert(k, v);\n        const comparator = this.comparator;\n        let next = root, curr = next;\n        let cmp = 0;\n        do {\n            curr = next;\n            cmp = comparator(k, curr.k);\n            if (cmp === 0)\n                return (curr.v = v), curr;\n        } while ((next = cmp < 0 ? curr.l : curr.r));\n        const node = new AvlNode(k, v);\n        this.root =\n            cmp < 0 ? insertLeft(root, node, curr) : insertRight(root, node, curr);\n        return node;\n    }\n    find(k) {\n        const comparator = this.comparator;\n        let curr = this.root;\n        while (curr) {\n            const cmp = comparator(k, curr.k);\n            if (cmp === 0)\n                return curr;\n            curr = cmp < 0 ? curr.l : curr.r;\n        }\n        return undefined;\n    }\n    get(k) {\n        return this.find(k)?.v;\n    }\n    del(k) {\n        const node = this.find(k);\n        if (!node)\n            return false;\n        this.root = remove(this.root, node);\n        return true;\n    }\n    clear() {\n        this.root = undefined;\n    }\n    has(k) {\n        return !!this.find(k);\n    }\n    size() {\n        const root = this.root;\n        if (!root)\n            return 0;\n        let curr = first(root);\n        let size = 1;\n        while ((curr = next(curr)))\n            size++;\n        return size;\n    }\n    isEmpty() {\n        return !this.root;\n    }\n    getOrNextLower(k) {\n        return findOrNextLower(this.root, k, this.comparator) || undefined;\n    }\n    forEach(fn) {\n        const root = this.root;\n        if (!root)\n            return;\n        let curr = first(root);\n        do\n            fn(curr);\n        while ((curr = next(curr)));\n    }\n    toString(tab) {\n        return this.constructor.name + printTree(tab, [(tab) => print(this.root, tab)]);\n    }\n}\n","import * as operations from '../../json-crdt-patch/operations';\nimport * as clock from '../../json-crdt-patch/clock';\nimport { ConNode } from '../nodes/const/ConNode';\nimport { encoder, decoder } from '../codec/structural/binary/shared';\nimport { ModelApi } from './api/ModelApi';\nimport { ORIGIN } from '../../json-crdt-patch/constants';\nimport { randomSessionId } from './util';\nimport { RootNode, ValNode, VecNode, ObjNode, StrNode, BinNode, ArrNode } from '../nodes';\nimport { printTree } from '../../util/print/printTree';\nimport { Extensions } from '../extensions/Extensions';\nimport { AvlMap } from '../../util/trees/avl/AvlMap';\nexport const UNDEFINED = new ConNode(ORIGIN, undefined);\nexport class Model {\n    static withLogicalClock(clockOrSessionId) {\n        const clockVector = typeof clockOrSessionId === 'number'\n            ? new clock.ClockVector(clockOrSessionId, 1)\n            : clockOrSessionId || new clock.ClockVector(randomSessionId(), 1);\n        return new Model(clockVector);\n    }\n    static withServerClock(time = 0) {\n        const clockVector = new clock.ServerClockVector(1, time);\n        return new Model(clockVector);\n    }\n    static fromBinary(data) {\n        return decoder.decode(data);\n    }\n    root = new RootNode(this, ORIGIN);\n    clock;\n    index = new AvlMap(clock.compare);\n    ext = new Extensions();\n    constructor(clockVector) {\n        this.clock = clockVector;\n        if (!clockVector.time)\n            clockVector.time = 1;\n    }\n    _api;\n    get api() {\n        if (!this._api)\n            this._api = new ModelApi(this);\n        return this._api;\n    }\n    get find() {\n        return this.api.r.proxy();\n    }\n    get s() {\n        return this.api.r.proxy().val;\n    }\n    tick = 0;\n    applyBatch(patches) {\n        const length = patches.length;\n        for (let i = 0; i < length; i++)\n            this.applyPatch(patches[i]);\n    }\n    onbeforepatch = undefined;\n    onpatch = undefined;\n    applyPatch(patch) {\n        this.onbeforepatch?.(patch);\n        const ops = patch.ops;\n        const { length } = ops;\n        for (let i = 0; i < length; i++)\n            this.applyOperation(ops[i]);\n        this.tick++;\n        this.onpatch?.(patch);\n    }\n    applyOperation(op) {\n        this.clock.observe(op.id, op.span());\n        const index = this.index;\n        if (op instanceof operations.InsStrOp) {\n            const node = index.get(op.obj);\n            if (node instanceof StrNode)\n                node.ins(op.ref, op.id, op.data);\n        }\n        else if (op instanceof operations.NewObjOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new ObjNode(this, id));\n        }\n        else if (op instanceof operations.NewArrOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new ArrNode(this, id));\n        }\n        else if (op instanceof operations.NewStrOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new StrNode(id));\n        }\n        else if (op instanceof operations.NewValOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new ValNode(this, id, ORIGIN));\n        }\n        else if (op instanceof operations.NewConOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new ConNode(id, op.val));\n        }\n        else if (op instanceof operations.InsObjOp) {\n            const node = index.get(op.obj);\n            const tuples = op.data;\n            const length = tuples.length;\n            if (node instanceof ObjNode) {\n                for (let i = 0; i < length; i++) {\n                    const tuple = tuples[i];\n                    const valueNode = index.get(tuple[1]);\n                    if (!valueNode)\n                        continue;\n                    if (node.id.time >= tuple[1].time)\n                        continue;\n                    const old = node.put(tuple[0] + '', valueNode.id);\n                    if (old)\n                        this.deleteNodeTree(old);\n                }\n            }\n        }\n        else if (op instanceof operations.InsVecOp) {\n            const node = index.get(op.obj);\n            const tuples = op.data;\n            const length = tuples.length;\n            if (node instanceof VecNode) {\n                for (let i = 0; i < length; i++) {\n                    const tuple = tuples[i];\n                    const valueNode = index.get(tuple[1]);\n                    if (!valueNode)\n                        continue;\n                    if (node.id.time >= tuple[1].time)\n                        continue;\n                    const old = node.put(Number(tuple[0]), valueNode.id);\n                    if (old)\n                        this.deleteNodeTree(old);\n                }\n            }\n        }\n        else if (op instanceof operations.InsValOp) {\n            const obj = op.obj;\n            const node = obj.sid === 0 && obj.time === 0 ? this.root : index.get(obj);\n            if (node instanceof ValNode) {\n                const newValue = index.get(op.val);\n                if (newValue) {\n                    const old = node.set(op.val);\n                    if (old)\n                        this.deleteNodeTree(old);\n                }\n            }\n        }\n        else if (op instanceof operations.InsArrOp) {\n            const node = index.get(op.obj);\n            if (node instanceof ArrNode) {\n                const nodes = [];\n                const data = op.data;\n                const length = data.length;\n                for (let i = 0; i < length; i++) {\n                    const stamp = data[i];\n                    const valueNode = index.get(stamp);\n                    if (!valueNode)\n                        continue;\n                    if (node.id.time >= stamp.time)\n                        continue;\n                    nodes.push(stamp);\n                }\n                if (nodes.length)\n                    node.ins(op.ref, op.id, nodes);\n            }\n        }\n        else if (op instanceof operations.DelOp) {\n            const node = index.get(op.obj);\n            if (node instanceof ArrNode) {\n                const length = op.what.length;\n                for (let i = 0; i < length; i++) {\n                    const span = op.what[i];\n                    for (let j = 0; j < span.span; j++) {\n                        const id = node.getById(new clock.Timestamp(span.sid, span.time + j));\n                        if (id)\n                            this.deleteNodeTree(id);\n                    }\n                }\n                node.delete(op.what);\n            }\n            else if (node instanceof StrNode)\n                node.delete(op.what);\n            else if (node instanceof BinNode)\n                node.delete(op.what);\n        }\n        else if (op instanceof operations.NewBinOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new BinNode(id));\n        }\n        else if (op instanceof operations.InsBinOp) {\n            const node = index.get(op.obj);\n            if (node instanceof BinNode)\n                node.ins(op.ref, op.id, op.data);\n        }\n        else if (op instanceof operations.NewVecOp) {\n            const id = op.id;\n            if (!index.get(id))\n                index.set(id, new VecNode(this, id));\n        }\n    }\n    deleteNodeTree(value) {\n        const isSystemNode = value.sid === 0;\n        if (isSystemNode)\n            return;\n        const node = this.index.get(value);\n        if (!node)\n            return;\n        const api = node.api;\n        if (api)\n            api.events.handleDelete();\n        node.children((child) => this.deleteNodeTree(child.id));\n        this.index.del(value);\n    }\n    fork(sessionId = randomSessionId()) {\n        const copy = Model.fromBinary(this.toBinary());\n        if (copy.clock.sid !== sessionId && copy.clock instanceof clock.ClockVector)\n            copy.clock = copy.clock.fork(sessionId);\n        copy.ext = this.ext;\n        return copy;\n    }\n    clone() {\n        return this.fork(this.clock.sid);\n    }\n    onbeforereset = undefined;\n    onreset = undefined;\n    reset(to) {\n        this.onbeforereset?.();\n        const index = this.index;\n        this.index = new AvlMap(clock.compare);\n        const blob = to.toBinary();\n        decoder.decode(blob, this);\n        this.clock = to.clock.clone();\n        this.ext = to.ext.clone();\n        this._api?.flush();\n        index.forEach(({ v: node }) => {\n            const api = node.api;\n            if (!api)\n                return;\n            const newNode = this.index.get(node.id);\n            if (!newNode) {\n                api.events.handleDelete();\n                return;\n            }\n            api.node = newNode;\n            newNode.api = api;\n        });\n        this.tick++;\n        this.onreset?.();\n    }\n    view() {\n        return this.root.view();\n    }\n    toBinary() {\n        return encoder.encode(this);\n    }\n    setSchema(schema) {\n        if (this.clock.time < 2)\n            this.api.root(schema);\n        return this;\n    }\n    toString(tab = '') {\n        const nl = () => '';\n        const hasExtensions = this.ext.size() > 0;\n        return ('model' +\n            printTree(tab, [\n                (tab) => this.root.toString(tab),\n                nl,\n                (tab) => {\n                    const nodes = [];\n                    this.index.forEach((item) => nodes.push(item.v));\n                    return (`index (${nodes.length} nodes)` +\n                        (nodes.length\n                            ? printTree(tab, nodes.map((node) => (tab) => `${node.name()} ${clock.toDisplayString(node.id)}`))\n                            : ''));\n                },\n                nl,\n                (tab) => `view${printTree(tab, [(tab) => String(JSON.stringify(this.view(), null, 2)).replace(/\\n/g, '\\n' + tab)])}`,\n                nl,\n                (tab) => this.clock.toString(tab),\n                hasExtensions ? nl : null,\n                hasExtensions ? (tab) => this.ext.toString(tab) : null,\n            ]));\n    }\n}\n","import { compare, toDisplayString } from '../../../json-crdt-patch/clock';\nimport { printTree } from '../../../util/print/printTree';\nimport { UNDEFINED } from '../../model/Model';\nexport class ValNode {\n    doc;\n    id;\n    val;\n    constructor(doc, id, val) {\n        this.doc = doc;\n        this.id = id;\n        this.val = val;\n    }\n    set(val) {\n        if (compare(val, this.val) <= 0 && this.val.sid !== 0)\n            return;\n        if (compare(val, this.id) <= 0)\n            return;\n        const oldVal = this.val;\n        this.val = val;\n        return oldVal;\n    }\n    node() {\n        return this.val.sid === 0 ? UNDEFINED : this.child();\n    }\n    view() {\n        return this.node()?.view();\n    }\n    children(callback) {\n        callback(this.node());\n    }\n    child() {\n        return this.doc.index.get(this.val);\n    }\n    container() {\n        const child = this.node();\n        return child ? child.container() : undefined;\n    }\n    api = undefined;\n    name() {\n        return 'val';\n    }\n    toString(tab = '') {\n        const node = this.node();\n        const header = this.name() + ' ' + toDisplayString(this.id);\n        return header + printTree(tab, [(tab) => (node ? node.toString(tab) : toDisplayString(this.val))]);\n    }\n}\n","import { ORIGIN } from '../../../json-crdt-patch/constants';\nimport { ValNode } from '../val/ValNode';\nexport class RootNode extends ValNode {\n    constructor(doc, val) {\n        super(doc, ORIGIN, val);\n    }\n    name() {\n        return 'root';\n    }\n}\n","import { ConNode } from '../const/ConNode';\nimport { printTree } from '../../../util/print/printTree';\nimport { compare, toDisplayString } from '../../../json-crdt-patch/clock';\nexport class VecNode {\n    doc;\n    id;\n    elements = [];\n    constructor(doc, id) {\n        this.doc = doc;\n        this.id = id;\n    }\n    val(index) {\n        return this.elements[index];\n    }\n    get(index) {\n        const id = this.elements[index];\n        if (!id)\n            return undefined;\n        return this.doc.index.get(id);\n    }\n    put(index, id) {\n        if (index > 255)\n            throw new Error('OUT_OF_BOUNDS');\n        const currentId = this.val(index);\n        if (currentId && compare(currentId, id) >= 0)\n            return;\n        if (index > this.elements.length)\n            for (let i = this.elements.length; i < index; i++)\n                this.elements.push(undefined);\n        if (index < this.elements.length)\n            this.elements[index] = id;\n        else\n            this.elements.push(id);\n        return currentId;\n    }\n    __extNode;\n    ext() {\n        if (this.__extNode)\n            return this.__extNode;\n        const extensionId = this.getExtId();\n        const isExtension = extensionId >= 0;\n        if (!isExtension)\n            return undefined;\n        const extension = this.doc.ext.get(extensionId);\n        if (!extension)\n            return undefined;\n        this.__extNode = new extension.Node(this.get(1));\n        return this.__extNode;\n    }\n    isExt() {\n        return !!this.ext();\n    }\n    getExtId() {\n        if (this.elements.length !== 2)\n            return -1;\n        const type = this.get(0);\n        if (!(type instanceof ConNode))\n            return -1;\n        const buf = type.val;\n        const id = this.id;\n        if (!(buf instanceof Uint8Array) || buf.length !== 3 || buf[1] !== id.sid % 256 || buf[2] !== id.time % 256)\n            return -1;\n        return buf[0];\n    }\n    child() {\n        return this.ext();\n    }\n    container() {\n        return this;\n    }\n    children(callback) {\n        if (this.isExt())\n            return;\n        const elements = this.elements;\n        const length = elements.length;\n        const index = this.doc.index;\n        for (let i = 0; i < length; i++) {\n            const id = elements[i];\n            if (!id)\n                continue;\n            const node = index.get(id);\n            if (node)\n                callback(node);\n        }\n    }\n    _view = [];\n    view() {\n        const extNode = this.ext();\n        if (extNode)\n            return extNode.view();\n        let useCache = true;\n        const _view = this._view;\n        const arr = [];\n        const index = this.doc.index;\n        const elements = this.elements;\n        const length = elements.length;\n        for (let i = 0; i < length; i++) {\n            const id = elements[i];\n            const node = id ? index.get(id) : undefined;\n            const value = node ? node.view() : undefined;\n            if (_view[i] !== value)\n                useCache = false;\n            arr.push(value);\n        }\n        return useCache ? _view : (this._view = arr);\n    }\n    api = undefined;\n    name() {\n        return 'vec';\n    }\n    toString(tab = '') {\n        const extNode = this.ext();\n        const header = this.name() + ' ' + toDisplayString(this.id) + (extNode ? ` { extension = ${this.getExtId()} }` : '');\n        if (extNode) {\n            return this.child().toString(tab);\n        }\n        const index = this.doc.index;\n        return (header +\n            printTree(tab, [\n                ...this.elements.map((id, i) => (tab) => `${i}: ${!id ? 'nil' : index.get(id) ? index.get(id).toString(tab + '  ' + ' '.repeat(('' + i).length)) : 'nil'}`),\n                ...(extNode ? [(tab) => `${this.child().toString(tab)}`] : []),\n            ]));\n    }\n}\n","import { compare, toDisplayString } from '../../../json-crdt-patch/clock';\nimport { printTree } from '../../../util/print/printTree';\nexport class ObjNode {\n    doc;\n    id;\n    keys = new Map();\n    constructor(doc, id) {\n        this.doc = doc;\n        this.id = id;\n    }\n    get(key) {\n        const id = this.keys.get(key);\n        if (!id)\n            return undefined;\n        return this.doc.index.get(id);\n    }\n    put(key, id) {\n        const currentId = this.keys.get(key);\n        if (currentId && compare(currentId, id) >= 0)\n            return;\n        this.keys.set(key, id);\n        return currentId;\n    }\n    nodes(callback) {\n        const index = this.doc.index;\n        this.keys.forEach((id, key) => callback(index.get(id), key));\n    }\n    children(callback) {\n        const index = this.doc.index;\n        this.keys.forEach((id, key) => callback(index.get(id)));\n    }\n    child() {\n        return undefined;\n    }\n    container() {\n        return this;\n    }\n    _tick = 0;\n    _view = {};\n    view() {\n        const doc = this.doc;\n        const tick = doc.clock.time + doc.tick;\n        const _view = this._view;\n        if (this._tick === tick)\n            return _view;\n        const view = {};\n        const index = doc.index;\n        let useCache = true;\n        this.keys.forEach((id, key) => {\n            const valueNode = index.get(id);\n            if (!valueNode) {\n                useCache = false;\n                return;\n            }\n            const value = valueNode.view();\n            if (value !== undefined) {\n                if (_view[key] !== value)\n                    useCache = false;\n                view[key] = value;\n            }\n            else if (_view[key] !== undefined)\n                useCache = false;\n        });\n        return useCache ? _view : ((this._tick = tick), (this._view = view));\n    }\n    api = undefined;\n    name() {\n        return 'obj';\n    }\n    toString(tab = '') {\n        const header = this.name() + ' ' + toDisplayString(this.id);\n        return (header +\n            printTree(tab, [...this.keys.entries()]\n                .filter(([, id]) => !!this.doc.index.get(id))\n                .map(([key, id]) => (tab) => JSON.stringify(key) + printTree(tab + ' ', [(tab) => this.doc.index.get(id).toString(tab)]))));\n    }\n}\n","export const splay = (root, node, repeat) => {\n    const p = node.p;\n    if (!p)\n        return root;\n    const pp = p.p;\n    const l2 = p.l === node;\n    if (!pp) {\n        if (l2)\n            rSplay(node, p);\n        else\n            lSplay(node, p);\n        return node;\n    }\n    const l1 = pp.l === p;\n    if (l1) {\n        if (l2) {\n            root = llSplay(root, node, p, pp);\n        }\n        else {\n            root = lrSplay(root, node, p, pp);\n        }\n    }\n    else {\n        if (l2) {\n            root = rlSplay(root, node, p, pp);\n        }\n        else {\n            root = rrSplay(root, node, p, pp);\n        }\n    }\n    if (repeat > 1)\n        return splay(root, node, repeat - 1);\n    return root;\n};\nexport const rSplay = (c2, c1) => {\n    const b = c2.r;\n    c2.p = undefined;\n    c2.r = c1;\n    c1.p = c2;\n    c1.l = b;\n    if (b)\n        b.p = c1;\n};\nexport const lSplay = (c2, c1) => {\n    const b = c2.l;\n    c2.p = undefined;\n    c2.l = c1;\n    c1.p = c2;\n    c1.r = b;\n    if (b)\n        b.p = c1;\n};\nexport const rrSplay = (root, c3, c2, c1) => {\n    const b = c2.l;\n    const c = c3.l;\n    const p = c1.p;\n    c3.p = p;\n    c3.l = c2;\n    c2.p = c3;\n    c2.l = c1;\n    c2.r = c;\n    c1.p = c2;\n    c1.r = b;\n    if (b)\n        b.p = c1;\n    if (c)\n        c.p = c2;\n    if (!p)\n        root = c3;\n    else if (p.l === c1)\n        p.l = c3;\n    else\n        p.r = c3;\n    return root;\n};\nexport const llSplay = (root, c3, c2, c1) => {\n    const b = c2.r;\n    const c = c3.r;\n    const p = c1.p;\n    c3.p = p;\n    c3.r = c2;\n    c2.p = c3;\n    c2.l = c;\n    c2.r = c1;\n    c1.p = c2;\n    c1.l = b;\n    if (b)\n        b.p = c1;\n    if (c)\n        c.p = c2;\n    if (!p)\n        root = c3;\n    else if (p.l === c1)\n        p.l = c3;\n    else\n        p.r = c3;\n    return root;\n};\nexport const lrSplay = (root, c3, c2, c1) => {\n    const c = c3.l;\n    const d = c3.r;\n    const p = c1.p;\n    c3.p = p;\n    c3.l = c2;\n    c3.r = c1;\n    c2.p = c3;\n    c2.r = c;\n    c1.p = c3;\n    c1.l = d;\n    if (c)\n        c.p = c2;\n    if (d)\n        d.p = c1;\n    if (!p)\n        root = c3;\n    else if (p.l === c1)\n        p.l = c3;\n    else\n        p.r = c3;\n    return root;\n};\nexport const rlSplay = (root, c3, c2, c1) => {\n    const c = c3.r;\n    const d = c3.l;\n    const p = c1.p;\n    c3.p = p;\n    c3.l = c1;\n    c3.r = c2;\n    c2.p = c3;\n    c2.l = c;\n    c1.p = c3;\n    c1.r = d;\n    if (c)\n        c.p = c2;\n    if (d)\n        d.p = c1;\n    if (!p)\n        root = c3;\n    else if (p.l === c1)\n        p.l = c3;\n    else\n        p.r = c3;\n    return root;\n};\n","export const splay2 = (root, node) => {\n    const p = node.p2;\n    if (!p)\n        return root;\n    const pp = p.p2;\n    const l2 = p.l2 === node;\n    if (!pp) {\n        if (l2)\n            rSplay2(node, p);\n        else\n            lSplay2(node, p);\n        return node;\n    }\n    const l1 = pp.l2 === p;\n    if (l1) {\n        if (l2) {\n            root = llSplay2(root, node, p, pp);\n        }\n        else {\n            root = lrSplay2(root, node, p, pp);\n        }\n    }\n    else {\n        if (l2) {\n            root = rlSplay2(root, node, p, pp);\n        }\n        else {\n            root = rrSplay2(root, node, p, pp);\n        }\n    }\n    return splay2(root, node);\n};\nconst rSplay2 = (c2, c1) => {\n    const b = c2.r2;\n    c2.p2 = undefined;\n    c2.r2 = c1;\n    c1.p2 = c2;\n    c1.l2 = b;\n    if (b)\n        b.p2 = c1;\n};\nconst lSplay2 = (c2, c1) => {\n    const b = c2.l2;\n    c2.p2 = undefined;\n    c2.l2 = c1;\n    c1.p2 = c2;\n    c1.r2 = b;\n    if (b)\n        b.p2 = c1;\n};\nconst rrSplay2 = (root, c3, c2, c1) => {\n    const b = c2.l2;\n    const c = c3.l2;\n    const p = c1.p2;\n    c3.p2 = p;\n    c3.l2 = c2;\n    c2.p2 = c3;\n    c2.l2 = c1;\n    c2.r2 = c;\n    c1.p2 = c2;\n    c1.r2 = b;\n    if (b)\n        b.p2 = c1;\n    if (c)\n        c.p2 = c2;\n    if (!p)\n        root = c3;\n    else if (p.l2 === c1)\n        p.l2 = c3;\n    else\n        p.r2 = c3;\n    return root;\n};\nconst llSplay2 = (root, c3, c2, c1) => {\n    const b = c2.r2;\n    const c = c3.r2;\n    const p = c1.p2;\n    c3.p2 = p;\n    c3.r2 = c2;\n    c2.p2 = c3;\n    c2.l2 = c;\n    c2.r2 = c1;\n    c1.p2 = c2;\n    c1.l2 = b;\n    if (b)\n        b.p2 = c1;\n    if (c)\n        c.p2 = c2;\n    if (!p)\n        root = c3;\n    else if (p.l2 === c1)\n        p.l2 = c3;\n    else\n        p.r2 = c3;\n    return root;\n};\nconst lrSplay2 = (root, c3, c2, c1) => {\n    const c = c3.l2;\n    const d = c3.r2;\n    const p = c1.p2;\n    c3.p2 = p;\n    c3.l2 = c2;\n    c3.r2 = c1;\n    c2.p2 = c3;\n    c2.r2 = c;\n    c1.p2 = c3;\n    c1.l2 = d;\n    if (c)\n        c.p2 = c2;\n    if (d)\n        d.p2 = c1;\n    if (!p)\n        root = c3;\n    else if (p.l2 === c1)\n        p.l2 = c3;\n    else\n        p.r2 = c3;\n    return root;\n};\nconst rlSplay2 = (root, c3, c2, c1) => {\n    const c = c3.r2;\n    const d = c3.l2;\n    const p = c1.p2;\n    c3.p2 = p;\n    c3.l2 = c1;\n    c3.r2 = c2;\n    c2.p2 = c3;\n    c2.l2 = c;\n    c1.p2 = c3;\n    c1.r2 = d;\n    if (c)\n        c.p2 = c2;\n    if (d)\n        d.p2 = c1;\n    if (!p)\n        root = c3;\n    else if (p.l2 === c1)\n        p.l2 = c3;\n    else\n        p.r2 = c3;\n    return root;\n};\n","export const first2 = (root) => {\n    let curr = root;\n    while (curr)\n        if (curr.l2)\n            curr = curr.l2;\n        else\n            return curr;\n    return curr;\n};\nexport const last2 = (root) => {\n    let curr = root;\n    while (curr)\n        if (curr.r2)\n            curr = curr.r2;\n        else\n            return curr;\n    return curr;\n};\nexport const next2 = (curr) => {\n    if (curr.r2) {\n        curr = curr.r2;\n        while (curr.l2)\n            curr = curr.l2;\n        return curr;\n    }\n    let p = curr.p2;\n    while (p && p.r2 === curr) {\n        curr = p;\n        p = p.p2;\n    }\n    return p;\n};\nexport const prev2 = (curr) => {\n    if (curr.l2) {\n        curr = curr.l2;\n        while (curr.r2)\n            curr = curr.r2;\n        return curr;\n    }\n    let p = curr.p2;\n    while (p && p.l2 === curr) {\n        curr = p;\n        p = p.p2;\n    }\n    return p;\n};\nconst insertRight2 = (node, p) => {\n    const r = (node.r2 = p.r2);\n    p.r2 = node;\n    node.p2 = p;\n    if (r)\n        r.p2 = node;\n};\nconst insertLeft2 = (node, p) => {\n    const l = (node.l2 = p.l2);\n    p.l2 = node;\n    node.p2 = p;\n    if (l)\n        l.p2 = node;\n};\nexport const insert2 = (root, node, comparator) => {\n    if (!root)\n        return node;\n    let curr = root;\n    while (curr) {\n        const cmp = comparator(node, curr);\n        const next = cmp < 0 ? curr.l2 : curr.r2;\n        if (!next) {\n            if (cmp < 0)\n                insertLeft2(node, curr);\n            else\n                insertRight2(node, curr);\n            break;\n        }\n        else\n            curr = next;\n    }\n    return root;\n};\nexport const remove2 = (root, node) => {\n    const p = node.p2;\n    const l = node.l2;\n    const r = node.r2;\n    node.p2 = node.l2 = node.r2 = undefined;\n    if (!l && !r) {\n        if (!p)\n            return undefined;\n        else if (p.l2 === node)\n            p.l2 = undefined;\n        else\n            p.r2 = undefined;\n        return root;\n    }\n    else if (l && r) {\n        let mostRightChildFromLeft = l;\n        while (mostRightChildFromLeft.r2)\n            mostRightChildFromLeft = mostRightChildFromLeft.r2;\n        mostRightChildFromLeft.r2 = r;\n        r.p2 = mostRightChildFromLeft;\n        if (!p) {\n            l.p2 = undefined;\n            return l;\n        }\n        if (p.l2 === node)\n            p.l2 = l;\n        else\n            p.r2 = l;\n        l.p2 = p;\n        return root;\n    }\n    const child = (l || r);\n    child.p2 = p;\n    if (!p)\n        return child;\n    else if (p.l2 === node)\n        p.l2 = child;\n    else\n        p.r2 = child;\n    return root;\n};\n","export const printOctets = (octets, max = 16) => {\n    let str = '';\n    if (!octets.length)\n        return str;\n    if (octets[0] < 16)\n        str += '0';\n    str += octets[0].toString(16);\n    for (let i = 1; i < octets.length && i < max; i++) {\n        const n = octets[i];\n        str += ' ';\n        if (n < 16)\n            str += '0';\n        str += n.toString(16);\n    }\n    if (octets.length > max)\n        str += `â¦ (${octets.length - max} more)`;\n    return str;\n};\n","import { compare, tick, tss, toDisplayString, containsId, Timestamp, } from '../../../json-crdt-patch/clock';\nimport { isUint8Array } from '../../../util/buffers/isUint8Array';\nimport { rSplay, lSplay, llSplay, rrSplay, lrSplay, rlSplay } from '../../../util/trees/splay/util';\nimport { splay2 } from '../../../util/trees/splay/util2';\nimport { insert2, remove2 } from '../../../util/trees/util2';\nimport { ORIGIN } from '../../../json-crdt-patch/constants';\nimport { printTree } from '../../../util/print/printTree';\nimport { printBinary } from '../../../util/print/printBinary';\nimport { printOctets } from '../../../util/buffers/printOctets';\nconst compareById = (c1, c2) => {\n    const ts1 = c1.id;\n    const ts2 = c2.id;\n    return ts1.sid - ts2.sid || ts1.time - ts2.time;\n};\nconst updateLenOne = (chunk) => {\n    const l = chunk.l;\n    const r = chunk.r;\n    chunk.len = (chunk.del ? 0 : chunk.span) + (l ? l.len : 0) + (r ? r.len : 0);\n};\nconst updateLenOneLive = (chunk) => {\n    const l = chunk.l;\n    const r = chunk.r;\n    chunk.len = chunk.span + (l ? l.len : 0) + (r ? r.len : 0);\n};\nconst dLen = (chunk, delta) => {\n    while (chunk) {\n        chunk.len += delta;\n        chunk = chunk.p;\n    }\n};\nconst next = (curr) => {\n    const r = curr.r;\n    if (r) {\n        curr = r;\n        let tmp;\n        while ((tmp = curr.l))\n            curr = tmp;\n        return curr;\n    }\n    let p = curr.p;\n    while (p && p.r === curr) {\n        curr = p;\n        p = p.p;\n    }\n    return p;\n};\nconst prev = (curr) => {\n    const l = curr.l;\n    if (l) {\n        curr = l;\n        let tmp;\n        while ((tmp = curr.r))\n            curr = tmp;\n        return curr;\n    }\n    let p = curr.p;\n    while (p && p.l === curr) {\n        curr = p;\n        p = p.p;\n    }\n    return p;\n};\nexport class AbstractRga {\n    id;\n    root = undefined;\n    ids = undefined;\n    count = 0;\n    constructor(id) {\n        this.id = id;\n    }\n    ins(after, id, content) {\n        const rootId = this.id;\n        const afterTime = after.time;\n        const afterSid = after.sid;\n        const isRootInsert = rootId.time === afterTime && rootId.sid === afterSid;\n        if (isRootInsert) {\n            this.insAfterRoot(after, id, content);\n            return;\n        }\n        let curr = this.ids;\n        let chunk = curr;\n        while (curr) {\n            const currId = curr.id;\n            const currIdSid = currId.sid;\n            if (currIdSid > afterSid) {\n                curr = curr.l2;\n            }\n            else if (currIdSid < afterSid) {\n                chunk = curr;\n                curr = curr.r2;\n            }\n            else {\n                const currIdTime = currId.time;\n                if (currIdTime > afterTime) {\n                    curr = curr.l2;\n                }\n                else if (currIdTime < afterTime) {\n                    chunk = curr;\n                    curr = curr.r2;\n                }\n                else {\n                    chunk = curr;\n                    break;\n                }\n            }\n        }\n        if (!chunk)\n            return;\n        const atId = chunk.id;\n        const atIdTime = atId.time;\n        const atIdSid = atId.sid;\n        const atSpan = chunk.span;\n        if (atIdSid !== afterSid)\n            return;\n        const offset = afterTime - atIdTime;\n        if (offset >= atSpan)\n            return;\n        const offsetInInsertAtChunk = afterTime - atIdTime;\n        this.insAfterChunk(after, chunk, offsetInInsertAtChunk, id, content);\n    }\n    insAt(position, id, content) {\n        if (!position) {\n            const rootId = this.id;\n            this.insAfterRoot(rootId, id, content);\n            return rootId;\n        }\n        const found = this.findChunk(position - 1);\n        if (!found)\n            return undefined;\n        const [at, offset] = found;\n        const atId = at.id;\n        const after = offset === 0 ? atId : new Timestamp(atId.sid, atId.time + offset);\n        this.insAfterChunk(after, at, offset, id, content);\n        return after;\n    }\n    insAfterRoot(after, id, content) {\n        const chunk = this.createChunk(id, content);\n        const first = this.first();\n        if (!first)\n            this.setRoot(chunk);\n        else if (compare(first.id, id) < 0)\n            this.insertBefore(chunk, first);\n        else {\n            if (containsId(first.id, first.span, id))\n                return;\n            this.insertAfterRef(chunk, after, first);\n        }\n    }\n    insAfterChunk(after, chunk, chunkOffset, id, content) {\n        const atId = chunk.id;\n        const atIdTime = atId.time;\n        const atIdSid = atId.sid;\n        const atSpan = chunk.span;\n        const newChunk = this.createChunk(id, content);\n        const needsSplit = chunkOffset + 1 < atSpan;\n        if (needsSplit) {\n            const idSid = id.sid;\n            const idTime = id.time;\n            if (atIdSid === idSid && atIdTime <= idTime && atIdTime + atSpan - 1 >= idTime)\n                return;\n            if (idTime > after.time + 1 || idSid > after.sid) {\n                this.insertInside(newChunk, chunk, chunkOffset + 1);\n                this.splay(newChunk);\n                return;\n            }\n        }\n        this.insertAfterRef(newChunk, after, chunk);\n        this.splay(newChunk);\n    }\n    delete(spans) {\n        const length = spans.length;\n        for (let i = 0; i < length; i++)\n            this.deleteSpan(spans[i]);\n        this.onChange();\n    }\n    deleteSpan(span) {\n        const len = span.span;\n        const t1 = span.time;\n        const t2 = t1 + len - 1;\n        const start = this.findById(span);\n        if (!start)\n            return;\n        let chunk = start;\n        let last = chunk;\n        while (chunk) {\n            last = chunk;\n            const id = chunk.id;\n            const chunkSpan = chunk.span;\n            const c1 = id.time;\n            const c2 = c1 + chunkSpan - 1;\n            if (chunk.del) {\n                if (c2 >= t2)\n                    break;\n                chunk = chunk.s;\n                continue;\n            }\n            const deleteStartsFromLeft = t1 <= c1;\n            const deleteStartsInTheMiddle = t1 <= c2;\n            if (deleteStartsFromLeft) {\n                const deleteFullyContainsChunk = t2 >= c2;\n                if (deleteFullyContainsChunk) {\n                    chunk.delete();\n                    dLen(chunk, -chunk.span);\n                    if (t2 <= c2)\n                        break;\n                }\n                else {\n                    const range = t2 - c1 + 1;\n                    const newChunk = this.split(chunk, range);\n                    chunk.delete();\n                    updateLenOne(newChunk);\n                    dLen(chunk, -chunk.span);\n                    break;\n                }\n            }\n            else if (deleteStartsInTheMiddle) {\n                const deleteContainsRightSide = t2 >= c2;\n                if (deleteContainsRightSide) {\n                    const offset = t1 - c1;\n                    const newChunk = this.split(chunk, offset);\n                    newChunk.delete();\n                    newChunk.len = newChunk.r ? newChunk.r.len : 0;\n                    dLen(chunk, -newChunk.span);\n                    if (t2 <= c2)\n                        break;\n                }\n                else {\n                    const right = this.split(chunk, t2 - c1 + 1);\n                    const mid = this.split(chunk, t1 - c1);\n                    mid.delete();\n                    updateLenOne(right);\n                    updateLenOne(mid);\n                    dLen(chunk, -mid.span);\n                    break;\n                }\n            }\n            chunk = chunk.s;\n        }\n        if (last)\n            this.mergeTombstones2(start, last);\n    }\n    find(position) {\n        let curr = this.root;\n        while (curr) {\n            const l = curr.l;\n            const leftLength = l ? l.len : 0;\n            let span;\n            if (position < leftLength)\n                curr = l;\n            else if (curr.del) {\n                position -= leftLength;\n                curr = curr.r;\n            }\n            else if (position < leftLength + (span = curr.span)) {\n                const ticks = position - leftLength;\n                const id = curr.id;\n                return !ticks ? id : new Timestamp(id.sid, id.time + ticks);\n            }\n            else {\n                position -= leftLength + span;\n                curr = curr.r;\n            }\n        }\n        return;\n    }\n    findChunk(position) {\n        let curr = this.root;\n        while (curr) {\n            const l = curr.l;\n            const leftLength = l ? l.len : 0;\n            let span;\n            if (position < leftLength)\n                curr = l;\n            else if (curr.del) {\n                position -= leftLength;\n                curr = curr.r;\n            }\n            else if (position < leftLength + (span = curr.span)) {\n                return [curr, position - leftLength];\n            }\n            else {\n                position -= leftLength + span;\n                curr = curr.r;\n            }\n        }\n        return;\n    }\n    findInterval(position, length) {\n        const ranges = [];\n        if (!length)\n            return ranges;\n        let curr = this.root;\n        let offset = 0;\n        while (curr) {\n            const leftLength = curr.l ? curr.l.len : 0;\n            if (position < leftLength)\n                curr = curr.l;\n            else if (curr.del) {\n                position -= leftLength;\n                curr = curr.r;\n            }\n            else if (position < leftLength + curr.span) {\n                offset = position - leftLength;\n                break;\n            }\n            else {\n                position -= leftLength + curr.span;\n                curr = curr.r;\n            }\n        }\n        if (!curr)\n            return ranges;\n        if (curr.span >= length + offset) {\n            const id = curr.id;\n            ranges.push(tss(id.sid, id.time + offset, length));\n            return ranges;\n        }\n        const len = curr.span - offset;\n        const id = curr.id;\n        ranges.push(tss(id.sid, id.time + offset, len));\n        length -= len;\n        curr = next(curr);\n        if (!curr)\n            return ranges;\n        do {\n            if (curr.del)\n                continue;\n            const id = curr.id;\n            const span = curr.span;\n            if (length <= span) {\n                ranges.push(tss(id.sid, id.time, length));\n                return ranges;\n            }\n            ranges.push(tss(id.sid, id.time, span));\n            length -= span;\n        } while ((curr = next(curr)) && length > 0);\n        return ranges;\n    }\n    findInterval2(from, to) {\n        const ranges = [];\n        this.range0(undefined, from, to, (chunk, off, len) => {\n            const id = chunk.id;\n            ranges.push(tss(id.sid, id.time + off, len));\n        });\n        return ranges;\n    }\n    range0(startChunk, from, to, callback) {\n        let chunk = startChunk ? startChunk : this.findById(from);\n        if (startChunk)\n            while (chunk && !containsId(chunk.id, chunk.span, from))\n                chunk = next(chunk);\n        if (!chunk)\n            return;\n        if (!chunk.del) {\n            const off = from.time - chunk.id.time;\n            const toContainedInChunk = containsId(chunk.id, chunk.span, to);\n            if (toContainedInChunk) {\n                const len = to.time - from.time + 1;\n                callback(chunk, off, len);\n                return chunk;\n            }\n            const len = chunk.span - off;\n            callback(chunk, off, len);\n        }\n        else {\n            if (containsId(chunk.id, chunk.span, to))\n                return;\n        }\n        chunk = next(chunk);\n        while (chunk) {\n            const toContainedInChunk = containsId(chunk.id, chunk.span, to);\n            if (toContainedInChunk) {\n                if (!chunk.del)\n                    callback(chunk, 0, to.time - chunk.id.time + 1);\n                return chunk;\n            }\n            if (!chunk.del)\n                callback(chunk, 0, chunk.span);\n            chunk = next(chunk);\n        }\n        return chunk;\n    }\n    first() {\n        let curr = this.root;\n        while (curr) {\n            const l = curr.l;\n            if (l)\n                curr = l;\n            else\n                return curr;\n        }\n        return curr;\n    }\n    last() {\n        let curr = this.root;\n        while (curr) {\n            const r = curr.r;\n            if (r)\n                curr = r;\n            else\n                return curr;\n        }\n        return curr;\n    }\n    lastId() {\n        const chunk = this.last();\n        if (!chunk)\n            return undefined;\n        const id = chunk.id;\n        const span = chunk.span;\n        return span === 1 ? id : new Timestamp(id.sid, id.time + span - 1);\n    }\n    next(curr) {\n        return next(curr);\n    }\n    length() {\n        const root = this.root;\n        return root ? root.len : 0;\n    }\n    size() {\n        return this.count;\n    }\n    pos(chunk) {\n        const p = chunk.p;\n        const l = chunk.l;\n        if (!p)\n            return l ? l.len : 0;\n        const parentPos = this.pos(p);\n        const isRightChild = p.r === chunk;\n        if (isRightChild)\n            return parentPos + (p.del ? 0 : p.span) + (l ? l.len : 0);\n        const r = chunk.r;\n        return parentPos - (chunk.del ? 0 : chunk.span) - (r ? r.len : 0);\n    }\n    setRoot(chunk) {\n        this.root = chunk;\n        this.insertId(chunk);\n        this.onChange();\n    }\n    insertBefore(chunk, before) {\n        const l = before.l;\n        before.l = chunk;\n        chunk.l = l;\n        chunk.p = before;\n        let lLen = 0;\n        if (l) {\n            l.p = chunk;\n            lLen = l.len;\n        }\n        chunk.len = chunk.span + lLen;\n        dLen(before, chunk.span);\n        this.insertId(chunk);\n        this.onChange();\n    }\n    insertAfter(chunk, after) {\n        const r = after.r;\n        after.r = chunk;\n        chunk.r = r;\n        chunk.p = after;\n        let rLen = 0;\n        if (r) {\n            r.p = chunk;\n            rLen = r.len;\n        }\n        chunk.len = chunk.span + rLen;\n        dLen(after, chunk.span);\n        this.insertId(chunk);\n        this.onChange();\n    }\n    insertAfterRef(chunk, ref, left) {\n        const id = chunk.id;\n        const sid = id.sid;\n        const time = id.time;\n        let isSplit = false;\n        for (;;) {\n            const leftId = left.id;\n            const leftNextTick = leftId.time + left.span;\n            if (!left.s) {\n                isSplit = leftId.sid === sid && leftNextTick === time && leftNextTick - 1 === ref.time;\n                if (isSplit)\n                    left.s = chunk;\n            }\n            const right = next(left);\n            if (!right)\n                break;\n            const rightId = right.id;\n            const rightIdTime = rightId.time;\n            const rightIdSid = rightId.sid;\n            if (rightIdTime < time)\n                break;\n            if (rightIdTime === time) {\n                if (rightIdSid === sid)\n                    return;\n                if (rightIdSid < sid)\n                    break;\n            }\n            left = right;\n        }\n        if (isSplit && !left.del) {\n            this.mergeContent(left, chunk.data);\n            left.s = undefined;\n        }\n        else\n            this.insertAfter(chunk, left);\n    }\n    mergeContent(chunk, content) {\n        const span1 = chunk.span;\n        chunk.merge(content);\n        dLen(chunk, chunk.span - span1);\n        this.onChange();\n        return;\n    }\n    insertInside(chunk, at, offset) {\n        const p = at.p;\n        const l = at.l;\n        const r = at.r;\n        const s = at.s;\n        const len = at.len;\n        const at2 = at.split(offset);\n        at.s = at2;\n        at2.s = s;\n        at.l = at.r = at2.l = at2.r = undefined;\n        at2.l = undefined;\n        chunk.p = p;\n        if (!l) {\n            chunk.l = at;\n            at.p = chunk;\n        }\n        else {\n            chunk.l = l;\n            l.p = chunk;\n            const a = l.r;\n            l.r = at;\n            at.p = l;\n            at.l = a;\n            if (a)\n                a.p = at;\n        }\n        if (!r) {\n            chunk.r = at2;\n            at2.p = chunk;\n        }\n        else {\n            chunk.r = r;\n            r.p = chunk;\n            const b = r.l;\n            r.l = at2;\n            at2.p = r;\n            at2.r = b;\n            if (b)\n                b.p = at2;\n        }\n        if (!p)\n            this.root = chunk;\n        else if (p.l === at)\n            p.l = chunk;\n        else\n            p.r = chunk;\n        updateLenOne(at);\n        updateLenOne(at2);\n        if (l)\n            l.len = (l.l ? l.l.len : 0) + at.len + (l.del ? 0 : l.span);\n        if (r)\n            r.len = (r.r ? r.r.len : 0) + at2.len + (r.del ? 0 : r.span);\n        chunk.len = len + chunk.span;\n        const span = chunk.span;\n        let curr = chunk.p;\n        while (curr) {\n            curr.len += span;\n            curr = curr.p;\n        }\n        this.insertId(at2);\n        this.insertIdFast(chunk);\n        this.onChange();\n    }\n    split(chunk, ticks) {\n        const s = chunk.s;\n        const newChunk = chunk.split(ticks);\n        const r = chunk.r;\n        chunk.s = newChunk;\n        newChunk.r = r;\n        newChunk.s = s;\n        chunk.r = newChunk;\n        newChunk.p = chunk;\n        this.insertId(newChunk);\n        if (r)\n            r.p = newChunk;\n        return newChunk;\n    }\n    mergeTombstones(ch1, ch2) {\n        if (!ch1.del || !ch2.del)\n            return false;\n        const id1 = ch1.id;\n        const id2 = ch2.id;\n        if (id1.sid !== id2.sid)\n            return false;\n        if (id1.time + ch1.span !== id2.time)\n            return false;\n        ch1.s = ch2.s;\n        ch1.span += ch2.span;\n        this.deleteChunk(ch2);\n        return true;\n    }\n    mergeTombstones2(start, end) {\n        let curr = start;\n        while (curr) {\n            const nextCurr = next(curr);\n            if (!nextCurr)\n                break;\n            const merged = this.mergeTombstones(curr, nextCurr);\n            if (!merged) {\n                if (nextCurr === end) {\n                    if (nextCurr) {\n                        const n = next(nextCurr);\n                        if (n)\n                            this.mergeTombstones(nextCurr, n);\n                    }\n                    break;\n                }\n                curr = curr.s;\n            }\n        }\n        const left = prev(start);\n        if (left)\n            this.mergeTombstones(left, start);\n    }\n    removeTombstones() {\n        let curr = this.first();\n        const list = [];\n        while (curr) {\n            if (curr.del)\n                list.push(curr);\n            curr = next(curr);\n        }\n        for (let i = 0; i < list.length; i++)\n            this.deleteChunk(list[i]);\n    }\n    deleteChunk(chunk) {\n        this.deleteId(chunk);\n        const p = chunk.p;\n        const l = chunk.l;\n        const r = chunk.r;\n        chunk.id = ORIGIN;\n        if (!l && !r) {\n            if (!p)\n                this.root = undefined;\n            else {\n                if (p.l === chunk)\n                    p.l = undefined;\n                else\n                    p.r = undefined;\n            }\n        }\n        else if (l && r) {\n            let mostRightChildFromLeft = l;\n            while (mostRightChildFromLeft.r)\n                mostRightChildFromLeft = mostRightChildFromLeft.r;\n            mostRightChildFromLeft.r = r;\n            r.p = mostRightChildFromLeft;\n            const rLen = r.len;\n            let curr;\n            curr = mostRightChildFromLeft;\n            if (!p) {\n                this.root = l;\n                l.p = undefined;\n            }\n            else {\n                if (p.l === chunk)\n                    p.l = l;\n                else\n                    p.r = l;\n                l.p = p;\n            }\n            while (curr && curr !== p) {\n                curr.len += rLen;\n                curr = curr.p;\n            }\n        }\n        else {\n            const child = (l || r);\n            child.p = p;\n            if (!p)\n                this.root = child;\n            else if (p.l === chunk)\n                p.l = child;\n            else\n                p.r = child;\n        }\n    }\n    insertId(chunk) {\n        this.ids = insert2(this.ids, chunk, compareById);\n        this.count++;\n        this.ids = splay2(this.ids, chunk);\n    }\n    insertIdFast(chunk) {\n        this.ids = insert2(this.ids, chunk, compareById);\n        this.count++;\n    }\n    deleteId(chunk) {\n        this.ids = remove2(this.ids, chunk);\n        this.count--;\n    }\n    findById(after) {\n        const afterSid = after.sid;\n        const afterTime = after.time;\n        let curr = this.ids;\n        let chunk = curr;\n        while (curr) {\n            const currId = curr.id;\n            const currIdSid = currId.sid;\n            if (currIdSid > afterSid) {\n                curr = curr.l2;\n            }\n            else if (currIdSid < afterSid) {\n                chunk = curr;\n                curr = curr.r2;\n            }\n            else {\n                const currIdTime = currId.time;\n                if (currIdTime > afterTime) {\n                    curr = curr.l2;\n                }\n                else if (currIdTime < afterTime) {\n                    chunk = curr;\n                    curr = curr.r2;\n                }\n                else {\n                    chunk = curr;\n                    break;\n                }\n            }\n        }\n        if (!chunk)\n            return;\n        const atId = chunk.id;\n        const atIdTime = atId.time;\n        const atIdSid = atId.sid;\n        const atSpan = chunk.span;\n        if (atIdSid !== afterSid)\n            return;\n        if (afterTime < atIdTime)\n            return;\n        const offset = afterTime - atIdTime;\n        if (offset >= atSpan)\n            return;\n        return chunk;\n    }\n    splay(chunk) {\n        const p = chunk.p;\n        if (!p)\n            return;\n        const pp = p.p;\n        const l2 = p.l === chunk;\n        if (!pp) {\n            if (l2)\n                rSplay(chunk, p);\n            else\n                lSplay(chunk, p);\n            this.root = chunk;\n            updateLenOne(p);\n            updateLenOneLive(chunk);\n            return;\n        }\n        const l1 = pp.l === p;\n        if (l1) {\n            if (l2) {\n                this.root = llSplay(this.root, chunk, p, pp);\n            }\n            else {\n                this.root = lrSplay(this.root, chunk, p, pp);\n            }\n        }\n        else {\n            if (l2) {\n                this.root = rlSplay(this.root, chunk, p, pp);\n            }\n            else {\n                this.root = rrSplay(this.root, chunk, p, pp);\n            }\n        }\n        updateLenOne(pp);\n        updateLenOne(p);\n        updateLenOneLive(chunk);\n        this.splay(chunk);\n    }\n    iterator() {\n        let curr = this.first();\n        return () => {\n            const res = curr;\n            if (curr)\n                curr = next(curr);\n            return res;\n        };\n    }\n    ingest(size, next) {\n        if (size < 1)\n            return;\n        const splitLeftChunks = new Map();\n        this.root = this._ingest(size, () => {\n            const chunk = next();\n            const id = chunk.id;\n            const key = id.sid + '.' + id.time;\n            const split = splitLeftChunks.get(key);\n            if (split) {\n                split.s = chunk;\n                splitLeftChunks.delete(key);\n            }\n            const nextStampAfterSpan = tick(id, chunk.span);\n            splitLeftChunks.set(nextStampAfterSpan.sid + '.' + nextStampAfterSpan.time, chunk);\n            return chunk;\n        });\n    }\n    _ingest(size, next) {\n        const leftSize = size >> 1;\n        const rightSize = size - leftSize - 1;\n        const c1 = leftSize > 0 ? this._ingest(leftSize, next) : undefined;\n        const c2 = next();\n        if (c1) {\n            c2.l = c1;\n            c1.p = c2;\n        }\n        const c3 = rightSize > 0 ? this._ingest(rightSize, next) : undefined;\n        if (c3) {\n            c2.r = c3;\n            c3.p = c2;\n        }\n        updateLenOne(c2);\n        this.insertId(c2);\n        return c2;\n    }\n    toStringName() {\n        return this.constructor.name;\n    }\n    toString(tab = '') {\n        const view = this.view();\n        let value = '';\n        if (isUint8Array(view))\n            value += ` { ${printOctets(view) || 'â'} }`;\n        else if (typeof view === 'string')\n            value += `{ ${view.length > 32 ? JSON.stringify(view.substring(0, 32)) + ' â¦' : JSON.stringify(view)} }`;\n        const header = `${this.toStringName()} ${toDisplayString(this.id)} ${value}`;\n        return header + printTree(tab, [(tab) => (this.root ? this.printChunk(tab, this.root) : 'â')]);\n    }\n    printChunk(tab, chunk) {\n        return (this.formatChunk(chunk) +\n            printBinary(tab, [\n                chunk.l ? (tab) => this.printChunk(tab, chunk.l) : null,\n                chunk.r ? (tab) => this.printChunk(tab, chunk.r) : null,\n            ]));\n    }\n    formatChunk(chunk) {\n        const id = toDisplayString(chunk.id);\n        let str = `${chunk.constructor.name} ${id}!${chunk.span} len:${chunk.len}`;\n        if (chunk.del)\n            str += ` [${chunk.span}]`;\n        else {\n            if (isUint8Array(chunk.data))\n                str += ` { ${printOctets(chunk.data) || 'â'} }`;\n            else if (typeof chunk.data === 'string') {\n                const data = chunk.data.length > 32 ? JSON.stringify(chunk.data.substring(0, 32)) + ' â¦' : JSON.stringify(chunk.data);\n                str += ` { ${data} }`;\n            }\n        }\n        return str;\n    }\n}\n","import { AbstractRga } from '../rga/AbstractRga';\nimport { tick } from '../../../json-crdt-patch/clock';\nimport { printBinary } from '../../../util/print/printBinary';\nimport { printTree } from '../../../util/print/printTree';\nexport class ArrChunk {\n    id;\n    span;\n    del;\n    data;\n    len;\n    p;\n    l;\n    r;\n    p2;\n    l2;\n    r2;\n    s;\n    constructor(id, span, data) {\n        this.id = id;\n        this.span = span;\n        this.len = data ? span : 0;\n        this.del = !data;\n        this.p = undefined;\n        this.l = undefined;\n        this.r = undefined;\n        this.s = undefined;\n        this.data = data;\n    }\n    merge(data) {\n        this.data.push(...data);\n        this.span = this.data.length;\n    }\n    split(ticks) {\n        const span = this.span;\n        this.span = ticks;\n        if (!this.del) {\n            const data = this.data;\n            const rightData = data.splice(ticks);\n            const chunk = new ArrChunk(tick(this.id, ticks), span - ticks, rightData);\n            return chunk;\n        }\n        return new ArrChunk(tick(this.id, ticks), span - ticks, undefined);\n    }\n    delete() {\n        this.del = true;\n        this.data = undefined;\n    }\n    clone() {\n        return new ArrChunk(this.id, this.span, this.data ? [...this.data] : undefined);\n    }\n}\nexport class ArrNode extends AbstractRga {\n    doc;\n    constructor(doc, id) {\n        super(id);\n        this.doc = doc;\n    }\n    get(position) {\n        const pair = this.findChunk(position);\n        if (!pair)\n            return undefined;\n        return pair[0].data[pair[1]];\n    }\n    getNode(position) {\n        const id = this.get(position);\n        if (!id)\n            return undefined;\n        return this.doc.index.get(id);\n    }\n    getById(id) {\n        const chunk = this.findById(id);\n        if (!chunk || chunk.del)\n            return undefined;\n        const offset = id.time - chunk.id.time;\n        return chunk.data[offset];\n    }\n    createChunk(id, data) {\n        return new ArrChunk(id, data ? data.length : 0, data);\n    }\n    onChange() { }\n    toStringName() {\n        return this.name();\n    }\n    child() {\n        return undefined;\n    }\n    container() {\n        return this;\n    }\n    _tick = 0;\n    _view = [];\n    view() {\n        const doc = this.doc;\n        const tick = doc.clock.time + doc.tick;\n        const _view = this._view;\n        if (this._tick === tick)\n            return _view;\n        const view = [];\n        const index = doc.index;\n        let useCache = true;\n        for (let chunk = this.first(); chunk; chunk = this.next(chunk)) {\n            if (chunk.del)\n                continue;\n            for (const node of chunk.data) {\n                const elementNode = index.get(node);\n                if (!elementNode) {\n                    useCache = false;\n                    continue;\n                }\n                const element = elementNode.view();\n                if (_view[view.length] !== element)\n                    useCache = false;\n                view.push(element);\n            }\n        }\n        if (_view.length !== view.length)\n            useCache = false;\n        const result = useCache ? _view : ((this._tick = tick), (this._view = view));\n        return result;\n    }\n    children(callback) {\n        const index = this.doc.index;\n        for (let chunk = this.first(); chunk; chunk = this.next(chunk))\n            if (!chunk.del)\n                for (const node of chunk.data)\n                    callback(index.get(node));\n    }\n    api = undefined;\n    name() {\n        return 'arr';\n    }\n    printChunk(tab, chunk) {\n        const pos = this.pos(chunk);\n        let valueTree = '';\n        if (!chunk.del) {\n            const index = this.doc.index;\n            valueTree = printTree(tab, chunk\n                .data.map((id) => index.get(id))\n                .filter((node) => !!node)\n                .map((node, i) => (tab) => `[${pos + i}]: ${node.toString(tab + '    ' + ' '.repeat(String(i).length))}`));\n        }\n        return (this.formatChunk(chunk) +\n            valueTree +\n            printBinary(tab, [\n                chunk.l ? (tab) => this.printChunk(tab, chunk.l) : null,\n                chunk.r ? (tab) => this.printChunk(tab, chunk.r) : null,\n            ]));\n    }\n}\n","import { tick } from '../../../json-crdt-patch/clock';\nimport { AbstractRga } from '../rga/AbstractRga';\nexport class BinChunk {\n    id;\n    span;\n    del;\n    data;\n    len;\n    p;\n    l;\n    r;\n    p2;\n    l2;\n    r2;\n    s;\n    constructor(id, span, buf) {\n        this.id = id;\n        this.span = span;\n        this.len = buf ? span : 0;\n        this.del = !buf;\n        this.p = undefined;\n        this.l = undefined;\n        this.r = undefined;\n        this.s = undefined;\n        this.data = buf;\n    }\n    merge(data) {\n        const length = this.data.length;\n        const combined = new Uint8Array(length + data.length);\n        combined.set(this.data);\n        combined.set(data, length);\n        this.data = combined;\n        this.span = combined.length;\n    }\n    split(ticks) {\n        if (!this.del) {\n            const data = this.data;\n            const rightBuffer = data.subarray(ticks);\n            const chunk = new BinChunk(tick(this.id, ticks), this.span - ticks, rightBuffer);\n            this.data = data.subarray(0, ticks);\n            this.span = ticks;\n            return chunk;\n        }\n        const chunk = new BinChunk(tick(this.id, ticks), this.span - ticks, undefined);\n        this.span = ticks;\n        return chunk;\n    }\n    delete() {\n        this.del = true;\n        this.data = undefined;\n    }\n    clone() {\n        const chunk = new BinChunk(this.id, this.span, this.data);\n        return chunk;\n    }\n}\nexport class BinNode extends AbstractRga {\n    _view = null;\n    view() {\n        if (this._view)\n            return this._view;\n        const res = new Uint8Array(this.length());\n        let offset = 0;\n        let chunk = this.first();\n        while (chunk) {\n            if (!chunk.del) {\n                const buf = chunk.data;\n                res.set(buf, offset);\n                offset += buf.length;\n            }\n            chunk = this.next(chunk);\n        }\n        return (this._view = res);\n    }\n    children() { }\n    child() {\n        return undefined;\n    }\n    container() {\n        return undefined;\n    }\n    api = undefined;\n    name() {\n        return 'bin';\n    }\n    createChunk(id, buf) {\n        return new BinChunk(id, buf ? buf.length : 0, buf);\n    }\n    onChange() {\n        this._view = null;\n    }\n    toStringName() {\n        return this.name();\n    }\n}\n","import { tick } from '../../../json-crdt-patch/clock';\nimport { AbstractRga } from '../rga/AbstractRga';\nimport { next } from '../../../util/trees/util';\nexport class StrChunk {\n    id;\n    span;\n    del;\n    data;\n    len;\n    p;\n    l;\n    r;\n    p2;\n    l2;\n    r2;\n    s;\n    constructor(id, span, str) {\n        this.id = id;\n        this.span = span;\n        this.len = str ? span : 0;\n        this.del = !str;\n        this.p = undefined;\n        this.l = undefined;\n        this.r = undefined;\n        this.p2 = undefined;\n        this.l2 = undefined;\n        this.r2 = undefined;\n        this.s = undefined;\n        this.data = str;\n    }\n    merge(str) {\n        this.data += str;\n        this.span = this.data.length;\n    }\n    split(ticks) {\n        if (!this.del) {\n            const chunk = new StrChunk(tick(this.id, ticks), this.span - ticks, this.data.slice(ticks));\n            this.data = this.data.slice(0, ticks);\n            this.span = ticks;\n            return chunk;\n        }\n        const chunk = new StrChunk(tick(this.id, ticks), this.span - ticks, '');\n        this.span = ticks;\n        return chunk;\n    }\n    delete() {\n        this.del = true;\n        this.data = '';\n    }\n    clone() {\n        const chunk = new StrChunk(this.id, this.span, this.data);\n        return chunk;\n    }\n}\nexport class StrNode extends AbstractRga {\n    children() { }\n    child() {\n        return undefined;\n    }\n    container() {\n        return undefined;\n    }\n    _view = '';\n    view() {\n        if (this._view)\n            return this._view;\n        let str = '';\n        for (let chunk = this.first(); chunk; chunk = next(chunk))\n            str += chunk.data;\n        return (this._view = str);\n    }\n    api = undefined;\n    name() {\n        return 'str';\n    }\n    createChunk(id, str) {\n        return new StrChunk(id, str ? str.length : 0, str || '');\n    }\n    onChange() {\n        this._view = '';\n    }\n    toStringName() {\n        return this.name();\n    }\n}\n","import { NodeBuilder } from './DelayedValueBuilder';\nexport var nodes;\n(function (nodes) {\n    class con extends NodeBuilder {\n        raw;\n        type = 'con';\n        constructor(raw) {\n            super((builder) => builder.const(raw));\n            this.raw = raw;\n        }\n    }\n    nodes.con = con;\n    class str extends NodeBuilder {\n        raw;\n        type = 'str';\n        constructor(raw) {\n            super((builder) => builder.json(raw));\n            this.raw = raw;\n        }\n    }\n    nodes.str = str;\n    class bin extends NodeBuilder {\n        raw;\n        type = 'bin';\n        constructor(raw) {\n            super((builder) => builder.json(raw));\n            this.raw = raw;\n        }\n    }\n    nodes.bin = bin;\n    class val extends NodeBuilder {\n        value;\n        type = 'val';\n        constructor(value) {\n            super((builder) => {\n                const valId = builder.val();\n                const valueId = value.build(builder);\n                builder.setVal(valId, valueId);\n                return valId;\n            });\n            this.value = value;\n        }\n    }\n    nodes.val = val;\n    class vec extends NodeBuilder {\n        value;\n        type = 'vec';\n        constructor(value) {\n            super((builder) => {\n                const vecId = builder.vec();\n                const length = value.length;\n                if (length) {\n                    const elementPairs = [];\n                    for (let i = 0; i < length; i++) {\n                        const element = value[i];\n                        const elementId = element.build(builder);\n                        elementPairs.push([i, elementId]);\n                    }\n                    builder.insVec(vecId, elementPairs);\n                }\n                return vecId;\n            });\n            this.value = value;\n        }\n    }\n    nodes.vec = vec;\n    class obj extends NodeBuilder {\n        obj;\n        opt;\n        type = 'obj';\n        constructor(obj, opt) {\n            super((builder) => {\n                const objId = builder.obj();\n                const keyValuePairs = [];\n                const merged = { ...obj, ...opt };\n                const keys = Object.keys(merged);\n                const length = keys.length;\n                if (length) {\n                    for (let i = 0; i < length; i++) {\n                        const key = keys[i];\n                        const valueId = merged[key].build(builder);\n                        keyValuePairs.push([key, valueId]);\n                    }\n                    builder.insObj(objId, keyValuePairs);\n                }\n                return objId;\n            });\n            this.obj = obj;\n            this.opt = opt;\n        }\n        optional() {\n            return this;\n        }\n    }\n    nodes.obj = obj;\n    class arr extends NodeBuilder {\n        arr;\n        type = 'arr';\n        constructor(arr) {\n            super((builder) => {\n                const arrId = builder.arr();\n                const length = arr.length;\n                if (length) {\n                    const valueIds = [];\n                    for (let i = 0; i < length; i++)\n                        valueIds.push(arr[i].build(builder));\n                    builder.insArr(arrId, arrId, valueIds);\n                }\n                return arrId;\n            });\n            this.arr = arr;\n        }\n    }\n    nodes.arr = arr;\n})(nodes || (nodes = {}));\nexport const schema = {\n    con: (raw) => new nodes.con(raw),\n    str: (str) => new nodes.str(str || ''),\n    bin: (bin) => new nodes.bin(bin),\n    val: (val) => new nodes.val(val),\n    vec: (...vec) => new nodes.vec(vec),\n    obj: (obj, opt) => new nodes.obj(obj, opt),\n    map: (obj) => schema.obj(obj),\n    arr: (arr) => new nodes.arr(arr),\n};\nexport const s = schema;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerClockVector = exports.ClockVector = exports.LogicalClock = exports.interval = exports.toDisplayString = exports.containsId = exports.contains = exports.compare = exports.equal = exports.tick = exports.tss = exports.ts = exports.Timespan = exports.Timestamp = void 0;\nclass Timestamp {\n    constructor(sid, time) {\n        this.sid = sid;\n        this.time = time;\n    }\n}\nexports.Timestamp = Timestamp;\nclass Timespan {\n    constructor(sid, time, span) {\n        this.sid = sid;\n        this.time = time;\n        this.span = span;\n    }\n}\nexports.Timespan = Timespan;\nconst ts = (sid, time) => new Timestamp(sid, time);\nexports.ts = ts;\nconst tss = (sid, time, span) => new Timespan(sid, time, span);\nexports.tss = tss;\nconst tick = (stamp, cycles) => (0, exports.ts)(stamp.sid, stamp.time + cycles);\nexports.tick = tick;\nconst equal = (ts1, ts2) => ts1.time === ts2.time && ts1.sid === ts2.sid;\nexports.equal = equal;\nconst compare = (ts1, ts2) => {\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return 1;\n    if (t1 < t2)\n        return -1;\n    const s1 = ts1.sid;\n    const s2 = ts2.sid;\n    if (s1 > s2)\n        return 1;\n    if (s1 < s2)\n        return -1;\n    return 0;\n};\nexports.compare = compare;\nconst contains = (ts1, span1, ts2, span2) => {\n    if (ts1.sid !== ts2.sid)\n        return false;\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return false;\n    if (t1 + span1 < t2 + span2)\n        return false;\n    return true;\n};\nexports.contains = contains;\nconst containsId = (ts1, span1, ts2) => {\n    if (ts1.sid !== ts2.sid)\n        return false;\n    const t1 = ts1.time;\n    const t2 = ts2.time;\n    if (t1 > t2)\n        return false;\n    if (t1 + span1 < t2 + 1)\n        return false;\n    return true;\n};\nexports.containsId = containsId;\nconst toDisplayString = (id) => {\n    if (id.sid === 1)\n        return '.' + id.time;\n    let session = '' + id.sid;\n    if (session.length > 4)\n        session = '..' + session.slice(session.length - 4);\n    return session + '.' + id.time;\n};\nexports.toDisplayString = toDisplayString;\nconst interval = (ts, tick, span) => new Timespan(ts.sid, ts.time + tick, span);\nexports.interval = interval;\nclass LogicalClock extends Timestamp {\n    tick(cycles) {\n        const timestamp = new Timestamp(this.sid, this.time);\n        this.time += cycles;\n        return timestamp;\n    }\n}\nexports.LogicalClock = LogicalClock;\nclass ClockVector extends LogicalClock {\n    constructor() {\n        super(...arguments);\n        this.peers = new Map();\n    }\n    observe(id, span) {\n        const edge = id.time + span - 1;\n        const sid = id.sid;\n        if (sid !== this.sid) {\n            const clock = this.peers.get(id.sid);\n            if (!clock)\n                this.peers.set(id.sid, (0, exports.ts)(sid, edge));\n            else if (edge > clock.time)\n                clock.time = edge;\n        }\n        if (edge >= this.time)\n            this.time = edge + 1;\n    }\n    clone() {\n        return this.fork(this.sid);\n    }\n    fork(sessionId) {\n        const clock = new ClockVector(sessionId, this.time);\n        if (sessionId !== this.sid)\n            clock.observe((0, exports.tick)(this, -1), 1);\n        this.peers.forEach((peer) => {\n            clock.observe(peer, 1);\n        });\n        return clock;\n    }\n    toString(tab = '') {\n        const last = this.peers.size;\n        let i = 1;\n        let lines = '';\n        this.peers.forEach((clock) => {\n            const isLast = i === last;\n            lines += `\\n${tab}${isLast ? 'ââ' : 'ââ'} ${clock.sid}.${clock.time}`;\n            i++;\n        });\n        return `clock ${this.sid}.${this.time}${lines}`;\n    }\n}\nexports.ClockVector = ClockVector;\nclass ServerClockVector extends LogicalClock {\n    constructor() {\n        super(...arguments);\n        this.peers = new Map();\n    }\n    observe(ts, span) {\n        if (ts.sid !== 1)\n            throw new Error('INVALID_SERVER_SESSION');\n        if (this.time < ts.time)\n            throw new Error('TIME_TRAVEL');\n        const time = ts.time + span;\n        if (time > this.time)\n            this.time = time;\n    }\n    clone() {\n        return this.fork();\n    }\n    fork() {\n        return new ServerClockVector(1, this.time);\n    }\n    toString() {\n        return `clock ${this.sid}.${this.time}`;\n    }\n}\nexports.ServerClockVector = ServerClockVector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./clock\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NopOp = exports.DelOp = exports.InsArrOp = exports.InsBinOp = exports.InsStrOp = exports.InsVecOp = exports.InsObjOp = exports.InsValOp = exports.NewArrOp = exports.NewBinOp = exports.NewStrOp = exports.NewVecOp = exports.NewObjOp = exports.NewValOp = exports.NewConOp = void 0;\nconst clock_1 = require(\"./clock\");\nclass NewConOp {\n    constructor(id, val) {\n        this.id = id;\n        this.val = val;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_con';\n    }\n    toString(tab = '') {\n        const val = this.val;\n        const valFormatted = val instanceof clock_1.Timestamp\n            ? `{ ${(0, clock_1.toDisplayString)(val)} }`\n            : val instanceof Uint8Array\n                ? val.length < 13\n                    ? `Uint8Array { ${('' + val).replaceAll(',', ', ')} }`\n                    : `Uint8Array(${val.length})`\n                : `{ ${JSON.stringify(val)} }`;\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)} ${valFormatted}`;\n    }\n}\nexports.NewConOp = NewConOp;\nclass NewValOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_val';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewValOp = NewValOp;\nclass NewObjOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_obj';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewObjOp = NewObjOp;\nclass NewVecOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_vec';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewVecOp = NewVecOp;\nclass NewStrOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_str';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewStrOp = NewStrOp;\nclass NewBinOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_bin';\n    }\n    toString(tab = '') {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewBinOp = NewBinOp;\nclass NewArrOp {\n    constructor(id) {\n        this.id = id;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'new_arr';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}`;\n    }\n}\nexports.NewArrOp = NewArrOp;\nclass InsValOp {\n    constructor(id, obj, val) {\n        this.id = id;\n        this.obj = obj;\n        this.val = val;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_val';\n    }\n    toString(tab = '') {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)}, val = ${(0, clock_1.toDisplayString)(this.val)}`;\n    }\n}\nexports.InsValOp = InsValOp;\nclass InsObjOp {\n    constructor(id, obj, data) {\n        this.id = id;\n        this.obj = obj;\n        this.data = data;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_obj';\n    }\n    toString(tab = '') {\n        let out = `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)}`;\n        for (let i = 0; i < this.data.length; i++) {\n            const isLast = i === this.data.length - 1;\n            out += `\\n${tab}  ${isLast ? 'ââ' : 'ââ'} ${JSON.stringify(this.data[i][0])}: ${(0, clock_1.toDisplayString)(this.data[i][1])}`;\n        }\n        return out;\n    }\n}\nexports.InsObjOp = InsObjOp;\nclass InsVecOp {\n    constructor(id, obj, data) {\n        this.id = id;\n        this.obj = obj;\n        this.data = data;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'ins_vec';\n    }\n    toString(tab = '') {\n        let out = `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)}`;\n        for (let i = 0; i < this.data.length; i++) {\n            const isLast = i === this.data.length - 1;\n            out += `\\n${tab}  ${isLast ? 'ââ' : 'ââ'} ${JSON.stringify(this.data[i][0])}: ${(0, clock_1.toDisplayString)(this.data[i][1])}`;\n        }\n        return out;\n    }\n}\nexports.InsVecOp = InsVecOp;\nclass InsStrOp {\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_str';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)} { ${(0, clock_1.toDisplayString)(this.ref)} â ${JSON.stringify(this.data)} }`;\n    }\n}\nexports.InsStrOp = InsStrOp;\nclass InsBinOp {\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_bin';\n    }\n    toString(tab = '') {\n        const ref = (0, clock_1.toDisplayString)(this.ref);\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)} { ${ref} â ${this.data} }`;\n    }\n}\nexports.InsBinOp = InsBinOp;\nclass InsArrOp {\n    constructor(id, obj, ref, data) {\n        this.id = id;\n        this.obj = obj;\n        this.ref = ref;\n        this.data = data;\n    }\n    span() {\n        return this.data.length;\n    }\n    name() {\n        return 'ins_arr';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.span()}, obj = ${(0, clock_1.toDisplayString)(this.obj)} { ${(0, clock_1.toDisplayString)(this.ref)} â ${this.data.map(clock_1.toDisplayString).join(', ')} }`;\n    }\n}\nexports.InsArrOp = InsArrOp;\nclass DelOp {\n    constructor(id, obj, what) {\n        this.id = id;\n        this.obj = obj;\n        this.what = what;\n    }\n    span() {\n        return 1;\n    }\n    name() {\n        return 'del';\n    }\n    toString() {\n        const spans = this.what.map((span) => (0, clock_1.toDisplayString)(span) + '!' + span.span).join(', ');\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}, obj = ${(0, clock_1.toDisplayString)(this.obj)} { ${spans} }`;\n    }\n}\nexports.DelOp = DelOp;\nclass NopOp {\n    constructor(id, len) {\n        this.id = id;\n        this.len = len;\n    }\n    span() {\n        return this.len;\n    }\n    name() {\n        return 'nop';\n    }\n    toString() {\n        return `${this.name()} ${(0, clock_1.toDisplayString)(this.id)}!${this.len}`;\n    }\n}\nexports.NopOp = NopOp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slice = void 0;\nclass Slice {\n    constructor(uint8, view, start, end) {\n        this.uint8 = uint8;\n        this.view = view;\n        this.start = start;\n        this.end = end;\n    }\n    subarray() {\n        return this.uint8.subarray(this.start, this.end);\n    }\n}\nexports.Slice = Slice;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Writer = void 0;\nconst Slice_1 = require(\"./Slice\");\nconst EMPTY_UINT8 = new Uint8Array([]);\nconst EMPTY_VIEW = new DataView(EMPTY_UINT8.buffer);\nconst hasBuffer = typeof Buffer === 'function';\nconst utf8Write = hasBuffer\n    ? Buffer.prototype.utf8Write\n    : null;\nconst from = hasBuffer ? Buffer.from : null;\nconst textEncoder = typeof TextEncoder !== 'undefined' ? new TextEncoder() : null;\nclass Writer {\n    constructor(allocSize = 64 * 1024) {\n        this.allocSize = allocSize;\n        this.view = EMPTY_VIEW;\n        this.x0 = 0;\n        this.x = 0;\n        this.uint8 = new Uint8Array(allocSize);\n        this.size = allocSize;\n        this.view = new DataView(this.uint8.buffer);\n    }\n    grow(size) {\n        const x0 = this.x0;\n        const x = this.x;\n        const oldUint8 = this.uint8;\n        const newUint8 = new Uint8Array(size);\n        const view = new DataView(newUint8.buffer);\n        const activeSlice = oldUint8.subarray(x0, x);\n        newUint8.set(activeSlice, 0);\n        this.x = x - x0;\n        this.x0 = 0;\n        this.uint8 = newUint8;\n        this.size = size;\n        this.view = view;\n    }\n    ensureCapacity(capacity) {\n        const byteLength = this.size;\n        const remaining = byteLength - this.x;\n        if (remaining < capacity) {\n            const total = byteLength - this.x0;\n            const required = capacity - remaining;\n            const totalRequired = total + required;\n            this.grow(totalRequired <= this.allocSize ? this.allocSize : totalRequired * 2);\n        }\n    }\n    move(capacity) {\n        this.ensureCapacity(capacity);\n        this.x += capacity;\n    }\n    reset() {\n        this.x0 = this.x;\n    }\n    newBuffer(size) {\n        const uint8 = (this.uint8 = new Uint8Array(size));\n        this.size = size;\n        this.view = new DataView(uint8.buffer);\n        this.x = this.x0 = 0;\n    }\n    flush() {\n        const result = this.uint8.subarray(this.x0, this.x);\n        this.x0 = this.x;\n        return result;\n    }\n    flushSlice() {\n        const slice = new Slice_1.Slice(this.uint8, this.view, this.x0, this.x);\n        this.x0 = this.x;\n        return slice;\n    }\n    u8(char) {\n        this.ensureCapacity(1);\n        this.uint8[this.x++] = char;\n    }\n    u16(word) {\n        this.ensureCapacity(2);\n        this.view.setUint16(this.x, word);\n        this.x += 2;\n    }\n    u32(dword) {\n        this.ensureCapacity(4);\n        this.view.setUint32(this.x, dword);\n        this.x += 4;\n    }\n    i32(dword) {\n        this.ensureCapacity(4);\n        this.view.setInt32(this.x, dword);\n        this.x += 4;\n    }\n    u64(qword) {\n        this.ensureCapacity(8);\n        this.view.setBigUint64(this.x, BigInt(qword));\n        this.x += 8;\n    }\n    f64(float) {\n        this.ensureCapacity(8);\n        this.view.setFloat64(this.x, float);\n        this.x += 8;\n    }\n    u8u16(u8, u16) {\n        this.ensureCapacity(3);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.uint8[x++] = u16 >>> 8;\n        this.uint8[x++] = u16 & 0xff;\n        this.x = x;\n    }\n    u8u32(u8, u32) {\n        this.ensureCapacity(5);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setUint32(x, u32);\n        this.x = x + 4;\n    }\n    u8u64(u8, u64) {\n        this.ensureCapacity(9);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setBigUint64(x, BigInt(u64));\n        this.x = x + 8;\n    }\n    u8f32(u8, f32) {\n        this.ensureCapacity(5);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setFloat32(x, f32);\n        this.x = x + 4;\n    }\n    u8f64(u8, f64) {\n        this.ensureCapacity(9);\n        let x = this.x;\n        this.uint8[x++] = u8;\n        this.view.setFloat64(x, f64);\n        this.x = x + 8;\n    }\n    buf(buf, length) {\n        this.ensureCapacity(length);\n        const x = this.x;\n        this.uint8.set(buf, x);\n        this.x = x + length;\n    }\n    utf8(str) {\n        const maxLength = str.length * 4;\n        if (maxLength < 168)\n            return this.utf8Native(str);\n        if (utf8Write) {\n            const writeLength = utf8Write.call(this.uint8, str, this.x, maxLength);\n            this.x += writeLength;\n            return writeLength;\n        }\n        else if (from) {\n            const uint8 = this.uint8;\n            const offset = uint8.byteOffset + this.x;\n            const buf = from(uint8.buffer).subarray(offset, offset + maxLength);\n            const writeLength = buf.write(str, 0, maxLength, 'utf8');\n            this.x += writeLength;\n            return writeLength;\n        }\n        else if (maxLength > 1024 && textEncoder) {\n            const writeLength = textEncoder.encodeInto(str, this.uint8.subarray(this.x, this.x + maxLength)).written;\n            this.x += writeLength;\n            return writeLength;\n        }\n        return this.utf8Native(str);\n    }\n    utf8Native(str) {\n        const length = str.length;\n        const uint8 = this.uint8;\n        let offset = this.x;\n        let pos = 0;\n        while (pos < length) {\n            let value = str.charCodeAt(pos++);\n            if ((value & 0xffffff80) === 0) {\n                uint8[offset++] = value;\n                continue;\n            }\n            else if ((value & 0xfffff800) === 0) {\n                uint8[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n            }\n            else {\n                if (value >= 0xd800 && value <= 0xdbff) {\n                    if (pos < length) {\n                        const extra = str.charCodeAt(pos);\n                        if ((extra & 0xfc00) === 0xdc00) {\n                            pos++;\n                            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                        }\n                    }\n                }\n                if ((value & 0xffff0000) === 0) {\n                    uint8[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n                    uint8[offset++] = ((value >> 6) & 0x3f) | 0x80;\n                }\n                else {\n                    uint8[offset++] = ((value >> 18) & 0x07) | 0xf0;\n                    uint8[offset++] = ((value >> 12) & 0x3f) | 0x80;\n                    uint8[offset++] = ((value >> 6) & 0x3f) | 0x80;\n                }\n            }\n            uint8[offset++] = (value & 0x3f) | 0x80;\n        }\n        const writeLength = offset - this.x;\n        this.x = offset;\n        return writeLength;\n    }\n    ascii(str) {\n        const length = str.length;\n        this.ensureCapacity(length);\n        const uint8 = this.uint8;\n        let x = this.x;\n        let pos = 0;\n        while (pos < length)\n            uint8[x++] = str.charCodeAt(pos++);\n        this.x = x;\n    }\n}\nexports.Writer = Writer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrdtWriter = void 0;\nconst Writer_1 = require(\"../../../util/buffers/Writer\");\nclass CrdtWriter extends Writer_1.Writer {\n    id(x, y) {\n        if (x <= 0b111 && y <= 0b1111) {\n            this.u8((x << 4) | y);\n        }\n        else {\n            this.b1vu56(1, x);\n            this.vu57(y);\n        }\n    }\n    vu57(num) {\n        if (num <= 0b1111111) {\n            this.u8(num);\n        }\n        else if (num <= 16383) {\n            this.ensureCapacity(2);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = num >>> 7;\n        }\n        else if (num <= 2097151) {\n            this.ensureCapacity(3);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n            uint8[this.x++] = num >>> 14;\n        }\n        else if (num <= 268435455) {\n            this.ensureCapacity(4);\n            const uint8 = this.uint8;\n            uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n            uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n            uint8[this.x++] = num >>> 21;\n        }\n        else {\n            let lo32 = num | 0;\n            if (lo32 < 0)\n                lo32 += 4294967296;\n            const hi32 = (num - lo32) / 4294967296;\n            if (num <= 34359738367) {\n                this.ensureCapacity(5);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = (hi32 << 4) | (num >>> 28);\n            }\n            else if (num <= 4398046511103) {\n                this.ensureCapacity(6);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = hi32 >>> 3;\n            }\n            else if (num <= 562949953421311) {\n                this.ensureCapacity(7);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 1016) >>> 3);\n                uint8[this.x++] = hi32 >>> 10;\n            }\n            else {\n                this.ensureCapacity(8);\n                const uint8 = this.uint8;\n                uint8[this.x++] = 0b10000000 | (num & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 7) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 14) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 21) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 0b111) << 4) | (num >>> 28);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 1016) >>> 3);\n                uint8[this.x++] = 0b10000000 | ((hi32 & 130048) >>> 10);\n                uint8[this.x++] = hi32 >>> 17;\n            }\n        }\n    }\n    b1vu56(flag, num) {\n        if (num <= 0b111111) {\n            this.u8((flag << 7) | num);\n        }\n        else {\n            const firstByteMask = (flag << 7) | 0b1000000;\n            if (num <= 8191) {\n                this.ensureCapacity(2);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = num >>> 6;\n            }\n            else if (num <= 1048575) {\n                this.ensureCapacity(3);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                uint8[this.x++] = num >>> 13;\n            }\n            else if (num <= 134217727) {\n                this.ensureCapacity(4);\n                const uint8 = this.uint8;\n                uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                uint8[this.x++] = num >>> 20;\n            }\n            else {\n                let lo32 = num | 0;\n                if (lo32 < 0)\n                    lo32 += 4294967296;\n                const hi32 = (num - lo32) / 4294967296;\n                if (num <= 17179869183) {\n                    this.ensureCapacity(5);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = (hi32 << 5) | (num >>> 27);\n                }\n                else if (num <= 2199023255551) {\n                    this.ensureCapacity(6);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = hi32 >>> 2;\n                }\n                else if (num <= 281474976710655) {\n                    this.ensureCapacity(7);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 508) >>> 2);\n                    uint8[this.x++] = hi32 >>> 9;\n                }\n                else {\n                    this.ensureCapacity(8);\n                    const uint8 = this.uint8;\n                    uint8[this.x++] = firstByteMask | (num & 0b00111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 6) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 13) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((num >>> 20) & 0b01111111);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 0b11) << 5) | (num >>> 27);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 508) >>> 2);\n                    uint8[this.x++] = 0b10000000 | ((hi32 & 65024) >>> 9);\n                    uint8[this.x++] = hi32 >>> 16;\n                }\n            }\n        }\n    }\n}\nexports.CrdtWriter = CrdtWriter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFloat32 = void 0;\nconst view = new DataView(new ArrayBuffer(4));\nconst isFloat32 = (n) => {\n    view.setFloat32(0, n);\n    return n === view.getFloat32(0);\n};\nexports.isFloat32 = isFloat32;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonPackExtension = void 0;\nclass JsonPackExtension {\n    constructor(tag, val) {\n        this.tag = tag;\n        this.val = val;\n    }\n}\nexports.JsonPackExtension = JsonPackExtension;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CborEncoderFast = void 0;\nconst Writer_1 = require(\"../../util/buffers/Writer\");\nconst isSafeInteger = Number.isSafeInteger;\nclass CborEncoderFast {\n    constructor(writer = new Writer_1.Writer()) {\n        this.writer = writer;\n    }\n    encode(value) {\n        this.writeAny(value);\n        return this.writer.flush();\n    }\n    encodeToSlice(value) {\n        this.writeAny(value);\n        return this.writer.flushSlice();\n    }\n    writeAny(value) {\n        switch (typeof value) {\n            case 'number':\n                return this.writeNumber(value);\n            case 'string':\n                return this.writeStr(value);\n            case 'boolean':\n                return this.writer.u8(0xf4 + +value);\n            case 'object': {\n                if (!value)\n                    return this.writer.u8(0xf6);\n                const constructor = value.constructor;\n                switch (constructor) {\n                    case Array:\n                        return this.writeArr(value);\n                    default:\n                        return this.writeObj(value);\n                }\n            }\n        }\n    }\n    writeCbor() {\n        this.writer.u8u16(0xd9, 0xd9f7);\n    }\n    writeEnd() {\n        this.writer.u8(255);\n    }\n    writeNull() {\n        this.writer.u8(0xf6);\n    }\n    writeBoolean(bool) {\n        if (bool)\n            this.writer.u8(0xf5);\n        else\n            this.writer.u8(0xf4);\n    }\n    writeNumber(num) {\n        if (isSafeInteger(num))\n            this.writeInteger(num);\n        else if (typeof num === 'bigint')\n            this.writeBigInt(num);\n        else\n            this.writeFloat(num);\n    }\n    writeBigInt(int) {\n        if (int >= 0)\n            this.writeBigUint(int);\n        else\n            this.writeBigSint(int);\n    }\n    writeBigUint(uint) {\n        if (uint <= Number.MAX_SAFE_INTEGER)\n            return this.writeUInteger(Number(uint));\n        this.writer.u8u64(0x1b, uint);\n    }\n    writeBigSint(int) {\n        if (int >= Number.MIN_SAFE_INTEGER)\n            return this.encodeNint(Number(int));\n        const uint = -BigInt(1) - int;\n        this.writer.u8u64(0x3b, uint);\n    }\n    writeInteger(int) {\n        if (int >= 0)\n            this.writeUInteger(int);\n        else\n            this.encodeNint(int);\n    }\n    writeUInteger(uint) {\n        const writer = this.writer;\n        writer.ensureCapacity(9);\n        const uint8 = writer.uint8;\n        let x = writer.x;\n        if (uint <= 23) {\n            uint8[x++] = 0 + uint;\n        }\n        else if (uint <= 0xff) {\n            uint8[x++] = 0x18;\n            uint8[x++] = uint;\n        }\n        else if (uint <= 0xffff) {\n            uint8[x++] = 0x19;\n            writer.view.setUint16(x, uint);\n            x += 2;\n        }\n        else if (uint <= 0xffffffff) {\n            uint8[x++] = 0x1a;\n            writer.view.setUint32(x, uint);\n            x += 4;\n        }\n        else {\n            uint8[x++] = 0x1b;\n            writer.view.setBigUint64(x, BigInt(uint));\n            x += 8;\n        }\n        writer.x = x;\n    }\n    encodeNumber(num) {\n        this.writeNumber(num);\n    }\n    encodeInteger(int) {\n        this.writeInteger(int);\n    }\n    encodeUint(uint) {\n        this.writeUInteger(uint);\n    }\n    encodeNint(int) {\n        const uint = -1 - int;\n        const writer = this.writer;\n        writer.ensureCapacity(9);\n        const uint8 = writer.uint8;\n        let x = writer.x;\n        if (uint < 24) {\n            uint8[x++] = 32 + uint;\n        }\n        else if (uint <= 0xff) {\n            uint8[x++] = 0x38;\n            uint8[x++] = uint;\n        }\n        else if (uint <= 0xffff) {\n            uint8[x++] = 0x39;\n            writer.view.setUint16(x, uint);\n            x += 2;\n        }\n        else if (uint <= 0xffffffff) {\n            uint8[x++] = 0x3a;\n            writer.view.setUint32(x, uint);\n            x += 4;\n        }\n        else {\n            uint8[x++] = 0x3b;\n            writer.view.setBigUint64(x, BigInt(uint));\n            x += 8;\n        }\n        writer.x = x;\n    }\n    writeFloat(float) {\n        this.writer.u8f64(0xfb, float);\n    }\n    writeBin(buf) {\n        const length = buf.length;\n        this.writeBinHdr(length);\n        this.writer.buf(buf, length);\n    }\n    writeBinHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(64 + length);\n        else if (length <= 0xff)\n            writer.u16((0x58 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x59, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0x5a, length);\n        else\n            writer.u8u64(0x5b, length);\n    }\n    writeStr(str) {\n        const writer = this.writer;\n        const length = str.length;\n        const maxSize = length * 4;\n        writer.ensureCapacity(5 + maxSize);\n        const uint8 = writer.uint8;\n        let lengthOffset = writer.x;\n        if (maxSize <= 23)\n            writer.x++;\n        else if (maxSize <= 0xff) {\n            uint8[writer.x++] = 0x78;\n            lengthOffset = writer.x;\n            writer.x++;\n        }\n        else if (maxSize <= 0xffff) {\n            uint8[writer.x++] = 0x79;\n            lengthOffset = writer.x;\n            writer.x += 2;\n        }\n        else {\n            uint8[writer.x++] = 0x7a;\n            lengthOffset = writer.x;\n            writer.x += 4;\n        }\n        const bytesWritten = writer.utf8(str);\n        if (maxSize <= 23)\n            uint8[lengthOffset] = 96 + bytesWritten;\n        else if (maxSize <= 0xff)\n            uint8[lengthOffset] = bytesWritten;\n        else if (maxSize <= 0xffff)\n            writer.view.setUint16(lengthOffset, bytesWritten);\n        else\n            writer.view.setUint32(lengthOffset, bytesWritten);\n    }\n    writeStrHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(96 + length);\n        else if (length <= 0xff)\n            writer.u16((0x78 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x79, length);\n        else\n            writer.u8u32(0x7a, length);\n    }\n    writeAsciiStr(str) {\n        this.writeStrHdr(str.length);\n        this.writer.ascii(str);\n    }\n    writeArr(arr) {\n        const length = arr.length;\n        this.writeArrHdr(length);\n        for (let i = 0; i < length; i++)\n            this.writeAny(arr[i]);\n    }\n    writeArrHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(128 + length);\n        else if (length <= 0xff)\n            writer.u16((0x98 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0x99, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0x9a, length);\n        else\n            writer.u8u64(0x9b, length);\n    }\n    writeObj(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        this.writeObjHdr(length);\n        for (let i = 0; i < length; i++) {\n            const key = keys[i];\n            this.writeStr(key);\n            this.writeAny(obj[key]);\n        }\n    }\n    writeObjHdr(length) {\n        const writer = this.writer;\n        if (length <= 23)\n            writer.u8(160 + length);\n        else if (length <= 0xff)\n            writer.u16((0xb8 << 8) + length);\n        else if (length <= 0xffff)\n            writer.u8u16(0xb9, length);\n        else if (length <= 0xffffffff)\n            writer.u8u32(0xba, length);\n        else\n            writer.u8u64(0xbb, length);\n    }\n    writeMapHdr(length) {\n        this.writeObjHdr(length);\n    }\n    writeStartMap() {\n        this.writer.u8(0xbf);\n    }\n    writeTag(tag, value) {\n        this.writeTagHdr(tag);\n        this.writeAny(value);\n    }\n    writeTagHdr(tag) {\n        const writer = this.writer;\n        if (tag <= 23)\n            writer.u8(192 + tag);\n        else if (tag <= 0xff)\n            writer.u16((0xd8 << 8) + tag);\n        else if (tag <= 0xffff)\n            writer.u8u16(0xd9, tag);\n        else if (tag <= 0xffffffff)\n            writer.u8u32(0xda, tag);\n        else\n            writer.u8u64(0xdb, tag);\n    }\n    writeTkn(value) {\n        const writer = this.writer;\n        if (value <= 23)\n            writer.u8(224 + value);\n        else if (value <= 0xff)\n            writer.u16((0xf8 << 8) + value);\n    }\n    writeStartStr() {\n        this.writer.u8(0x7f);\n    }\n    writeStrChunk(str) {\n        throw new Error('Not implemented');\n    }\n    writeEndStr() {\n        throw new Error('Not implemented');\n    }\n    writeStartBin() {\n        this.writer.u8(0x5f);\n    }\n    writeBinChunk(buf) {\n        throw new Error('Not implemented');\n    }\n    writeEndBin() {\n        throw new Error('Not implemented');\n    }\n    writeStartArr() {\n        this.writer.u8(0x9f);\n    }\n    writeArrChunk(item) {\n        throw new Error('Not implemented');\n    }\n    writeEndArr() {\n        this.writer.u8(255);\n    }\n    writeStartObj() {\n        this.writer.u8(0xbf);\n    }\n    writeObjChunk(key, value) {\n        throw new Error('Not implemented');\n    }\n    writeEndObj() {\n        this.writer.u8(255);\n    }\n}\nexports.CborEncoderFast = CborEncoderFast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CborEncoder = void 0;\nconst isFloat32_1 = require(\"../../util/buffers/isFloat32\");\nconst JsonPackExtension_1 = require(\"../JsonPackExtension\");\nconst CborEncoderFast_1 = require(\"./CborEncoderFast\");\nclass CborEncoder extends CborEncoderFast_1.CborEncoderFast {\n    writeUnknown(value) {\n        this.writeNull();\n    }\n    writeAny(value) {\n        switch (typeof value) {\n            case 'number':\n                return this.writeNumber(value);\n            case 'string':\n                return this.writeStr(value);\n            case 'boolean':\n                return this.writer.u8(0xf4 + +value);\n            case 'object': {\n                if (!value)\n                    return this.writer.u8(0xf6);\n                const constructor = value.constructor;\n                switch (constructor) {\n                    case Object:\n                        return this.writeObj(value);\n                    case Array:\n                        return this.writeArr(value);\n                    case Uint8Array:\n                        return this.writeBin(value);\n                    case Map:\n                        return this.writeMap(value);\n                    case JsonPackExtension_1.JsonPackExtension:\n                        return this.writeTag(value.tag, value.val);\n                    default:\n                        return this.writeUnknown(value);\n                }\n            }\n            case 'undefined':\n                return this.writeUndef();\n            case 'bigint':\n                return this.writeBigInt(value);\n            default:\n                return this.writeUnknown(value);\n        }\n    }\n    writeFloat(float) {\n        if ((0, isFloat32_1.isFloat32)(float))\n            this.writer.u8f32(0xfa, float);\n        else\n            this.writer.u8f64(0xfb, float);\n    }\n    writeMap(map) {\n        this.writeMapHdr(map.size);\n        map.forEach((value, key) => {\n            this.writeAny(key);\n            this.writeAny(value);\n        });\n    }\n    writeUndef() {\n        this.writer.u8(0xf7);\n    }\n}\nexports.CborEncoder = CborEncoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encoder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operations = tslib_1.__importStar(require(\"../../operations\"));\nconst CrdtWriter_1 = require(\"../../util/binary/CrdtWriter\");\nconst clock_1 = require(\"../../clock\");\nconst CborEncoder_1 = require(\"../../../json-pack/cbor/CborEncoder\");\nclass Encoder extends CborEncoder_1.CborEncoder {\n    constructor(writer = new CrdtWriter_1.CrdtWriter()) {\n        super(writer);\n        this.writer = writer;\n        this.patchSid = 0;\n    }\n    encode(patch) {\n        this.writer.reset();\n        const id = patch.getId();\n        const sid = (this.patchSid = id.sid);\n        const writer = this.writer;\n        writer.vu57(sid);\n        writer.vu57(id.time);\n        const meta = patch.meta;\n        if (meta === undefined)\n            this.writeUndef();\n        else\n            this.writeArr([meta]);\n        this.encodeOperations(patch);\n        return writer.flush();\n    }\n    encodeOperations(patch) {\n        const ops = patch.ops;\n        const length = ops.length;\n        this.writer.vu57(length);\n        for (let i = 0; i < length; i++)\n            this.encodeOperation(ops[i]);\n    }\n    encodeId(id) {\n        const sessionId = id.sid;\n        const time = id.time;\n        const writer = this.writer;\n        if (sessionId === this.patchSid) {\n            writer.b1vu56(0, time);\n        }\n        else {\n            writer.b1vu56(1, time);\n            writer.vu57(sessionId);\n        }\n    }\n    encodeTss(span) {\n        this.encodeId(span);\n        this.writer.vu57(span.span);\n    }\n    writeInsStr(length, obj, ref, str) {\n        const writer = this.writer;\n        if (length <= 0b111) {\n            writer.u8(96 + length);\n        }\n        else {\n            writer.u8(96);\n            writer.vu57(length);\n        }\n        this.encodeId(obj);\n        this.encodeId(ref);\n        return writer.utf8(str);\n    }\n    encodeOperation(op) {\n        const writer = this.writer;\n        const constructor = op.constructor;\n        switch (constructor) {\n            case operations.NewConOp: {\n                const operation = op;\n                const val = operation.val;\n                if (val instanceof clock_1.Timestamp) {\n                    writer.u8(0 + 1);\n                    this.encodeId(val);\n                }\n                else {\n                    writer.u8(0);\n                    this.writeAny(val);\n                }\n                break;\n            }\n            case operations.NewValOp: {\n                writer.u8(8);\n                break;\n            }\n            case operations.NewObjOp: {\n                writer.u8(16);\n                break;\n            }\n            case operations.NewVecOp: {\n                writer.u8(24);\n                break;\n            }\n            case operations.NewStrOp: {\n                writer.u8(32);\n                break;\n            }\n            case operations.NewBinOp: {\n                writer.u8(40);\n                break;\n            }\n            case operations.NewArrOp: {\n                writer.u8(48);\n                break;\n            }\n            case operations.InsValOp: {\n                const operation = op;\n                writer.u8(72);\n                this.encodeId(operation.obj);\n                this.encodeId(operation.val);\n                break;\n            }\n            case operations.InsObjOp: {\n                const operation = op;\n                const data = operation.data;\n                const length = data.length;\n                if (length <= 0b111) {\n                    writer.u8(80 + length);\n                }\n                else {\n                    writer.u8(80);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++) {\n                    const tuple = data[i];\n                    this.writeStr(tuple[0]);\n                    this.encodeId(tuple[1]);\n                }\n                break;\n            }\n            case operations.InsVecOp: {\n                const operation = op;\n                const data = operation.data;\n                const length = data.length;\n                if (length <= 0b111) {\n                    writer.u8(88 + length);\n                }\n                else {\n                    writer.u8(88);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++) {\n                    const tuple = data[i];\n                    writer.u8(tuple[0]);\n                    this.encodeId(tuple[1]);\n                }\n                break;\n            }\n            case operations.InsStrOp: {\n                const operation = op;\n                const obj = operation.obj;\n                const ref = operation.ref;\n                const str = operation.data;\n                const len1 = str.length;\n                writer.ensureCapacity(24 + len1 * 4);\n                const x = writer.x;\n                const len2 = this.writeInsStr(len1, obj, ref, str);\n                if (len1 !== len2) {\n                    writer.x = x;\n                    this.writeInsStr(len2, obj, ref, str);\n                }\n                break;\n            }\n            case operations.InsBinOp: {\n                const operation = op;\n                const buf = operation.data;\n                const length = buf.length;\n                if (length <= 0b111) {\n                    writer.u8(104 + length);\n                }\n                else {\n                    writer.u8(104);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                this.encodeId(operation.ref);\n                writer.buf(buf, length);\n                break;\n            }\n            case operations.InsArrOp: {\n                const operation = op;\n                const elements = operation.data;\n                const length = elements.length;\n                if (length <= 0b111) {\n                    writer.u8(112 + length);\n                }\n                else {\n                    writer.u8(112);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                this.encodeId(operation.ref);\n                for (let i = 0; i < length; i++)\n                    this.encodeId(elements[i]);\n                break;\n            }\n            case operations.DelOp: {\n                const operation = op;\n                const what = operation.what;\n                const length = what.length;\n                if (length <= 0b111) {\n                    writer.u8(128 + length);\n                }\n                else {\n                    writer.u8(128);\n                    writer.vu57(length);\n                }\n                this.encodeId(operation.obj);\n                for (let i = 0; i < length; i++)\n                    this.encodeTss(what[i]);\n                break;\n            }\n            case operations.NopOp: {\n                const operation = op;\n                const length = operation.len;\n                if (length <= 0b111) {\n                    writer.u8(136 + length);\n                }\n                else {\n                    writer.u8(136);\n                    writer.vu57(length);\n                }\n                break;\n            }\n            default: {\n                throw new Error('UNKNOWN_OP');\n            }\n        }\n    }\n}\nexports.Encoder = Encoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeAsciiMax15 = exports.decodeAscii = void 0;\nconst fromCharCode = String.fromCharCode;\nconst decodeAscii = (src, position, length) => {\n    const bytes = [];\n    for (let i = 0; i < length; i++) {\n        const byte = src[position++];\n        if (byte & 0x80)\n            return;\n        bytes.push(byte);\n    }\n    return fromCharCode.apply(String, bytes);\n};\nexports.decodeAscii = decodeAscii;\nconst decodeAsciiMax15 = (src, position, length) => {\n    if (length < 4) {\n        if (length < 2) {\n            if (length === 0)\n                return '';\n            else {\n                const a = src[position++];\n                if ((a & 0x80) > 1) {\n                    position -= 1;\n                    return;\n                }\n                return fromCharCode(a);\n            }\n        }\n        else {\n            const a = src[position++];\n            const b = src[position++];\n            if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n                position -= 2;\n                return;\n            }\n            if (length < 3)\n                return fromCharCode(a, b);\n            const c = src[position++];\n            if ((c & 0x80) > 0) {\n                position -= 3;\n                return;\n            }\n            return fromCharCode(a, b, c);\n        }\n    }\n    else {\n        const a = src[position++];\n        const b = src[position++];\n        const c = src[position++];\n        const d = src[position++];\n        if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n            position -= 4;\n            return;\n        }\n        if (length < 6) {\n            if (length === 4)\n                return fromCharCode(a, b, c, d);\n            else {\n                const e = src[position++];\n                if ((e & 0x80) > 0) {\n                    position -= 5;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e);\n            }\n        }\n        else if (length < 8) {\n            const e = src[position++];\n            const f = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n                position -= 6;\n                return;\n            }\n            if (length < 7)\n                return fromCharCode(a, b, c, d, e, f);\n            const g = src[position++];\n            if ((g & 0x80) > 0) {\n                position -= 7;\n                return;\n            }\n            return fromCharCode(a, b, c, d, e, f, g);\n        }\n        else {\n            const e = src[position++];\n            const f = src[position++];\n            const g = src[position++];\n            const h = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n                position -= 8;\n                return;\n            }\n            if (length < 10) {\n                if (length === 8)\n                    return fromCharCode(a, b, c, d, e, f, g, h);\n                else {\n                    const i = src[position++];\n                    if ((i & 0x80) > 0) {\n                        position -= 9;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i);\n                }\n            }\n            else if (length < 12) {\n                const i = src[position++];\n                const j = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n                    position -= 10;\n                    return;\n                }\n                if (length < 11)\n                    return fromCharCode(a, b, c, d, e, f, g, h, i, j);\n                const k = src[position++];\n                if ((k & 0x80) > 0) {\n                    position -= 11;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n            }\n            else {\n                const i = src[position++];\n                const j = src[position++];\n                const k = src[position++];\n                const l = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n                    position -= 12;\n                    return;\n                }\n                if (length < 14) {\n                    if (length === 12)\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n                    else {\n                        const m = src[position++];\n                        if ((m & 0x80) > 0) {\n                            position -= 13;\n                            return;\n                        }\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n                    }\n                }\n                else {\n                    const m = src[position++];\n                    const n = src[position++];\n                    if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n                        position -= 14;\n                        return;\n                    }\n                    if (length < 15)\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n                    const o = src[position++];\n                    if ((o & 0x80) > 0) {\n                        position -= 15;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n                }\n            }\n        }\n    }\n};\nexports.decodeAsciiMax15 = decodeAsciiMax15;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fromCharCode = String.fromCharCode;\nexports.default = (buf, start, length) => {\n    let offset = start;\n    const end = offset + length;\n    const points = [];\n    while (offset < end) {\n        let code = buf[offset++];\n        if ((code & 0x80) !== 0) {\n            const octet2 = buf[offset++] & 0x3f;\n            if ((code & 0xe0) === 0xc0) {\n                code = ((code & 0x1f) << 6) | octet2;\n            }\n            else {\n                const octet3 = buf[offset++] & 0x3f;\n                if ((code & 0xf0) === 0xe0) {\n                    code = ((code & 0x1f) << 12) | (octet2 << 6) | octet3;\n                }\n                else {\n                    if ((code & 0xf8) === 0xf0) {\n                        const octet4 = buf[offset++] & 0x3f;\n                        let unit = ((code & 0x07) << 0x12) | (octet2 << 0x0c) | (octet3 << 0x06) | octet4;\n                        if (unit > 0xffff) {\n                            unit -= 0x10000;\n                            const unit0 = ((unit >>> 10) & 0x3ff) | 0xd800;\n                            code = 0xdc00 | (unit & 0x3ff);\n                            points.push(unit0);\n                        }\n                        else {\n                            code = unit;\n                        }\n                    }\n                }\n            }\n        }\n        points.push(code);\n    }\n    return fromCharCode.apply(String, points);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst decodeAscii_1 = require(\"../decodeAscii\");\nconst v18_1 = tslib_1.__importDefault(require(\"./v18\"));\nconst hasBuffer = typeof Buffer !== 'undefined';\nconst utf8Slice = hasBuffer ? Buffer.prototype.utf8Slice : null;\nconst from = hasBuffer ? Buffer.from : null;\nconst shortDecoder = (buf, start, length) => (0, decodeAscii_1.decodeAsciiMax15)(buf, start, length) ?? (0, v18_1.default)(buf, start, length);\nconst midDecoder = (buf, start, length) => (0, decodeAscii_1.decodeAscii)(buf, start, length) ?? (0, v18_1.default)(buf, start, length);\nconst longDecoder = utf8Slice\n    ? (buf, start, length) => utf8Slice.call(buf, start, start + length)\n    : from\n        ? (buf, start, length) => from(buf)\n            .subarray(start, start + length)\n            .toString('utf8')\n        : v18_1.default;\nconst decoder = (buf, start, length) => {\n    if (length < 16)\n        return shortDecoder(buf, start, length);\n    if (length < 32)\n        return midDecoder(buf, start, length);\n    return longDecoder(buf, start, length);\n};\nexports.default = decoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeUtf8 = void 0;\nconst tslib_1 = require(\"tslib\");\nconst v16_1 = tslib_1.__importDefault(require(\"./v16\"));\nexports.decodeUtf8 = v16_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reader = void 0;\nconst decodeUtf8_1 = require(\"./utf8/decodeUtf8\");\nclass Reader {\n    constructor() {\n        this.uint8 = new Uint8Array([]);\n        this.view = new DataView(this.uint8.buffer);\n        this.x = 0;\n    }\n    reset(uint8) {\n        this.x = 0;\n        this.uint8 = uint8;\n        this.view = new DataView(uint8.buffer, uint8.byteOffset, uint8.length);\n    }\n    peak() {\n        return this.view.getUint8(this.x);\n    }\n    skip(length) {\n        this.x += length;\n    }\n    buf(size) {\n        const end = this.x + size;\n        const bin = this.uint8.subarray(this.x, end);\n        this.x = end;\n        return bin;\n    }\n    u8() {\n        return this.uint8[this.x++];\n    }\n    i8() {\n        return this.view.getInt8(this.x++);\n    }\n    u16() {\n        let x = this.x;\n        const num = (this.uint8[x++] << 8) + this.uint8[x++];\n        this.x = x;\n        return num;\n    }\n    i16() {\n        const num = this.view.getInt16(this.x);\n        this.x += 2;\n        return num;\n    }\n    u32() {\n        const num = this.view.getUint32(this.x);\n        this.x += 4;\n        return num;\n    }\n    i32() {\n        const num = this.view.getInt32(this.x);\n        this.x += 4;\n        return num;\n    }\n    u64() {\n        const num = this.view.getBigUint64(this.x);\n        this.x += 8;\n        return num;\n    }\n    i64() {\n        const num = this.view.getBigInt64(this.x);\n        this.x += 8;\n        return num;\n    }\n    f32() {\n        const pos = this.x;\n        this.x += 4;\n        return this.view.getFloat32(pos);\n    }\n    f64() {\n        const pos = this.x;\n        this.x += 8;\n        return this.view.getFloat64(pos);\n    }\n    utf8(size) {\n        const start = this.x;\n        this.x += size;\n        return (0, decodeUtf8_1.decodeUtf8)(this.uint8, start, size);\n    }\n    ascii(length) {\n        const uint8 = this.uint8;\n        let str = '';\n        const end = this.x + length;\n        for (let i = this.x; i < end; i++)\n            str += String.fromCharCode(uint8[i]);\n        this.x = end;\n        return str;\n    }\n}\nexports.Reader = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrdtReader = void 0;\nconst Reader_1 = require(\"../../../util/buffers/Reader\");\nclass CrdtReader extends Reader_1.Reader {\n    id() {\n        const byte = this.u8();\n        if (byte <= 127)\n            return [byte >>> 4, byte & 0b1111];\n        this.x--;\n        return [this.b1vu56()[1], this.vu57()];\n    }\n    idSkip() {\n        const byte = this.u8();\n        if (byte <= 127)\n            return;\n        this.x--;\n        this.b1vu56();\n        this.vu57Skip();\n    }\n    vu57() {\n        const o1 = this.u8();\n        if (o1 <= 0b01111111)\n            return o1;\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return (o2 << 7) | (o1 & 0b01111111);\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return (o3 << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b01111111);\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return (o4 << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 0b01111111);\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return (o5 * 0b10000000000000000000000000000 +\n                (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 127)));\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return (o6 * 0b100000000000000000000000000000000000 +\n                ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                    (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 127))));\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return (o7 * 0b1000000000000000000000000000000000000000000 +\n                ((o6 & 0b01111111) * 0b100000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 127)))));\n        const o8 = this.u8();\n        return (o8 * 0b10000000000000000000000000000000000000000000000000 +\n            ((o7 & 0b01111111) * 0b1000000000000000000000000000000000000000000 +\n                ((o6 & 0b01111111) * 0b100000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b10000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 21) | ((o3 & 0b01111111) << 14) | ((o2 & 0b01111111) << 7) | (o1 & 127))))));\n    }\n    vu57Skip() {\n        const o1 = this.u8();\n        if (o1 <= 0b01111111)\n            return;\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return;\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return;\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return;\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return;\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return;\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return;\n        this.x++;\n    }\n    b1vu56() {\n        const byte = this.u8();\n        const flag = byte & 0b10000000 ? 1 : 0;\n        const o1 = 127 & byte;\n        if (o1 <= 63)\n            return [flag, o1];\n        const o2 = this.u8();\n        if (o2 <= 0b01111111)\n            return [flag, (o2 << 6) | (o1 & 63)];\n        const o3 = this.u8();\n        if (o3 <= 0b01111111)\n            return [flag, (o3 << 13) | ((o2 & 0b01111111) << 6) | (o1 & 63)];\n        const o4 = this.u8();\n        if (o4 <= 0b01111111)\n            return [flag, (o4 << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 63)];\n        const o5 = this.u8();\n        if (o5 <= 0b01111111)\n            return [\n                flag,\n                o5 * 0b1000000000000000000000000000 +\n                    (((o4 & 0b01111111) << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 63)),\n            ];\n        const o6 = this.u8();\n        if (o6 <= 0b01111111)\n            return [\n                flag,\n                o6 * 0b10000000000000000000000000000000000 +\n                    ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                        (((o4 & 0b01111111) << 20) | ((o3 & 0b01111111) << 13) | ((o2 & 0b01111111) << 6) | (o1 & 63))),\n            ];\n        const o7 = this.u8();\n        if (o7 <= 0b01111111)\n            return [\n                flag,\n                o7 * 0b100000000000000000000000000000000000000000 +\n                    ((o6 & 0b01111111) * 0b10000000000000000000000000000000000 +\n                        ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                            (((o4 & 0b01111111) << 20) |\n                                ((o3 & 0b01111111) << 13) |\n                                ((o2 & 0b01111111) << 6) |\n                                (o1 & 63)))),\n            ];\n        const o8 = this.u8();\n        return [\n            flag,\n            o8 * 0b1000000000000000000000000000000000000000000000000 +\n                ((o7 & 0b01111111) * 0b100000000000000000000000000000000000000000 +\n                    ((o6 & 0b01111111) * 0b10000000000000000000000000000000000 +\n                        ((o5 & 0b01111111) * 0b1000000000000000000000000000 +\n                            (((o4 & 0b01111111) << 20) |\n                                ((o3 & 0b01111111) << 13) |\n                                ((o2 & 0b01111111) << 6) |\n                                (o1 & 63))))),\n        ];\n    }\n}\nexports.CrdtReader = CrdtReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUint8Array = void 0;\nexports.isUint8Array = typeof Buffer === 'function'\n    ? (x) => x instanceof Uint8Array || Buffer.isBuffer(x)\n    : (x) => x instanceof Uint8Array;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ORIGIN = void 0;\nconst clock_1 = require(\"./clock\");\nexports.ORIGIN = (0, clock_1.ts)(0, 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vec = exports.VectorDelayedValue = void 0;\nclass VectorDelayedValue {\n    constructor(slots) {\n        this.slots = slots;\n    }\n}\nexports.VectorDelayedValue = VectorDelayedValue;\nconst vec = (...slots) => new VectorDelayedValue(slots);\nexports.vec = vec;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.konst = exports.Konst = void 0;\nclass Konst {\n    constructor(val) {\n        this.val = val;\n    }\n}\nexports.Konst = Konst;\nconst konst = (val) => new Konst(val);\nexports.konst = konst;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.delayed = exports.NodeBuilder = void 0;\nclass NodeBuilder {\n    constructor(build) {\n        this.build = build;\n    }\n}\nexports.NodeBuilder = NodeBuilder;\nconst delayed = (build) => new NodeBuilder(build);\nexports.delayed = delayed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PatchBuilder = void 0;\nconst operations_1 = require(\"./operations\");\nconst clock_1 = require(\"./clock\");\nconst isUint8Array_1 = require(\"../util/buffers/isUint8Array\");\nconst Patch_1 = require(\"./Patch\");\nconst constants_1 = require(\"./constants\");\nconst Tuple_1 = require(\"./builder/Tuple\");\nconst Konst_1 = require(\"./builder/Konst\");\nconst DelayedValueBuilder_1 = require(\"./builder/DelayedValueBuilder\");\nconst maybeConst = (x) => {\n    switch (typeof x) {\n        case 'number':\n        case 'boolean':\n            return true;\n        default:\n            return x === null;\n    }\n};\nclass PatchBuilder {\n    constructor(clock) {\n        this.clock = clock;\n        this.patch = new Patch_1.Patch();\n    }\n    nextTime() {\n        return this.patch.nextTime() || this.clock.time;\n    }\n    flush() {\n        const patch = this.patch;\n        this.patch = new Patch_1.Patch();\n        return patch;\n    }\n    obj() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewObjOp(id));\n        return id;\n    }\n    arr() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewArrOp(id));\n        return id;\n    }\n    vec() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewVecOp(id));\n        return id;\n    }\n    str() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewStrOp(id));\n        return id;\n    }\n    bin() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewBinOp(id));\n        return id;\n    }\n    const(value) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewConOp(id, value));\n        return id;\n    }\n    val() {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.NewValOp(id));\n        return id;\n    }\n    root(val) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.InsValOp(id, constants_1.ORIGIN, val));\n        return id;\n    }\n    insObj(obj, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_TUPLES');\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsObjOp(id, obj, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insVec(obj, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_TUPLES');\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsVecOp(id, obj, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    setVal(obj, val) {\n        this.pad();\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsValOp(id, obj, val);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insStr(obj, ref, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_STRING');\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsStrOp(id, obj, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insBin(obj, ref, data) {\n        this.pad();\n        if (!data.length)\n            throw new Error('EMPTY_BINARY');\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsBinOp(id, obj, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    insArr(arr, ref, data) {\n        this.pad();\n        const id = this.clock.tick(1);\n        const op = new operations_1.InsArrOp(id, arr, ref, data);\n        const span = op.span();\n        if (span > 1)\n            this.clock.tick(span - 1);\n        this.patch.ops.push(op);\n        return id;\n    }\n    del(obj, what) {\n        this.pad();\n        const id = this.clock.tick(1);\n        this.patch.ops.push(new operations_1.DelOp(id, obj, what));\n        return id;\n    }\n    nop(span) {\n        this.pad();\n        const id = this.clock.tick(span);\n        this.patch.ops.push(new operations_1.NopOp(id, span));\n        return id;\n    }\n    jsonObj(obj) {\n        const id = this.obj();\n        const keys = Object.keys(obj);\n        if (keys.length) {\n            const tuples = [];\n            for (const k of keys) {\n                const value = obj[k];\n                const valueId = value instanceof clock_1.Timestamp ? value : maybeConst(value) ? this.const(value) : this.json(value);\n                tuples.push([k, valueId]);\n            }\n            this.insObj(id, tuples);\n        }\n        return id;\n    }\n    jsonArr(arr) {\n        const id = this.arr();\n        if (arr.length) {\n            const values = [];\n            for (const el of arr)\n                values.push(this.json(el));\n            this.insArr(id, id, values);\n        }\n        return id;\n    }\n    jsonStr(str) {\n        const id = this.str();\n        if (str)\n            this.insStr(id, id, str);\n        return id;\n    }\n    jsonBin(bin) {\n        const id = this.bin();\n        if (bin.length)\n            this.insBin(id, id, bin);\n        return id;\n    }\n    jsonVal(value) {\n        const valId = this.val();\n        const id = this.const(value);\n        this.setVal(valId, id);\n        return valId;\n    }\n    jsonVec(vector) {\n        const id = this.vec();\n        const length = vector.length;\n        if (length) {\n            const writes = [];\n            for (let i = 0; i < length; i++)\n                writes.push([i, this.constOrJson(vector[i])]);\n            this.insVec(id, writes);\n        }\n        return id;\n    }\n    json(json) {\n        if (json instanceof clock_1.Timestamp)\n            return json;\n        if (json === undefined)\n            return this.const(json);\n        if (json instanceof Array)\n            return this.jsonArr(json);\n        if ((0, isUint8Array_1.isUint8Array)(json))\n            return this.jsonBin(json);\n        if (json instanceof Tuple_1.VectorDelayedValue)\n            return this.jsonVec(json.slots);\n        if (json instanceof Konst_1.Konst)\n            return this.const(json.val);\n        if (json instanceof DelayedValueBuilder_1.NodeBuilder)\n            return json.build(this);\n        switch (typeof json) {\n            case 'object':\n                return json === null ? this.jsonVal(json) : this.jsonObj(json);\n            case 'string':\n                return this.jsonStr(json);\n            case 'number':\n            case 'boolean':\n                return this.jsonVal(json);\n        }\n        throw new Error('INVALID_JSON');\n    }\n    constOrJson(value) {\n        if (value instanceof clock_1.Timestamp)\n            return value;\n        return maybeConst(value) ? this.const(value) : this.json(value);\n    }\n    maybeConst(value) {\n        return value instanceof clock_1.Timestamp ? value : this.const(value);\n    }\n    pad() {\n        const nextTime = this.patch.nextTime();\n        if (!nextTime)\n            return;\n        const drift = this.clock.time - nextTime;\n        if (drift > 0) {\n            const id = (0, clock_1.ts)(this.clock.sid, nextTime);\n            const padding = new operations_1.NopOp(id, drift);\n            this.patch.ops.push(padding);\n        }\n    }\n}\nexports.PatchBuilder = PatchBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeF16 = void 0;\nconst pow = Math.pow;\nconst decodeF16 = (binary) => {\n    const exponent = (binary & 0x7c00) >> 10;\n    const fraction = binary & 0x03ff;\n    return ((binary >> 15 ? -1 : 1) *\n        (exponent\n            ? exponent === 0x1f\n                ? fraction\n                    ? NaN\n                    : Infinity\n                : pow(2, exponent - 15) * (1 + fraction / 0x400)\n            : 6.103515625e-5 * (fraction / 0x400)));\n};\nexports.decodeF16 = decodeF16;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonPackValue = void 0;\nclass JsonPackValue {\n    constructor(val) {\n        this.val = val;\n    }\n}\nexports.JsonPackValue = JsonPackValue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fromCharCode = String.fromCharCode;\nexports.default = (buf, start, length) => {\n    let offset = start;\n    const end = offset + length;\n    let str = '';\n    while (offset < end) {\n        const octet1 = buf[offset++];\n        if ((octet1 & 0x80) === 0) {\n            str += fromCharCode(octet1);\n            continue;\n        }\n        const octet2 = buf[offset++] & 0x3f;\n        if ((octet1 & 0xe0) === 0xc0) {\n            str += fromCharCode(((octet1 & 0x1f) << 6) | octet2);\n            continue;\n        }\n        const octet3 = buf[offset++] & 0x3f;\n        if ((octet1 & 0xf0) === 0xe0) {\n            str += fromCharCode(((octet1 & 0x1f) << 12) | (octet2 << 6) | octet3);\n            continue;\n        }\n        if ((octet1 & 0xf8) === 0xf0) {\n            const octet4 = buf[offset++] & 0x3f;\n            let unit = ((octet1 & 0x07) << 0x12) | (octet2 << 0x0c) | (octet3 << 0x06) | octet4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                const unit0 = ((unit >>> 10) & 0x3ff) | 0xd800;\n                unit = 0xdc00 | (unit & 0x3ff);\n                str += fromCharCode(unit0, unit);\n            }\n            else {\n                str += fromCharCode(unit);\n            }\n        }\n        else {\n            str += fromCharCode(octet1);\n        }\n    }\n    return str;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CachedUtf8Decoder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst v10_1 = tslib_1.__importDefault(require(\"./decodeUtf8/v10\"));\nconst randomU32_1 = require(\"hyperdyperid/lib/randomU32\");\nclass CacheItem {\n    constructor(bytes, value) {\n        this.bytes = bytes;\n        this.value = value;\n    }\n}\nclass CachedUtf8Decoder {\n    constructor() {\n        this.caches = [];\n        for (let i = 0; i < 31; i++)\n            this.caches.push([]);\n    }\n    get(bytes, offset, size) {\n        const records = this.caches[size - 1];\n        const len = records.length;\n        FIND_CHUNK: for (let i = 0; i < len; i++) {\n            const record = records[i];\n            const recordBytes = record.bytes;\n            for (let j = 0; j < size; j++)\n                if (recordBytes[j] !== bytes[offset + j])\n                    continue FIND_CHUNK;\n            return record.value;\n        }\n        return null;\n    }\n    store(bytes, value) {\n        const records = this.caches[bytes.length - 1];\n        const record = new CacheItem(bytes, value);\n        const length = records.length;\n        if (length >= 16)\n            records[(0, randomU32_1.randomU32)(0, 16 - 1)] = record;\n        else\n            records.push(record);\n    }\n    decode(bytes, offset, size) {\n        if (!size)\n            return '';\n        const cachedValue = this.get(bytes, offset, size);\n        if (cachedValue !== null)\n            return cachedValue;\n        const value = (0, v10_1.default)(bytes, offset, size);\n        const copy = Uint8Array.prototype.slice.call(bytes, offset, offset + size);\n        this.store(copy, value);\n        return value;\n    }\n}\nexports.CachedUtf8Decoder = CachedUtf8Decoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CachedUtf8Decoder_1 = require(\"./CachedUtf8Decoder\");\nexports.default = new CachedUtf8Decoder_1.CachedUtf8Decoder();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CborDecoderBase = void 0;\nconst tslib_1 = require(\"tslib\");\nconst f16_1 = require(\"../../util/buffers/f16\");\nconst JsonPackExtension_1 = require(\"../JsonPackExtension\");\nconst JsonPackValue_1 = require(\"../JsonPackValue\");\nconst Reader_1 = require(\"../../util/buffers/Reader\");\nconst sharedCachedUtf8Decoder_1 = tslib_1.__importDefault(require(\"../../util/buffers/utf8/sharedCachedUtf8Decoder\"));\nclass CborDecoderBase {\n    constructor(reader = new Reader_1.Reader(), keyDecoder = sharedCachedUtf8Decoder_1.default) {\n        this.reader = reader;\n        this.keyDecoder = keyDecoder;\n    }\n    read(uint8) {\n        this.reader.reset(uint8);\n        return this.val();\n    }\n    decode(uint8) {\n        this.reader.reset(uint8);\n        return this.val();\n    }\n    val() {\n        const reader = this.reader;\n        const octet = reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major < 4) {\n            if (major < 2)\n                return major === 0 ? this.readUint(minor) : this.readNint(minor);\n            else\n                return major === 2 ? this.readBin(minor) : this.readStr(minor);\n        }\n        else {\n            if (major < 6)\n                return major === 4 ? this.readArr(minor) : this.readObj(minor);\n            else\n                return major === 6 ? this.readTag(minor) : this.readTkn(minor);\n        }\n    }\n    readAnyRaw(octet) {\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major < 4) {\n            if (major < 2)\n                return major === 0 ? this.readUint(minor) : this.readNint(minor);\n            else\n                return major === 2 ? this.readBin(minor) : this.readStr(minor);\n        }\n        else {\n            if (major < 6)\n                return major === 4 ? this.readArr(minor) : this.readObj(minor);\n            else\n                return major === 6 ? this.readTag(minor) : this.readTkn(minor);\n        }\n    }\n    readMinorLen(minor) {\n        if (minor < 24)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n            default:\n                throw 1;\n        }\n    }\n    readUint(minor) {\n        if (minor < 25) {\n            return minor === 24 ? this.reader.u8() : minor;\n        }\n        else {\n            if (minor < 27) {\n                return minor === 25 ? this.reader.u16() : this.reader.u32();\n            }\n            else {\n                const num = this.reader.u64();\n                return num > 9007199254740991 ? num : Number(num);\n            }\n        }\n    }\n    readNint(minor) {\n        if (minor < 25) {\n            return minor === 24 ? -this.reader.u8() - 1 : -minor - 1;\n        }\n        else {\n            if (minor < 27) {\n                return minor === 25 ? -this.reader.u16() - 1 : -this.reader.u32() - 1;\n            }\n            else {\n                const num = this.reader.u64();\n                return num > 9007199254740991 - 1 ? -num - BigInt(1) : -Number(num) - 1;\n            }\n        }\n    }\n    readBin(minor) {\n        const reader = this.reader;\n        if (minor <= 23)\n            return reader.buf(minor);\n        switch (minor) {\n            case 24:\n                return reader.buf(reader.u8());\n            case 25:\n                return reader.buf(reader.u16());\n            case 26:\n                return reader.buf(reader.u32());\n            case 27:\n                return reader.buf(Number(reader.u64()));\n            case 31: {\n                let size = 0;\n                const list = [];\n                while (this.reader.peak() !== 255) {\n                    const uint8 = this.readBinChunk();\n                    size += uint8.length;\n                    list.push(uint8);\n                }\n                this.reader.x++;\n                const res = new Uint8Array(size);\n                let offset = 0;\n                const length = list.length;\n                for (let i = 0; i < length; i++) {\n                    const arr = list[i];\n                    res.set(arr, offset);\n                    offset += arr.length;\n                }\n                return res;\n            }\n            default:\n                throw 1;\n        }\n    }\n    readBinChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 2)\n            throw 2;\n        if (minor > 27)\n            throw 3;\n        return this.readBin(minor);\n    }\n    readAsStr() {\n        const reader = this.reader;\n        const octet = reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 11;\n        return this.readStr(minor);\n    }\n    readStr(minor) {\n        const reader = this.reader;\n        if (minor <= 23)\n            return reader.utf8(minor);\n        switch (minor) {\n            case 24:\n                return reader.utf8(reader.u8());\n            case 25:\n                return reader.utf8(reader.u16());\n            case 26:\n                return reader.utf8(reader.u32());\n            case 27:\n                return reader.utf8(Number(reader.u64()));\n            case 31: {\n                let str = '';\n                while (reader.peak() !== 255)\n                    str += this.readStrChunk();\n                this.reader.x++;\n                return str;\n            }\n            default:\n                throw 1;\n        }\n    }\n    readStrLen(minor) {\n        if (minor <= 23)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            default:\n                throw 1;\n        }\n    }\n    readStrChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 4;\n        if (minor > 27)\n            throw 5;\n        return this.readStr(minor);\n    }\n    readArr(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readArrRaw(length);\n        return this.readArrIndef();\n    }\n    readArrRaw(length) {\n        const arr = [];\n        for (let i = 0; i < length; i++)\n            arr.push(this.val());\n        return arr;\n    }\n    readArrIndef() {\n        const arr = [];\n        while (this.reader.peak() !== 255)\n            arr.push(this.val());\n        this.reader.x++;\n        return arr;\n    }\n    readObj(minor) {\n        if (minor < 28) {\n            let length = minor;\n            switch (minor) {\n                case 24:\n                    length = this.reader.u8();\n                    break;\n                case 25:\n                    length = this.reader.u16();\n                    break;\n                case 26:\n                    length = this.reader.u32();\n                    break;\n                case 27:\n                    length = Number(this.reader.u64());\n                    break;\n            }\n            const obj = {};\n            for (let i = 0; i < length; i++) {\n                const key = this.key();\n                if (key === '__proto__')\n                    throw 6;\n                const value = this.val();\n                obj[key] = value;\n            }\n            return obj;\n        }\n        else if (minor === 31)\n            return this.readObjIndef();\n        else\n            throw 1;\n    }\n    readObjRaw(length) {\n        const obj = {};\n        for (let i = 0; i < length; i++) {\n            const key = this.key();\n            const value = this.val();\n            obj[key] = value;\n        }\n        return obj;\n    }\n    readObjIndef() {\n        const obj = {};\n        while (this.reader.peak() !== 255) {\n            const key = this.key();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.val();\n            obj[key] = value;\n        }\n        this.reader.x++;\n        return obj;\n    }\n    key() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            return String(this.readAnyRaw(octet));\n        const length = this.readStrLen(minor);\n        if (length > 31)\n            return this.reader.utf8(length);\n        const key = this.keyDecoder.decode(this.reader.uint8, this.reader.x, length);\n        this.reader.skip(length);\n        return key;\n    }\n    readTag(minor) {\n        if (minor <= 23)\n            return this.readTagRaw(minor);\n        switch (minor) {\n            case 24:\n                return this.readTagRaw(this.reader.u8());\n            case 25:\n                return this.readTagRaw(this.reader.u16());\n            case 26:\n                return this.readTagRaw(this.reader.u32());\n            case 27:\n                return this.readTagRaw(Number(this.reader.u64()));\n            default:\n                throw 1;\n        }\n    }\n    readTagRaw(tag) {\n        return new JsonPackExtension_1.JsonPackExtension(tag, this.val());\n    }\n    readTkn(minor) {\n        switch (minor) {\n            case 0xf4 & 31:\n                return false;\n            case 0xf5 & 31:\n                return true;\n            case 0xf6 & 31:\n                return null;\n            case 0xf7 & 31:\n                return undefined;\n            case 0xf8 & 31:\n                return new JsonPackValue_1.JsonPackValue(this.reader.u8());\n            case 0xf9 & 31:\n                return this.f16();\n            case 0xfa & 31:\n                return this.reader.f32();\n            case 0xfb & 31:\n                return this.reader.f64();\n        }\n        if (minor <= 23)\n            return new JsonPackValue_1.JsonPackValue(minor);\n        throw 1;\n    }\n    f16() {\n        return (0, f16_1.decodeF16)(this.reader.u16());\n    }\n}\nexports.CborDecoderBase = CborDecoderBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CborDecoder = void 0;\nconst CborDecoderBase_1 = require(\"./CborDecoderBase\");\nconst JsonPackValue_1 = require(\"../JsonPackValue\");\nclass CborDecoder extends CborDecoderBase_1.CborDecoderBase {\n    readAsMap() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 5:\n                return this.readMap(minor);\n            default:\n                throw 0;\n        }\n    }\n    readMap(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readMapRaw(length);\n        else\n            return this.readMapIndef();\n    }\n    readMapRaw(length) {\n        const map = new Map();\n        for (let i = 0; i < length; i++) {\n            const key = this.val();\n            const value = this.val();\n            map.set(key, value);\n        }\n        return map;\n    }\n    readMapIndef() {\n        const map = new Map();\n        while (this.reader.peak() !== 255) {\n            const key = this.val();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.val();\n            map.set(key, value);\n        }\n        this.reader.x++;\n        return map;\n    }\n    skipN(n) {\n        for (let i = 0; i < n; i++)\n            this.skipAny();\n    }\n    skipAny() {\n        this.skipAnyRaw(this.reader.u8());\n    }\n    skipAnyRaw(octet) {\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 0:\n            case 1:\n                this.skipUNint(minor);\n                break;\n            case 2:\n                this.skipBin(minor);\n                break;\n            case 3:\n                this.skipStr(minor);\n                break;\n            case 4:\n                this.skipArr(minor);\n                break;\n            case 5:\n                this.skipObj(minor);\n                break;\n            case 7:\n                this.skipTkn(minor);\n                break;\n            case 6:\n                this.skipTag(minor);\n                break;\n        }\n    }\n    skipMinorLen(minor) {\n        if (minor <= 23)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n            default:\n                throw 1;\n        }\n    }\n    skipUNint(minor) {\n        if (minor <= 23)\n            return;\n        switch (minor) {\n            case 24:\n                return this.reader.skip(1);\n            case 25:\n                return this.reader.skip(2);\n            case 26:\n                return this.reader.skip(4);\n            case 27:\n                return this.reader.skip(8);\n            default:\n                throw 1;\n        }\n    }\n    skipBin(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.reader.skip(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipBinChunk();\n            this.reader.x++;\n        }\n    }\n    skipBinChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 2)\n            throw 2;\n        if (minor > 27)\n            throw 3;\n        this.skipBin(minor);\n    }\n    skipStr(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.reader.skip(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipStrChunk();\n            this.reader.x++;\n        }\n    }\n    skipStrChunk() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        if (major !== 3)\n            throw 4;\n        if (minor > 27)\n            throw 5;\n        this.skipStr(minor);\n    }\n    skipArr(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length >= 0)\n            this.skipN(length);\n        else {\n            while (this.reader.peak() !== 255)\n                this.skipAny();\n            this.reader.x++;\n        }\n    }\n    skipObj(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.skipN(length * 2);\n        else {\n            while (this.reader.peak() !== 255) {\n                this.skipAny();\n                if (this.reader.peak() === 255)\n                    throw 7;\n                this.skipAny();\n            }\n            this.reader.x++;\n        }\n    }\n    skipTag(minor) {\n        const length = this.skipMinorLen(minor);\n        if (length < 0)\n            throw 1;\n        this.skipAny();\n    }\n    skipTkn(minor) {\n        switch (minor) {\n            case 0xf8 & 31:\n                this.reader.skip(1);\n                return;\n            case 0xf9 & 31:\n                this.reader.skip(2);\n                return;\n            case 0xfa & 31:\n                this.reader.skip(4);\n                return;\n            case 0xfb & 31:\n                this.reader.skip(8);\n                return;\n        }\n        if (minor <= 23)\n            return;\n        throw 1;\n    }\n    validate(value, offset = 0, size = value.length) {\n        this.reader.reset(value);\n        this.reader.x = offset;\n        const start = offset;\n        this.skipAny();\n        const end = this.reader.x;\n        if (end - start !== size)\n            throw 8;\n    }\n    decodeLevel(value) {\n        this.reader.reset(value);\n        return this.readLevel();\n    }\n    readLevel() {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        const minor = octet & 31;\n        switch (major) {\n            case 4:\n                return this.readArrLevel(minor);\n            case 5:\n                return this.readObjLevel(minor);\n            default:\n                return super.readAnyRaw(octet);\n        }\n    }\n    readPrimitiveOrVal() {\n        const octet = this.reader.peak();\n        const major = octet >> 5;\n        switch (major) {\n            case 4:\n            case 5:\n                return this.readAsValue();\n            default:\n                return this.val();\n        }\n    }\n    readAsValue() {\n        const reader = this.reader;\n        const start = reader.x;\n        this.skipAny();\n        const end = reader.x;\n        return new JsonPackValue_1.JsonPackValue(reader.uint8.subarray(start, end));\n    }\n    readObjLevel(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readObjRawLevel(length);\n        else\n            return this.readObjIndefLevel();\n    }\n    readObjRawLevel(length) {\n        const obj = {};\n        for (let i = 0; i < length; i++) {\n            const key = this.key();\n            const value = this.readPrimitiveOrVal();\n            obj[key] = value;\n        }\n        return obj;\n    }\n    readObjIndefLevel() {\n        const obj = {};\n        while (this.reader.peak() !== 255) {\n            const key = this.key();\n            if (this.reader.peak() === 255)\n                throw 7;\n            const value = this.readPrimitiveOrVal();\n            obj[key] = value;\n        }\n        this.reader.x++;\n        return obj;\n    }\n    readArrLevel(minor) {\n        const length = this.readMinorLen(minor);\n        if (length >= 0)\n            return this.readArrRawLevel(length);\n        return this.readArrIndefLevel();\n    }\n    readArrRawLevel(length) {\n        const arr = [];\n        for (let i = 0; i < length; i++)\n            arr.push(this.readPrimitiveOrVal());\n        return arr;\n    }\n    readArrIndefLevel() {\n        const arr = [];\n        while (this.reader.peak() !== 255)\n            arr.push(this.readPrimitiveOrVal());\n        this.reader.x++;\n        return arr;\n    }\n    readHdr(expectedMajor) {\n        const octet = this.reader.u8();\n        const major = octet >> 5;\n        if (major !== expectedMajor)\n            throw 0;\n        const minor = octet & 31;\n        if (minor < 24)\n            return minor;\n        switch (minor) {\n            case 24:\n                return this.reader.u8();\n            case 25:\n                return this.reader.u16();\n            case 26:\n                return this.reader.u32();\n            case 27:\n                return Number(this.reader.u64());\n            case 31:\n                return -1;\n        }\n        throw 1;\n    }\n    readStrHdr() {\n        return this.readHdr(3);\n    }\n    readObjHdr() {\n        return this.readHdr(5);\n    }\n    readArrHdr() {\n        return this.readHdr(4);\n    }\n    findKey(key) {\n        const size = this.readObjHdr();\n        for (let i = 0; i < size; i++) {\n            const k = this.key();\n            if (k === key)\n                return this;\n            this.skipAny();\n        }\n        throw 9;\n    }\n    findIndex(index) {\n        const size = this.readArrHdr();\n        if (index >= size)\n            throw 10;\n        for (let i = 0; i < index; i++)\n            this.skipAny();\n        return this;\n    }\n    find(path) {\n        for (let i = 0; i < path.length; i++) {\n            const segment = path[i];\n            if (typeof segment === 'string')\n                this.findKey(segment);\n            else\n                this.findIndex(segment);\n        }\n        return this;\n    }\n}\nexports.CborDecoder = CborDecoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = void 0;\nconst CrdtReader_1 = require(\"../../util/binary/CrdtReader\");\nconst clock_1 = require(\"../../clock\");\nconst PatchBuilder_1 = require(\"../../PatchBuilder\");\nconst CborDecoder_1 = require(\"../../../json-pack/cbor/CborDecoder\");\nclass Decoder extends CborDecoder_1.CborDecoder {\n    constructor(reader = new CrdtReader_1.CrdtReader()) {\n        super(reader);\n    }\n    decode(data) {\n        const reader = this.reader;\n        reader.reset(data);\n        const sid = reader.vu57();\n        const time = reader.vu57();\n        const isServerClock = sid === 1;\n        const clock = isServerClock ? new clock_1.ServerClockVector(1, time) : new clock_1.ClockVector(sid, time);\n        this.patchSid = clock.sid;\n        const builder = (this.builder = new PatchBuilder_1.PatchBuilder(clock));\n        const map = this.val();\n        if (map instanceof Array)\n            builder.patch.meta = map[0];\n        this.decodeOperations();\n        return builder.patch;\n    }\n    decodeId() {\n        const reader = this.reader;\n        const [isSessionDifferent, x] = reader.b1vu56();\n        return isSessionDifferent ? new clock_1.Timestamp(reader.vu57(), x) : new clock_1.Timestamp(this.patchSid, x);\n    }\n    decodeTss() {\n        const id = this.decodeId();\n        const span = this.reader.vu57();\n        return (0, clock_1.interval)(id, 0, span);\n    }\n    decodeOperations() {\n        const reader = this.reader;\n        const length = reader.vu57();\n        for (let i = 0; i < length; i++)\n            this.decodeOperation();\n    }\n    decodeOperation() {\n        const builder = this.builder;\n        const reader = this.reader;\n        const octet = reader.u8();\n        const opcode = octet >> 3;\n        switch (opcode) {\n            case 0: {\n                const length = octet & 0b111;\n                builder.const(!length ? this.val() : this.decodeId());\n                break;\n            }\n            case 1: {\n                builder.val();\n                break;\n            }\n            case 2: {\n                builder.obj();\n                break;\n            }\n            case 3: {\n                builder.vec();\n                break;\n            }\n            case 4: {\n                builder.str();\n                break;\n            }\n            case 5: {\n                builder.bin();\n                break;\n            }\n            case 6: {\n                builder.arr();\n                break;\n            }\n            case 9: {\n                const obj = this.decodeId();\n                const val = this.decodeId();\n                builder.setVal(obj, val);\n                break;\n            }\n            case 10: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const tuples = [];\n                for (let i = 0; i < length; i++) {\n                    const key = this.val();\n                    if (typeof key !== 'string')\n                        continue;\n                    const value = this.decodeId();\n                    tuples.push([key, value]);\n                }\n                builder.insObj(obj, tuples);\n                break;\n            }\n            case 11: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const tuples = [];\n                for (let i = 0; i < length; i++) {\n                    const index = this.val();\n                    if (typeof index !== 'number')\n                        continue;\n                    const value = this.decodeId();\n                    tuples.push([index, value]);\n                }\n                builder.insVec(obj, tuples);\n                break;\n            }\n            case 12: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const str = reader.utf8(length);\n                builder.insStr(obj, after, str);\n                break;\n            }\n            case 13: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const buf = reader.buf(length);\n                if (!(buf instanceof Uint8Array))\n                    return;\n                builder.insBin(obj, after, buf);\n                break;\n            }\n            case 14: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const after = this.decodeId();\n                const elements = [];\n                for (let i = 0; i < length; i++)\n                    elements.push(this.decodeId());\n                builder.insArr(obj, after, elements);\n                break;\n            }\n            case 16: {\n                const length = octet & 0b111 || reader.vu57();\n                const obj = this.decodeId();\n                const what = [];\n                for (let i = 0; i < length; i++)\n                    what.push(this.decodeTss());\n                builder.del(obj, what);\n                break;\n            }\n            case 17: {\n                const length = octet & 0b111 || reader.vu57();\n                builder.nop(length);\n                break;\n            }\n            default: {\n                throw new Error('UNKNOWN_OP');\n            }\n        }\n    }\n}\nexports.Decoder = Decoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.decoder = exports.encode = exports.encoder = void 0;\nconst Encoder_1 = require(\"./Encoder\");\nconst Decoder_1 = require(\"./Decoder\");\nconst CrdtWriter_1 = require(\"../../util/binary/CrdtWriter\");\nconst writer = new CrdtWriter_1.CrdtWriter(1024 * 4);\nexports.encoder = new Encoder_1.Encoder(writer);\nconst encode = (patch) => {\n    return exports.encoder.encode(patch);\n};\nexports.encode = encode;\nexports.decoder = new Decoder_1.Decoder();\nconst decode = (buf) => {\n    return exports.decoder.decode(buf);\n};\nexports.decode = decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Encoder\"), exports);\ntslib_1.__exportStar(require(\"./Decoder\"), exports);\ntslib_1.__exportStar(require(\"./shared\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Patch = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operations = tslib_1.__importStar(require(\"./operations\"));\nconst clock_1 = require(\"./clock\");\nconst binary_1 = require(\"./codec/binary\");\nclass Patch {\n    constructor() {\n        this.ops = [];\n        this.meta = undefined;\n    }\n    static fromBinary(data) {\n        return (0, binary_1.decode)(data);\n    }\n    getId() {\n        const op = this.ops[0];\n        if (!op)\n            return undefined;\n        return op.id;\n    }\n    span() {\n        let span = 0;\n        for (const op of this.ops)\n            span += op.span();\n        return span;\n    }\n    nextTime() {\n        const ops = this.ops;\n        const length = ops.length;\n        if (!length)\n            return 0;\n        const lastOp = ops[length - 1];\n        return lastOp.id.time + lastOp.span();\n    }\n    rewriteTime(ts) {\n        const patch = new Patch();\n        const ops = this.ops;\n        const length = ops.length;\n        const patchOps = patch.ops;\n        for (let i = 0; i < length; i++) {\n            const op = ops[i];\n            if (op instanceof operations.DelOp)\n                patchOps.push(new operations.DelOp(ts(op.id), ts(op.obj), op.what));\n            else if (op instanceof operations.NewConOp)\n                patchOps.push(new operations.NewConOp(ts(op.id), op.val));\n            else if (op instanceof operations.NewVecOp)\n                patchOps.push(new operations.NewVecOp(ts(op.id)));\n            else if (op instanceof operations.NewValOp)\n                patchOps.push(new operations.NewValOp(ts(op.id)));\n            else if (op instanceof operations.NewObjOp)\n                patchOps.push(new operations.NewObjOp(ts(op.id)));\n            else if (op instanceof operations.NewStrOp)\n                patchOps.push(new operations.NewStrOp(ts(op.id)));\n            else if (op instanceof operations.NewBinOp)\n                patchOps.push(new operations.NewBinOp(ts(op.id)));\n            else if (op instanceof operations.NewArrOp)\n                patchOps.push(new operations.NewArrOp(ts(op.id)));\n            else if (op instanceof operations.InsArrOp)\n                patchOps.push(new operations.InsArrOp(ts(op.id), ts(op.obj), ts(op.ref), op.data.map(ts)));\n            else if (op instanceof operations.InsStrOp)\n                patchOps.push(new operations.InsStrOp(ts(op.id), ts(op.obj), ts(op.ref), op.data));\n            else if (op instanceof operations.InsBinOp)\n                patchOps.push(new operations.InsBinOp(ts(op.id), ts(op.obj), ts(op.ref), op.data));\n            else if (op instanceof operations.InsValOp)\n                patchOps.push(new operations.InsValOp(ts(op.id), ts(op.obj), ts(op.val)));\n            else if (op instanceof operations.InsObjOp)\n                patchOps.push(new operations.InsObjOp(ts(op.id), ts(op.obj), op.data.map(([key, value]) => [key, ts(value)])));\n            else if (op instanceof operations.NopOp)\n                patchOps.push(new operations.NopOp(ts(op.id), op.len));\n        }\n        return patch;\n    }\n    rebase(serverTime, transformHorizon) {\n        const id = this.getId();\n        if (!id)\n            throw new Error('EMPTY_PATCH');\n        const patchStartTime = id.time;\n        if (patchStartTime === serverTime)\n            return this;\n        const delta = serverTime - patchStartTime;\n        return this.rewriteTime((id) => {\n            const sessionId = id.sid;\n            const isServerTimestamp = sessionId === 1;\n            if (!isServerTimestamp)\n                return id;\n            const time = id.time;\n            if (time < transformHorizon)\n                return id;\n            return (0, clock_1.ts)(1, time + delta);\n        });\n    }\n    clone() {\n        return this.rewriteTime((id) => id);\n    }\n    toBinary() {\n        return (0, binary_1.encode)(this);\n    }\n    toString(tab = '') {\n        const id = this.getId();\n        let out = `${this.constructor.name} ${id ? (0, clock_1.toDisplayString)(id) : '(nil)'}!${this.span()}`;\n        for (let i = 0; i < this.ops.length; i++) {\n            const isLast = i === this.ops.length - 1;\n            out += `\\n${tab}${isLast ? 'ââ' : 'ââ'} ${this.ops[i].toString(tab + (isLast ? '  ' : 'â '))}`;\n        }\n        return out;\n    }\n}\nexports.Patch = Patch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s = exports.schema = exports.nodes = void 0;\nconst DelayedValueBuilder_1 = require(\"./DelayedValueBuilder\");\nvar nodes;\n(function (nodes) {\n    class con extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(raw) {\n            super((builder) => builder.const(raw));\n            this.raw = raw;\n            this.type = 'con';\n        }\n    }\n    nodes.con = con;\n    class str extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(raw) {\n            super((builder) => builder.json(raw));\n            this.raw = raw;\n            this.type = 'str';\n        }\n    }\n    nodes.str = str;\n    class bin extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(raw) {\n            super((builder) => builder.json(raw));\n            this.raw = raw;\n            this.type = 'bin';\n        }\n    }\n    nodes.bin = bin;\n    class val extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(value) {\n            super((builder) => {\n                const valId = builder.val();\n                const valueId = value.build(builder);\n                builder.setVal(valId, valueId);\n                return valId;\n            });\n            this.value = value;\n            this.type = 'val';\n        }\n    }\n    nodes.val = val;\n    class vec extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(value) {\n            super((builder) => {\n                const vecId = builder.vec();\n                const length = value.length;\n                if (length) {\n                    const elementPairs = [];\n                    for (let i = 0; i < length; i++) {\n                        const element = value[i];\n                        const elementId = element.build(builder);\n                        elementPairs.push([i, elementId]);\n                    }\n                    builder.insVec(vecId, elementPairs);\n                }\n                return vecId;\n            });\n            this.value = value;\n            this.type = 'vec';\n        }\n    }\n    nodes.vec = vec;\n    class obj extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(obj, opt) {\n            super((builder) => {\n                const objId = builder.obj();\n                const keyValuePairs = [];\n                const merged = { ...obj, ...opt };\n                const keys = Object.keys(merged);\n                const length = keys.length;\n                if (length) {\n                    for (let i = 0; i < length; i++) {\n                        const key = keys[i];\n                        const valueId = merged[key].build(builder);\n                        keyValuePairs.push([key, valueId]);\n                    }\n                    builder.insObj(objId, keyValuePairs);\n                }\n                return objId;\n            });\n            this.obj = obj;\n            this.opt = opt;\n            this.type = 'obj';\n        }\n        optional() {\n            return this;\n        }\n    }\n    nodes.obj = obj;\n    class arr extends DelayedValueBuilder_1.NodeBuilder {\n        constructor(arr) {\n            super((builder) => {\n                const arrId = builder.arr();\n                const length = arr.length;\n                if (length) {\n                    const valueIds = [];\n                    for (let i = 0; i < length; i++)\n                        valueIds.push(arr[i].build(builder));\n                    builder.insArr(arrId, arrId, valueIds);\n                }\n                return arrId;\n            });\n            this.arr = arr;\n            this.type = 'arr';\n        }\n    }\n    nodes.arr = arr;\n})(nodes || (exports.nodes = nodes = {}));\nexports.schema = {\n    con: (raw) => new nodes.con(raw),\n    str: (str) => new nodes.str(str || ''),\n    bin: (bin) => new nodes.bin(bin),\n    val: (val) => new nodes.val(val),\n    vec: (...vec) => new nodes.vec(vec),\n    obj: (obj, opt) => new nodes.obj(obj, opt),\n    map: (obj) => exports.schema.obj(obj),\n    arr: (arr) => new nodes.arr(arr),\n};\nexports.s = exports.schema;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./clock\"), exports);\ntslib_1.__exportStar(require(\"./operations\"), exports);\ntslib_1.__exportStar(require(\"./Patch\"), exports);\ntslib_1.__exportStar(require(\"./PatchBuilder\"), exports);\ntslib_1.__exportStar(require(\"./builder/schema\"), exports);\ntslib_1.__exportStar(require(\"./builder/Konst\"), exports);\ntslib_1.__exportStar(require(\"./builder/Tuple\"), exports);\ntslib_1.__exportStar(require(\"./builder/DelayedValueBuilder\"), exports);\n","import {\n  Model, Timespan, Timestamp, \n  ArrNode, BinNode, ConNode, ObjNode, StrNode, ValNode, VecNode\n} from \"json-joy/esm/json-crdt\"\nimport { Patch, s, konst } from \"json-joy/es2020/json-crdt-patch\"\n\n// @ts-ignore allow \"window.JSONJoy\"\n\twindow.JSONJoy = {\n\t  Model, Timespan, Timestamp,\n\t  ArrNode, BinNode, ConNode, ObjNode, StrNode, ValNode, VecNode,\n\t  Patch, Schema:s, konst\n\t}\n"],"names":["Timestamp","sid","time","__publicField","Timespan","span","ts","tss","tick","stamp","cycles","compare","ts1","ts2","t1","t2","s1","s2","containsId","span1","toDisplayString","id","session","interval","LogicalClock","timestamp","ClockVector","edge","clock","sessionId","peer","tab","last","i","lines","ServerClockVector","ConNode","val","valFormatted","printTree","children","str","isLast","fn","child","NewConOp","NewValOp","NewObjOp","NewVecOp","NewStrOp","NewBinOp","NewArrOp","InsValOp","obj","InsObjOp","data","out","InsVecOp","InsStrOp","ref","InsBinOp","InsArrOp","DelOp","what","spans","NopOp","len","RelativeTimestamp","sessionIndex","timeDiff","ClockTableEntry","index","ClockEncoder","entry","Slice$1","uint8","view","start","end","EMPTY_UINT8","EMPTY_VIEW","hasBuffer","utf8Write","from","textEncoder","Writer$1","allocSize","size","x0","x","oldUint8","newUint8","activeSlice","capacity","byteLength","remaining","total","required","totalRequired","result","slice","Slice","char","word","dword","qword","float","u8","u16","u32","u64","f32","f64","buf","length","maxLength","writeLength","offset","pos","value","extra","Writer","y","num","lo32","hi32","flag","firstByteMask","isFloat32","n","JsonPackExtension$1","tag","isSafeInteger","CborEncoderFast$1","writer","bool","int","uint","maxSize","lengthOffset","bytesWritten","arr","keys","key","item","CborEncoderFast","JsonPackExtension","map","CborEncoder","CrdtWriter","relativeId","doc","model","shift","table","root","majorOverlay","node","nodes.ConNode","nodes.ValNode","nodes.StrNode","nodes.ObjNode","nodes.VecNode","nodes.ArrNode","nodes.BinNode","elements","elementId","chunk","deleted","nodes","ClockDecoder","decoder","fromCharCode","decodeAscii","src","position","bytes","byte","decodeAsciiMax15","a","b","c","d","e","f","g","h","j","k","l","m","o","v18$1","points","code","octet2","octet3","octet4","unit","unit0","utf8Slice","shortDecoder","v18","midDecoder","longDecoder","Reader$1","bin","decodeUtf8","Reader","o1","o2","o3","o4","o5","o6","o7","o8","pow","decodeF16","binary","exponent","fraction","JsonPackValue$1","decodeUtf8$1","octet1","randomU32","min","max","randomU32_1","CacheItem","CachedUtf8Decoder$1","records","FIND_CHUNK","record","recordBytes","cachedValue","copy","sharedCachedUtf8Decoder$1","CachedUtf8Decoder","CborDecoderBase$1","reader","keyDecoder","sharedCachedUtf8Decoder","octet","major","minor","list","res","JsonPackValue","CborDecoderBase","CrdtReader","nodes.StrChunk","nodes.BinChunk","nodes.ArrChunk","ids","Model","nodes.RootNode","clockTableOffset","UNDEFINED","encoder","Encoder","Decoder","fanout","FanOut_1","FanOut","listener","listeners","r1","r2","unescapeComponent","component","parseJsonPointer","pointer","toPath","find","startNode","path","steps","step","ObjNode","nextNode","ArrNode","VecNode","MergeFanOut","fanouts","unsub","MicrotaskBufferFanOut","source","buffer","_a","MapFanOut","mapper","OnNewFanOut","NodeEvents","api","callback","NodeApi","ValNode","StrNode","BinNode","ext","ConApi","ValApi","json","self","childNode","VecApi","entries","builder","values","target","prop","receiver","ObjApi","StrApi","text","nextTime","after","nodeId","BinApi","ArrApi","valueIds","isUint8Array","patch","meta","ops","op","operations.NewConOp","operations.NewValOp","operations.NewObjOp","operations.NewVecOp","operations.NewStrOp","operations.NewBinOp","operations.NewArrOp","operations.InsValOp","operation","operations.InsObjOp","tuple","operations.InsVecOp","operations.InsStrOp","len1","len2","operations.InsBinOp","operations.InsArrOp","operations.DelOp","operations.NopOp","expectedMajor","segment","CborDecoder","PatchBuilder","isSessionDifferent","tuples","encode","decode","Patch$1","Patch","lastOp","patchOps","serverTime","transformHorizon","patchStartTime","delta","ORIGIN","VectorDelayedValue","slots","Konst$1","NodeBuilder","build","maybeConst","PatchBuilder$1","valueId","el","valId","vector","writes","Konst","drift","padding","ModelApi","drain","onLocalChangesUnsubscribe","onBeforeTransactionUnsubscribe","onTransactionUnsubscribe","RESERVED","DIFF","randomSessionId","Extensions","extension","clone","stringify","spacing","v","printBinary","left","right","rebalanceAfterInsert","p","isLeft","bf","isChildLeft","llRotate","lrRotate","rlRotate","rrRotate","nl","nlr","nbf","nlbf","nr","nrl","nrbf","insertRight","insertLeft","insert","comparator","curr","next","cmp","remove","tmp","vl","vp","vc","rRebalance","lRebalance","lbf","rl","nextD","u","ul","ur","print","vFormatted","content","bfFormatted","first","findOrNextLower","AvlNode","defaultComparator","AvlMap","clockVector","RootNode","clock.compare","clockOrSessionId","clock.ClockVector","clock.ServerClockVector","patches","_b","valueNode","old","clock.Timestamp","to","blob","newNode","_c","schema","hasExtensions","clock.toDisplayString","oldVal","currentId","extensionId","type","extNode","useCache","_view","header","rSplay","c2","c1","lSplay","rrSplay","c3","llSplay","lrSplay","rlSplay","splay2","pp","l2","llSplay2","lrSplay2","rlSplay2","rrSplay2","rSplay2","lSplay2","insertRight2","r","insertLeft2","insert2","remove2","mostRightChildFromLeft","printOctets","octets","compareById","updateLenOne","updateLenOneLive","dLen","prev","AbstractRga","rootId","afterTime","afterSid","currId","currIdSid","currIdTime","atId","atIdTime","atIdSid","atSpan","offsetInInsertAtChunk","found","at","chunkOffset","newChunk","idSid","idTime","chunkSpan","deleteStartsFromLeft","deleteStartsInTheMiddle","range","mid","leftLength","ticks","ranges","off","startChunk","parentPos","before","lLen","rLen","isSplit","leftId","leftNextTick","rightId","rightIdTime","rightIdSid","s","at2","ch1","ch2","id1","id2","nextCurr","splitLeftChunks","split","nextStampAfterSpan","leftSize","rightSize","ArrChunk","rightData","pair","elementNode","element","valueTree","BinChunk","combined","rightBuffer","StrChunk","con","raw","vec","vecId","elementPairs","opt","objId","keyValuePairs","merged","arrId","extendStatics","__extends","__","__assign","__rest","t","__decorate","decorators","desc","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","kind","descriptor","_","done","context","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","name","prefix","__metadata","metadataKey","metadataValue","__awaiter","_arguments","P","generator","adopt","resolve","reject","fulfilled","rejected","__generator","body","verb","__createBinding","k2","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","jl","__spreadArray","pack","__await","__asyncGenerator","q","resume","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","__importStar","mod","__importDefault","__classPrivateFieldGet","state","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","_SuppressedError","suppressed","message","__disposeResources","fail","rec","tslib_es6","types","exports","equal","contains","span2","tslib_1","require$$0","require$$1","require$$2","operations","clock_1","Slice_1","Writer_1","CrdtWriter_1","CrdtWriter$1","isFloat32_1","JsonPackExtension_1","CborEncoderFast_1","CborEncoder_1","CborEncoder$1","Encoder_1","require$$3","require$$4","Encoder$1","decodeAscii_1","v16","v18_1","v16_1","Reader_1","decodeUtf8_1","CrdtReader_1","CrdtReader$1","constants","Tuple","Konst_1","konst","DelayedValueBuilder","delayed","PatchBuilder_1","operations_1","isUint8Array_1","Patch_1","constants_1","Tuple_1","require$$5","require$$6","DelayedValueBuilder_1","require$$7","f16","JsonPackValue_1","v10","CachedUtf8Decoder_1","v10_1","CborDecoderBase_1","f16_1","sharedCachedUtf8Decoder_1","CborDecoder_1","CborDecoder$1","Decoder_1","Decoder$1","binary_1","require$$8","require$$9"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106]}